import base.
import pair.



BinaryParam ◂ cNat ➔ ★ =
  λ x : cNat . ∀ A : ★ . ∀ B : ★ . ∀ R : A ➔ B ➔ ★ . ∀ f : A ➔ A . ∀ g : B ➔ B .
    (∀ a : A . ∀ b : B . R a b ➔ R (f a) (g b)) ➔ (∀ a : A . ∀ b : B . R a b ➔ R (x · A f a) (x · B g b)).

Nat2 ◂ ★ = ι x : cNat . BinaryParam x .

Z2 ◂ Nat2 = [ cZ , Λ A . Λ B . Λ R . Λ f . Λ g . λ s . Λ a . Λ b . λ z . z ] .


S2 ◂ Nat2 ➔ Nat2 = λ n : Nat2 . [ cS n.1 , 
                              Λ A . Λ B . Λ R . Λ f. Λ g . λ s . Λ a . Λ b . λ z .
                                s -(n.1 · A f a) -(n.1 · B g b)
                                   (n.2 · A · B · R -f -g s -a -b z) ] .




prereb ◂ Π n : Nat2 . ∀ X : ★ . Π s : X ➔ X . Π z : X .  (n S2 Z2) s z ≃ n s z = λ n . Λ X . λ s . λ z . (n.2 · Nat2 · X · (λ m : Nat2 . λ l : X . m s z   ≃ l )
              -S2 -s (Λ a . Λ b . λ u . ρ+ u - β) -Z2 -z β) .


ret ◂ Nat2 ➔ Nat2 = λ n . n.1 · Nat2 S2 Z2 .

Induction ◂ Π x : Nat2 . ∀ Q : Nat2 ➔ ★ . (∀ x : Nat2 . Q (ret x) ➔ Q (S2 (ret x))) ➔ Q Z2 ➔ Q (ret x) =
  λ x . Λ Q . λ s . λ z . 
     ρ ς (prereb x · Nat2 S2 Z2) - (x.2 · Nat2 · Nat2 · (λ n1 : Nat2 . λ n2 : Nat2 . Q (ret n1)) -S2 -S2 (Λ a . Λ b . λ q . (s -a q)) -Z2 -Z2 z).



add ◂ Nat2 ➔ Nat2 ➔ Nat2 = λ n1 . λ n2 . Induction n1 · (λ _ : Nat2 . Nat2) (Λ _ . λ x . S2 x) n2 .

two ◂ Nat2 = S2 (S2 Z2) .
three ◂ Nat2 = S2 (S2 (S2 Z2)) .



add-zerol ◂ Π n : Nat2 . add Z2 n ≃ n = λ n . β .
add-zeror ◂ Π n : Nat2 . add (ret n) Z2 ≃ (ret n) = λ n . Induction n · (λ _ : Nat2 . add (ret n) Z2 ≃ (ret n)) (Λ _ : Nat2 . λ i . i) (prereb n · Nat2 (λ q . ((λ x : Nat2 . (S2 x)) q)) Z2) .


