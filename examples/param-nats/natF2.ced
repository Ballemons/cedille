import paramF2.
import sum.
import unit.

natF ◂ ★ ➔ ★ = λ X : ★ . Sum · Unit · X .

Functor-natF ◂ Functor · natF =
  Λ X . Λ Y . λ f . λ u . θ u (λ _ . in1 · Unit · Y mkunit) (λ n . in2 · Unit · Y (f n)) .
 
natFtype ◂ (Π X : ★ . (X ➔ ★) ➔ (natF · X ➔ ★)) =
  λ X : ★ . λ P : X ➔ ★ . λ u : natF · X .
    ↑ Z . u · (λ _ : Sum · Unit · X . Z) : ((Unit ➔ ☆) ➔ (X ➔ ☆) ➔ ☆)
            · (λ u : Unit . True)
            · P .

FunctorD-natF ◂ FunctorD · natF · natFtype =
  Λ X . Λ Y . λ f . λ u .
    θ u (λ _ . triv) f.

HomD-natF ◂ HomD · natF · natFtype Functor-natF =
  Λ X' . Λ X . Λ Y . Λ f . Λ x . λ u . u .
