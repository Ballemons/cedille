import paramF.
import sum.
import unit.
import false.

natF ◂ ★ ➔ ★ = λ X : ★ . Sum · Unit · X .

natF1 ◂ ∀ X : ★ . Unit ➔ natF · X = Λ X . λ a . in1 · Unit · X a. 

natF2 ◂ ∀ X : ★ . X ➔ natF · X = Λ X . λ x . in2 · Unit · X x. 

natFF ◂ Functor · natF =
  Λ X . Λ Y . λ f . λ u . θ u (in1 · Unit · Y) (λ x . in2 · Unit · Y (f x)) .
 
natFFF ◂ Π X : ★ . (X ➔ ★) ➔ (natF · X ➔ ★) =
  λ X : ★ . λ P : X ➔ ★ . λ u : natF · X .
    ∀ Z : natF · X ➔ ★ .
      (Π u : Unit . Z (natF1 · X u)) ➔
      (∀ x : X . P x ➔ Z (natF2 · X x)) ➔
      Z u .

natFFF1 ◂ ∀ X : ★ . ∀ P : X ➔ ★ .
            Π u : Unit . natFFF · X · P (natF1 · X u) =
   Λ X . Λ P . λ u . Λ Z . λ z . λ s . z u .

natFFF2 ◂ ∀ X : ★ . ∀ P : X ➔ ★ .
            ∀ x : X . P x ➔ natFFF · X · P (natF2 · X x) =
   Λ X . Λ P . Λ x . λ px . Λ Z . λ z . λ s . s -x px .            
          

natFFD ◂ FunctorD · natF · natFFF =
  Λ X . Λ Y . λ f . λ u .
    θ u (λ a . natFFF1 · X · Y a)
        (λ x . natFFF2 · X · Y -x (f x)) .

H-natF ◂ HomD · natF natFF · natFFF =
  Λ X' . Λ X . Λ Y . Λ f . λ x .
    θ x (λ a . λ u . ●) ● .

FF-eq-FFD-natF ◂ FF-eq-FFD-t · natF natFF · natFFF natFFD = Λ f . ε β.

idH-natF ◂ idH-t · natF natFF · natFFF H-natF =
  Λ X . λ x . Λ a . θ x (λ i . ρ (Unit-eta i) - ε β) (λ b . β) .

cNat ◂ ★ = C · natF .

Nat ◂ ★ = D · natF natFF · natFFF .

Hom1-natF ◂ Hom1F-t · natF natFF =
  Λ X . Λ f . Λ g . λ x .
    θ x (λ a . β) (λ b . β) .

Hom2-natF ◂ Hom2F-t · natF natFF =
  Λ X . Λ Y . Λ f . λ x . λ u . 
    θ x (λ a . ρ+ (Unit-eta a) - β) (λ b . ε ρ (u b) - β) .

in-Nat ◂ natF · Nat ➔ Nat = in · natF natFF · natFFF -Hom1-natF -Hom2-natF -natFFD -FF-eq-FFD-natF -H-natF -idH-natF .

zero ◂ Nat = in-Nat (in1 · Unit · Nat mkunit) !
suc ◂ Nat ➔ Nat = λ x . in-Nat (in2 · Unit · Nat x) !

ind-Nat ◂ ∀ P : Nat ➔ ★ .
          (∀ x : Nat . P x ➔ P (suc x)) ➔
          P zero ➔
          Π x : Nat . P x =
  Λ P . λ s . λ z .
    ind · natF natFF · natFFF -Hom1-natF -Hom2-natF -natFFD -FF-eq-FFD-natF -H-natF -idH-natF 
      · P (Λ x . λ u . ●) .
