import nat.

ctrm ◂ ★ = ∀ X : ★ . (X ➔ X ➔ X) ➔ (Nat ➔ (X ➔ X) ➔ X) ➔ (Nat ➔ X) ➔ X .

capp ◂ ctrm ➔ ctrm ➔ ctrm = λ c1 . λ c2 . Λ X . λ a . λ l . λ v . a (c1 · X a l v) (c2 · X a l v) .

cextend ◂ ∀ X : ★ . (Nat ➔ X) ➔ Nat ➔ X ➔ (Nat ➔ X) =
  Λ X . λ v . λ i . λ x . λ j . θ (eqnat i j) x (v j) .

clam ◂ Nat ➔ ctrm ➔ ctrm = λ i . λ c . Λ X . λ a . λ l . λ v . l i (λ x . c · X a l (cextend · X v i x)) .

cvar ◂ Nat ➔ ctrm = λ i . Λ X . λ a . λ l . λ v . v i .

subst ◂ (Nat ➔ ctrm) ➔ ctrm ➔ ctrm =
  λ s . λ t . Λ X . λ a . λ l . λ v . t · X a l (λ i . s i · X a l v) .

test = clam Z (capp (cvar Z) (cvar (S Z))) !

test2 = subst (λ x . θ (eqnat x (S Z)) (cvar Z) (cvar x)) test !

test3 = subst (λ x . θ (eqnat x Z) (cvar (S Z)) (cvar x)) test !

cctrm ◂ ★ = ∀ X : ★ . (X ➔ X ➔ X) ➔ (CNat ➔ (X ➔ X) ➔ X) ➔ (CNat ➔ X) ➔ X .
