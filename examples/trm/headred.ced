import bool.
import nat.
import subst.
import trm.
import trm-util.
import test-trms.

hnf ⇐ trm → Bool =
  λ t . θ t (λ t1 . λ _ . λ b1 . λ _ . and (not (is-lam t1)) b1) (λ _ . λ _ . λ N . N tt) (λ _ . tt) .

hnf omega-trm !
hnf Omega-trm !
            
% reduce the head redex if there is one, otherwise return the term
hred ⇐ trm → trm =
  λ t . θ t (λ t1 . λ t2 . λ r1 . λ _ . θ t1 (λ _ . λ _ . λ _ . λ _ . r1) (λ i . λ f . λ _ . subst t2 i f) (λ i . r1))
            (λ i . λ f . λ N . lam i (N (var i)))
            (λ i . var i) .

to-ctrm (hred (app omega-trm id-trm)) !
