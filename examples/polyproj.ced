S = λ n . λ s . λ z . s (n s z) .
Z = λ s . λ z . z .

Nat ∷ ν Nat : ★ | S ∈ Nat → Nat , Z ∈ Nat , · . 
        ι x : Nat . ∀ P : Nat → ★ . (∀ n : Nat . P n → P (S n)) → P Z → P x ⇐ ★ = 
  ν u , u' . 
   [ % kinding ctor set
     [ u ⇒ u , [ u , ✓ ]] ,
  
     % first typing of the ctor set
     [ ξ n . β ✓ , [ ✓ , ✓ ]] ,

     % second typing of the ctor set
     [ ξ n . [ u' n.1 , β (ξ P . ξ s . β (ξ z . β (s {n.1 n} (n.2 〈 P P 〉 s z))))] , 
             [ [ u' , ξ P . ξ s . β ( ξ z . β z) ] , ✓ ]] ,

     % kinding the body
     ξ x : u . ξ P : u ⇒ ✓ . (ξ n : u . P n ⇒ P (u' n)) ⇒ P u' ⇒ P x
   ]
⇐ ✓.

S ∷ S = ζ Nat . 
Z ∷ Z = ζ Nat .

stNat ∷ λ n . n ⇐ Nat → ∀ X : ★. (X → X) → X → X = 
  ξ n . β (ξ X. (χ ((χ n ⇒ β).2 〈 (ξ n . X) (λ n : Nat . X) 〉) ⇒ ((ξ n' . β ⇒ β) ⇒ β ⇒ β) · ((η∀ Z Z) ⇒ ✓ ⇒ ✓))) 
⇐ Nat ⇒ (ξ X : ✓ . (X ⇒ X) ⇒ X ⇒ X) .

polyvac-t ∷ λ n : Nat . λ A : ★ . (↑ n : ((☆ → ☆) → ☆ → ☆)) · (λ r : ★ . ∀ A : ★ . A → r) · A ⇐ Nat → ★ → ★ = 
ξ n . ξ A . (↑ X . ((rβ (stNat n) (stNat n)) 〈 X X 〉)
            : ((X ⇒ X) ⇒ X ⇒ X)) (ξ r . ξ A : ✓ . A ⇒ r) A 
⇐ Nat ⇒ ✓ ⇒ ✓ .

polyproj-t ∷ Π n : Nat . Π m : Nat . polyvac-t n · (∀ A : ★ . A → polyvac-t m · A) ⇐ ★ =
 (ξ n : Nat . ξ m : Nat . (polyvac-t n (ξ A : ✓ . A ⇒ polyvac-t m A))) 
⇐ ✓ 
.

polyvac ∷ λ n . λ a . n (λ r . λ x . r) a ⇐ Π n : Nat . ∀ A : ★ . A → polyvac-t n · A =
ξ n . β (ξ A . ξ a . β (χ ((χ n ⇒ β).2 〈 (ξ n . polyvac-t n A) (λ n : Nat . (polyvac-t n) · A) 〉
                        (ξ n' . ξ r . β (χ (ξ A' . ξ x . β (χ (χ r ⇒ β · β ✓ · β) ⇐ η↑ 2 ✓ ✓))
                                            ⇐ β · (✓ β) ✓ · β ✓ · β · β ✓ ✓ · β ✓ · β · β))
                        (χ a ⇐ β · β ✓ · β · β ✓ ✓ · β ✓ · β)) ⇒ β))
⇐ ξ n : Nat . ξ A : ✓ . (A ⇒ polyvac-t n A) .

polyproj ∷ λ n . λ m . polyvac n (λ a . polyvac m a) ⇐ polyproj-t =
ξ n . β (ξ m . β (polyvac n 〈 (ξ A : ✓ . A ⇒ (polyvac-t m A)) (∀ A : ★ . A → polyvac-t m · A)〉
                   (ξ A . ξ a . β (polyvac m 〈 A A 〉 a))))
⇐ polyproj-t.

test-polyproj ∷ polyproj (S (S Z)) (S Z) = polyproj (S (S Z)) (S Z) .

normalize test-polyproj .
