import Nat.
import List.
import Vec.
import Casts.
import ListDefs.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

appendV ◂ ∀ A : ★ .
  ∀ n : Nat . Vec · A n ➔
  ∀ m : Nat . Vec · A m ➔
  Vec · A (add n m)
  = Λ A . Λ n . λ xs . Λ m . λ ys .
  ρ (v2l · A -n xs).2 -
  ρ (v2l · A -m ys).2 -
  ρ (lengthDistAppendL · A (v2l · A -n xs).1 (v2l · A -m ys).1) -
  (l2v · A
    (appendL · A (v2l · A -n xs).1 (v2l · A -m ys).1)) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

appendNilV ◂ ∀ A : ★ .
  ∀ n : Nat . Π xs : Vec · A n . appendV xs nilV ≃ xs
  = Λ A . Λ n . λ xs . appendNilL · A (v2l · A -n xs).1 .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

appendAssocV ◂ ∀ A : ★ .
  ∀ n : Nat . Π xs : Vec · A n .
  ∀ m : Nat . Π ys : Vec · A m .
  ∀ o : Nat . Π zs : Vec · A o .
  appendV (appendV xs ys) zs ≃ appendV xs (appendV ys zs)
  = Λ A . Λ n . λ xs . Λ m . λ ys . Λ o . λ zs .
  appendAssocL · A
    (v2l · A -n xs).1
    (v2l · A -m ys).1
    (v2l · A -o zs).1 .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

concatV ◂ ∀ A : ★ . ∀ m : Nat . ∀ n : Nat .
  Vec · (Vec · A m) n ➔ Vec · A (mult n m)
  = Λ A . Λ m . Λ n . λ xss .
  ρ (v2l · (Vec · A m) -n xss).2 -
  ρ (lengthDistConcatL · A -m
      (cmapL · (Vec · A m) · (VecL · A m)
        -(v2lCast · A -m)
        (v2l · (Vec · A m) -n xss).1)) -
  (l2v · A (concatL · A
    (cmapL · (VecL · A m) · (List · A)
      -(interCast · (List · A) · (λ xs : List · A . m ≃ length xs))
      (cmapL · (Vec · A m) · (VecL · A m)
        -(v2lCast · A -m)
        (v2l · (Vec · A m) -n xss).1)))) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

concatDistAppendV ◂ ∀ A : ★ .
  ∀ n1 : Nat . ∀ n2 : Nat . Π xss : Vec · (Vec · A n1) n2 .
  ∀ m1 : Nat . ∀ m2 : Nat . Π yss : Vec · (Vec · A m1) m2 .
  appendV (concatV xss) (concatV yss) ≃ concatV (appendV xss yss)
  = Λ A . Λ n1 . Λ n2 . λ xss . Λ m1 . Λ m2 . λ yss .
  concatDistAppendL · A
    (cmapL · (VecL · A n1) · (List · A)
      -(interCast · (List · A) · (λ xs : List · A . n1 ≃ length xs))
      (cmapL · (Vec · A n1) · (VecL · A n1)
        -(v2lCast · A -n1)
        (v2l · (Vec · A n1) -n2 xss).1))
    (cmapL · (VecL · A m1) · (List · A)
      -(interCast · (List · A) · (λ ys : List · A . m1 ≃ length ys))
      (cmapL · (Vec · A m1) · (VecL · A m1)
        -(v2lCast · A -m1)
        (v2l · (Vec · A m1) -m2 yss).1)) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

