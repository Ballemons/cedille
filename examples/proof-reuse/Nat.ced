module ProofReuse.Nat.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Nat' ◂ ★ = ∀ X : ★ . X ➔ (X ➔ X) ➔ X.

zero' ◂ Nat' = Λ X . λ cZ . λ cS . cZ .

suc' ◂ Nat' ➔ Nat' = λ n . Λ X . λ cZ . λ cS . cS (n · X cZ cS) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

NatParam ◂ Nat' ➔ ★ = λ n' : Nat' .
  ∀ X : ★ . ∀ P : X ➔ ★ .
  ∀ cZ : X . ∀ cS : X ➔ X .
  P cZ ➔
  (∀ n : X . P n ➔ P (cS n)) ➔
  P (n' · X cZ cS) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Nat ◂ ★ = ι n' : Nat' . ι _ : (n' zero' suc' ≃ n') . NatParam n' .

zero ◂ Nat = [ zero' , [ β{zero'} ,
  Λ X . Λ P . Λ cZ . Λ cS . λ pZ . λ pS .
  pZ ] ] .

suc ◂ Nat ➔ Nat = λ n .
  [ suc' n.1 , [ ρ+ n.2.1 - β{suc' n.1} ,
  Λ X . Λ P . Λ cZ . Λ cS . λ pZ . λ pS .
  pS -(n.1 · X cZ cS) (n.2.2 · X · P -cZ -cS pZ pS) ] ] .

elimNat ◂ ∀ P : Nat ➔ ★ .
  P zero ➔
  (∀ n : Nat . P n ➔ P (suc n)) ➔
  Π n : Nat . P n
  = Λ P . λ pZ . λ pS . λ n .
  ρ ς n.2.1 -
  (n.2.2 · Nat · P -zero -suc pZ pS) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

add ◂ Nat ➔ Nat ➔ Nat = elimNat
  · (λ n : Nat . Nat ➔ Nat)
  (λ m . m)
  (Λ n . λ ih . λ m . suc (ih m)) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

mult ◂ Nat ➔ Nat ➔ Nat = elimNat
  · (λ n : Nat . Nat ➔ Nat)
  (λ m . zero)
  (Λ n . λ ih . λ m . add m (ih m)) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
