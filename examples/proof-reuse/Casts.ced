module ProofReuse.Casts.
import Nat.
import List.
import VecL.
import Vec.
import Cast.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

elimVecL ◂ ∀ A : ★ . ∀ P : Π n : Nat . VecL · A n ➔ ★ .
  P zero (nilU · A) ➔
  (∀ n : Nat . ∀ xs : VecL · A n . Π x : A . P n xs ➔ P (suc n) (consU · A -n x xs)) ➔
  ∀ n : Nat . Π xs : VecL · A n . P n xs
  = Λ A . Λ P . λ pN . λ pC . Λ n . λ xs .
  ρ xs.2 -
  (elimList · A
    · (λ ys : List · A . P (length · A ys) (l2u · A ys))
    pN
    (Λ ys . pC -(length · A ys) -(l2u · A ys))
    xs.1) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

cmapCastL ◂ ∀ A : ★ . ∀ B : ★ .
  Cast' · A · B ➾ Cast' · (List · A) · (List · B)
  = Λ A . Λ B . Λ c . elimList · A ·
  (λ xs : List · A . ι ys : List · B . ys ≃ xs)
  [ nilL · B , β{nilL · B} ]
  (Λ xs . λ x . λ ih .
    [ consL · B (cast' · A · B -c x) ih.1 ,
      ρ ih.2 - β{consL · B (cast' · A · B -c x) ih.1} ]) .

cmapL ◂ ∀ A : ★ . ∀ B : ★ . Cast' · A · B ➾ List · A ➔ List · B
  = Λ A . Λ B . Λ c .
    cast' · (List · A) · (List · B)
      -(cmapCastL · A · B -c) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

vs2usL ◂ ∀ A : ★ . ∀ n : Nat .
  List · (Vec · A n) ➔ List · (VecL · A n)
  = Λ A . Λ n . cmapL · (Vec · A n) · (VecL · A n)
    -(v2uCast · A -n) .

us2lsL ◂ ∀ A : ★ . ∀ n : Nat .
  List · (VecL · A n) ➔ List · (List · A)
  = Λ A . Λ n . cmapL · (VecL · A n) · (List · A)
    -(interCast · (List · A) · (λ xs : List · A . n ≃ length xs)) .

vs2lsL ◂ ∀ A : ★ . ∀ n : Nat .
  List · (Vec · A n) ➔ List · (List · A)
  = Λ A . Λ n . λ xss . us2lsL · A -n (vs2usL · A -n xss) .

v22l ◂ ∀ A : ★ . ∀ n1 : Nat . ∀ n2 : Nat .
  Vec · (Vec · A n1) n2 ➔ List · (List · A)
  = Λ A . Λ n1 . Λ n2 . λ xss .
  vs2lsL · A -n1 (v2l · (Vec · A n1) -n2 xss) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

vss2lssL ◂ ∀ A : ★ . ∀ n1 : Nat . ∀ n2 : Nat .
  List · (Vec · (Vec · A n1) n2) ➔ List · (List · (List · A))
  = Λ A . Λ n1 . Λ n2 .
  cmapL · (Vec · (Vec · A n1) n2) · (List · (List · A))
    -(compCast · (Vec · (Vec · A n1) n2) · (List · (Vec · A n1)) · (List · (List · A))
      -(cmapCastL · (Vec · A n1) · (List · A)
        -(v2lCast · A -n1))
      -(v2lCast · (Vec · A n1) -n2)) .

v222l ◂ ∀ A : ★ . ∀ n1 : Nat . ∀ n2 : Nat . ∀ n3 : Nat .
  Vec · (Vec · (Vec · A n1) n2) n3 ➔ List · (List · (List · A))
  = Λ A . Λ n1 . Λ n2 . Λ n3 . λ xsss .
  vss2lssL · A -n1 -n2 (v2l · (Vec · (Vec · A n1) n2) -n3 xsss) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
