import vector.
import nat-thms/compare.

rec semvec(trm : Nat → ★)(P : Π n : Nat . trm n → ★) : (n : Nat)(m : Nat)(s : Vector · (trm n) m)
| semvecCons : ∀ n : Nat . ∀ m : Nat . ∀ t : trm n . P n t → ∀ s : Vector · (trm n) m . semvec n m s → semvec n (S m) (Vcons · (trm n) -m t s),
  semvecNil : ∀ n : Nat . semvec n Z (Vnil · (trm n)) =
 ∀ Q : Π n : Nat . Π m : Nat . Π s : Vector · (trm n) m . semvec n m s → ★.
   (∀ n : Nat . ∀ m : Nat . ∀ t : trm n . Π u : P n t. ∀ s : Vector · (trm n) m . Π v : semvec n m s .
      Q n m s v → Q n (S m) (Vcons · (trm n) -m t s) (semvecCons -n -m -t u -s v)) →
   (∀ n : Nat . Q n Z (Vnil · (trm n)) (semvecNil -n)) →
   Q n m s self
with
  semvecCons = Λ n . Λ m . Λ t . λ ut . Λ s . λ v .
                 Λ Q . λ c . λ ni . c -n -m -t ut -s v (v · Q c ni),
  semvecNil = Λ n . Λ Q . λ c . λ ni . ni -n 
.

vectorToSemvec ⇐ ∀ trm : Nat → ★ . ∀ P : Π n : Nat . trm n → ★ . ∀ n1 : Nat . ∀ n : Nat . ∀ m : Nat . ∀ f : trm n1 → trm n .
                 (Π t : trm n1. P n (f t)) → Π s : Vector · (trm n1) m .
                 semvec · trm · P n m (Vmap · (trm n1) · (trm n) -m f s) =
   Λ trm . Λ P . Λ n1 . Λ n . Λ m . Λ f . λ uf . λ s .
     s · (λ m : Nat . λ s : Vector · (trm n1) m . semvec · trm · P n m (Vmap · (trm n1) · (trm n) -m f s))
       (Λ m . λ t . λ s . λ r .
              (semvecCons · trm · P -n -m -(f t) (uf t) -(Vmap · (trm n1) · (trm n) -m f s) r))
       (semvecNil · trm · P -n). 

semvecComp ⇐ ∀ trm : Nat → ★ . ∀ m : Nat . ∀ n1 : Nat . ∀ n : Nat . Π s1 : Vector · (trm n1) m . ∀ s : Vector · (trm n) n1 .
             (λ a . λ l . λ v . vectorToSemvec (λ t . t a l (vectorToSemvec (λ t . t a l v) s)) s1 
            ≃ λ a . λ l . λ v . vectorToSemvec (λ t . t a l v)
                                        (Vmap (λ t . λ a . λ l . λ v . t a l (vectorToSemvec (λ t . t a l v) s)) s1)) =
 Λ trm . Λ m . Λ n1 . Λ n . λ s1 . Λ s .
   θ<m s1> s1
     (Λ m . λ t . λ s1 . λ ih .
        χ (λ a . λ l . λ v . semvecCons (t a l (vectorToSemvec (λ t . t a l v) s))
                                 ((λ a . λ l . λ v . (vectorToSemvec (λ t . t a l (vectorToSemvec (λ t . t a l v) s)) s1)) a l v)
         ≃ λ a . λ l . λ v . semvecCons (t a l (vectorToSemvec (λ t . t a l v) s))
                                  ((λ a . λ l . λ v . vectorToSemvec (λ t . t a l v)
                                                        (Vmap (λ t . λ a . λ l . λ v . t a l (vectorToSemvec (λ t . t a l v) s)) s1)) a l v)) -
        ρ ih - β)
     β .
           
semvecLast ⇐ ∀ trm : Nat → ★ . ∀ P : Π n : Nat. trm n → ★ . ∀ n : Nat . Π m : Nat . ∀ s : Vector · (trm n) m .
             semvec · trm · P n m s → Π i : Nat . ∀ u : Lt i m . P n (Vlast · (trm n) m s i -u) =
   Λ trm . Λ P . Λ n . λ m . Λ s . λ v .
      v · (λ n : Nat . λ m : Nat . λ s : Vector · (trm n) m . λ _ : semvec · trm · P n m s .
             Π m' : Nat . (m ≃ m') → Π i : Nat . ∀ u : Lt i m . P n (Vlast · (trm n) m s i -u))
        (Λ n . Λ m . Λ t . λ ut . Λ s . λ v . λ r . λ m' .
           θ m' (λ m' . λ _ . λ e . λ i . Λ u .
                  (θ+ (eqnat i m')
                      (λ v . ρ (π1 e) - ρ (χ (Vlast (S m') (Vcons t s) i ≃ t) - εl ρ v - β) - ut)
                      (λ v . ρ (χ (Vlast (S m) (Vcons t s) i ≃ Vlast m s i) - ρ (π1 e) - εl ρ v - β) -
                             (r m' (π1 e) i -(Lt-not-eqnat i m u (ρ (π1 e) - v))))))
                (λ e . δ e))
        (Λ n . λ m' . λ e . λ i . Λ u . δ (Not-Lt-Z i u · (tt ≃ ff)))
        m β.

semvecLastLem ⇐ ∀ trm : Nat → ★ . ∀ n : Nat . Π m : Nat . Π s : Vector · (trm n) m . Π i : Nat . Lt i m → 
                (λ a . λ l . λ v . semvecLast m (vectorToSemvec (λ t . t a l v) s) i ≃
                 Vlast m s i) =
  Λ trm . Λ n . λ m . λ s . 
    s · (λ m : Nat . λ s : Vector · (trm n) m . Π m' : Nat . (m ≃ m') → Π i : Nat . Lt i m →
             (λ a . λ l . λ v . semvecLast m (vectorToSemvec (λ t . t a l v) s) i ≃
                 Vlast m s i))
      (Λ m . λ h . λ t . λ ih . λ m' . 
         θ+ m'
            (λ m' . λ _ . λ e1 . λ e2 . λ i . λ u .
               ρ+ (χ (eqnat i m ≃ eqnat i m') - ρ (π1 (ρ e1 - e2)) - β) -
                 (θ+ (eqnat i m')
                     (λ v . ρ+ v - β)
                     (λ v . ρ+ v - ε ρ (ih m' (π1 (ρ e1 - e2)) i (Lt-not-eqnat i m u (ρ (π1 (ρ e1 - e2)) - v))) - β)))
            (λ e1 . λ e2 . δ (ρ e1 - e2)))
      (λ _ . λ _ . λ i . λ u . δ (Not-Lt-Z i u · (tt ≃ ff)))
      m β.

semvecRepeat ⇐ ∀ trm : Nat → ★ . ∀ P : Π n : Nat . trm n → ★ . ∀ n : Nat . Π m : Nat. ∀ t : trm n . P n t → 
               semvec · trm · P n m (Vrepeat · (trm n) m t) =
   Λ trm . Λ P . Λ n . λ m . Λ t . λ u .
     θ m (λ m . λ v . semvecCons · trm · P -n -m -t u -(Vrepeat · (trm n) m t) v)
         (semvecNil · trm · P -n).
