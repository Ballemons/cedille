import nat.
import trm.
import trm-util.

size-app = Λ _ : Nat → trm . Λ _ : trm . Λ _ : trm . λ s1 : Nat . λ s2 : Nat . S (add s1 s2) .
size-lam = Λ _ : Nat → trm . Λ _ : Nat . Λ _ : trm . λ N : (∀ _ : trm . Nat → Nat) . S (N -(var Z) one) .
size-var = λ _ : Nat . one .

size ⇐ trm → Nat = 
  λ t . t · (λ _ : trm . Nat) size-app size-lam -(triv-subst) (mk-funceq · Nat · (λ i : Nat . Nat) size-var).

test ⇐ trm = lam Z (app (var Z) (lam (S Z) (var (S Z)))) !

toCNat (size test) !

depth-app = Λ _ : Nat → trm . Λ _ : trm . Λ _ : trm . λ s1 : Nat . λ s2 : Nat . S (max s1 s2) .
depth-lam = Λ _ : Nat → trm . Λ _ : Nat . Λ _ : trm . λ N : (∀ _ : trm . Nat → Nat) . S (N -(var Z) Z) .
depth-var = λ _ : Nat . Z .

depth ⇐ trm → Nat = 
  λ t . t · (λ _ : trm . Nat) depth-app depth-lam -(triv-subst) (mk-funceq · Nat · (λ i : Nat . Nat) depth-var).

toCNat (depth test) !

depth-Lte-lem ⇐ ∀ x : Nat . ∀ y : Nat . ∀ x' : Nat . ∀ y' : Nat.
                Lte x x' → Lte y y' → Lte (max x y) (add x' y') = ●.

test  = λ s : Nat → trm . λ i : Nat . λ f : trm . P (depth (subst s (lam i f))) !!
test2 = λ s : Nat → trm . λ i : Nat . λ f : trm . depth (subst (sextend · trm s i (var i)) f) !!

yo ⇐ Π x : Nat . Π y : Nat . Lte x y → Lte (S x) (S y) = λ x . λ y . λ u . u .


depth-Lte-size ⇐ Π t : trm . Lte (depth t) (size t) = 
  λ t . t · (λ t : trm . Lte (depth t) (size t))
          (Λ s . Λ t1 . Λ t2 . λ ih1 . λ ih2 .
	    depth-Lte-lem -(depth (subst s t1)) -(depth (subst s t2)) -(size (subst s t1)) -(size (subst s t2)) ih1 ih2)
	  (Λ s . Λ i . Λ f . λ ih . χ -
                                     ρ (trm-ext · (λ _ : trm . Nat) -depth-app -depth-lam (Λ s . Λ i . Λ f . Λ q . Λ q' . λ u . ε ρ (u -Z) - β)
                                       f -triv-subst
	                                -(extend · trm · (λ _ : trm . Nat) -(sextend · trm s i (var i))
					    (λ i' . (s i' · (λ _ : trm . Nat) depth-app depth-lam -triv-subst depth-var)) i -(var i) Z)
					-(λ i' . (sextend · trm s i (var i) i' · (λ _ : trm . Nat)
					            depth-app depth-lam -triv-subst depth-var)) ●) -
			             ρ (trm-ext · (λ _ : trm . Nat) -size-app -size-lam ● f -triv-subst
	                                -(extend · trm · (λ _ : trm . Nat) -(sextend · trm s i (var i))
					    (λ i' . (s i' · (λ _ : trm . Nat) size-app size-lam -triv-subst size-var)) i -(var i) one)
					-(λ i' . (sextend · trm s i (var i) i' · (λ _ : trm . Nat)
					            size-app size-lam -triv-subst size-var)) ●) -
			            (ih -(var i) β))
	  -triv-subst (λ i . β) .
