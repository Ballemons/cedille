import Nat.
import List.
import VecL.
import Coe.
import Coes.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

mapCompL ◂ ∀ A : ★ . ∀ B : ★ . ∀ C : ★ .
  Π f : A ➔ B . Π g : B ➔ C .
  Π ys : List · A .
  mapL (λ y . g (f y)) ys ≃ mapL g (mapL f ys)
  = Λ A . Λ B . Λ C . λ f . λ g . elimList · A ·
  (λ ys : List · A . mapL (λ y . g (f y)) ys ≃ mapL g (mapL f ys))
  β (Λ ys . λ x . λ ih .
    χ ((consL (g (f x)) (mapL (λ y . g (f y)) ys))
      ≃ (consL (g (f x)) (mapL g (mapL f ys))))
    - (ρ ih - β) ) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

mapPresLengthL ◂ ∀ A : ★ . ∀ B : ★ .
  Π f : A ➔ B . Π xs : List · A .
  length xs ≃ length (mapL f xs)
  = Λ A . Λ B . λ f . elimList · A ·
  (λ xs : List · A . length xs ≃ length (mapL f xs))
  β
  (Λ xs . λ x . λ ih . ρ+ ih - β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

appendL ◂ ∀ A : ★ . List · A ➔ List · A ➔ List · A
  = Λ A . elimList · A ·
  (λ xs : List · A . List · A ➔ List · A)
  (λ ys . ys)
  (Λ xs . λ x . λ ih . λ ys . consL · A x (ih ys)) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

appendNilL ◂ ∀ A : ★ .
  Π xs : List · A . appendL xs nilL ≃ xs
  = Λ A . elimList · A
  · (λ xs : List · A . appendL xs nilL ≃ xs)
  β
  (Λ xs . λ x . λ ih . ρ+ ih - β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

appendAssocL ◂ ∀ A : ★ .
  Π xs : List · A .
  Π ys : List · A .
  Π zs : List · A .
  appendL (appendL xs ys) zs ≃ appendL xs (appendL ys zs)
  = Λ A . elimList · A ·
  (λ xs : List · A .
    Π ys : List · A .
    Π zs : List · A .
    appendL (appendL xs ys) zs ≃ appendL xs (appendL ys zs))
  (λ ys . λ zs . β)
  (Λ xs . λ x . λ ih . λ ys . λ zs .
    ρ+ (ih ys zs) - β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

lengthDistAppendL ◂ ∀ A : ★ .
  Π xs : List · A .
  Π ys : List · A .
  add (length xs) (length ys) ≃ length (appendL xs ys)
  = Λ A . elimList · A ·
  (λ xs : List · A . Π ys : List · A .
    add (length xs) (length ys) ≃ length (appendL xs ys))
  (λ ys . β)
  (Λ xs . λ x . λ ih . λ ys . ρ+ (ih ys) - β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

concatL ◂ ∀ A : ★ . List · (List · A) ➔ List · A
  = Λ A . elimList · (List · A) ·
  (λ xss : List · (List · A) . List · A)
  (nilL · A)
  (Λ xss . λ xs . λ ih . appendL · A xs ih) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

concatIdL ◂ ∀ A : ★ . Π xs : List · A .
  concatL (mapL injL xs) ≃ xs
  = Λ A . elimList · A ·
  (λ xs : List · A . concatL (mapL injL xs) ≃ xs)
  β
  (Λ xs . λ x . λ ih . ρ+ ih - β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

lengthDistConcatL ◂ ∀ A : ★ . ∀ n : Nat .
  Π xss : List · (VecL · A n) .
  mult (length xss) n ≃ length (concatL xss)
  = Λ A . Λ n . elimList · (VecL · A n) ·
  (λ xss : List · (VecL · A n) . mult (length xss) n ≃ length (concatL xss))
  β
  (Λ xss . λ xs . λ ih .
    ρ+ ih -
    ρ xs.2 -
    ρ+ ς (lengthDistAppendL · A xs.1 (concatL · A (us2lsL · A -n xss))) -
    β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

concatDistAppendL ◂ ∀ A : ★ .
  Π xss : List · (List · A) .
  Π yss : List · (List · A) .
  appendL (concatL xss) (concatL yss) ≃ concatL (appendL xss yss)
  = Λ A . elimList · (List · A) ·
  (λ xss : List · (List · A) . Π yss : List · (List · A) .
    appendL (concatL xss) (concatL yss) ≃ concatL (appendL xss yss))
  (λ yss . β)
  (Λ xss . λ xs . λ ih . λ yss .
    ρ+ ς (ih yss) -
    ρ (appendAssocL · A xs (concatL · A xss) (concatL · A yss)) -
    β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

concatCompL ◂ ∀ A : ★ .
  Π xsss : List · (List · (List · A)) .
  concatL (mapL concatL xsss) ≃ concatL (concatL xsss)
  = Λ A . elimList · (List · (List · A))
  · (λ xsss : List · (List · (List · A)) .
    concatL (mapL concatL xsss) ≃ concatL (concatL xsss))
  β
  (Λ xsss . λ xss . λ ih .
    ρ+ ih -
    ρ+ (concatDistAppendL · A xss (concatL · (List · A) xsss)) -
    β) .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
