import Fixpoint.
import Functor. 
import Sigma.
import Product.
import Helper.
import Top.
import Bool.
import Unit.



cst ◂ Bool = true .
thm3 ◂ cst ≃ true = β .

Bug1 ◂ ∀ Q : Bool ➔ ★.
   Π cst : Bool .
   Q true ➔
   Q cst = Λ Q . ρ thm3 - (λ cst .  λ q . q) .

Evil ◂ Bool ➔ ★ = λ t : Bool . true ≃ t .

orwell ◂ true ≃ false = Bug1 · Evil false β .



Bug ◂  ∀ G : ★ ➔ ★ . Π fmap : Functor · G . Π Flaw1 : FunctorLaw1 · G fmap .
    Π e : FixIndM · G fmap . 

    ∀ Q : FixM · G ➔ ★ . 
    Π Qprop1 : ∀ e : FixM · G . Q e ➔ FixIndM · G fmap .
    Π Qprop2 : ∀ e : FixM · G . Π qe : Q e . ((Qprop1 qe) ≃ e) .

   (∀ R : ★ . ∀ cast : R ➔ (FixIndM · G fmap) . (∀ r : R . (cast r) ≃ r) ➾
    (Π r : R . Q (cast r).1) ➔
    (Π gr : G · R .  Q (inFixIndM · G fmap Flaw1 (fmap · R · (FixIndM · G fmap) cast gr ) ).1))
     ➔ Q e.1
     = Λ G . λ fmap . λ Flaw1 . 
       λ e . Λ Q . λ qp1 . λ qp2 . λ q .  e.2 · Q (Λ R . Λ cast . Λ ce . λ ih . λ gr . 
             (ρ (thm1 -β{fmap} -β{Flaw1} -β{fmap cast gr}  ) - 
               q) · R -●  -● ih gr)     .
