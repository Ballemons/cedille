import red.

red-inv-p ◂ trm ➔ trm ➔ ★ =
  λ t : trm . λ t' : trm . 
  (∀ X : ★ .
     (∀ f : trm ➔ trm . ∀ a : trm .
       (t ≃ app (lam f) a) ➔ (t' ≃ f a) ➔ X) ➔ 
     (∀ t1 : trm . ∀ t1' : trm . ∀ t2 : trm .
       (t ≃ app t1 t2) ➔ (t' ≃ app t1' t2) ➔ red t1 t1' ➔ X) ➔
     (∀ t1 : trm . ∀ t2 : trm . ∀ t2' : trm .
       (t ≃ app t1 t2) ➔ (t' ≃ app t1 t2') ➔ red t2 t2' ➔ X) ➔
     (∀ f : trm ➔ trm . ∀ f' : trm ➔ trm .
       (t ≃ lam f) ➔ (t' ≃ lam f') ➔
       (∀ t : trm . red (f t) (f' t)) ➔ X) ➔ X) .

red-inv-lem ◂ ∀ t : trm . ∀ t' : trm . red-inv-p t t' ➔ red t t' =
  Λ t . Λ t' . λ r .
    r · (red t t')
      (Λ f . Λ a . λ u1 . λ u2 . (ρ u1 - ρ u2 - (red-beta -f -a)))
      (Λ ta . Λ tb . Λ tc . λ u1 . λ u2 . λ r . (ρ u1 - ρ u2 - (red-app1 -ta -tb -tc r)))
      (Λ ta . Λ tb . Λ tc . λ u1 . λ u2 . λ r . (ρ u1 - ρ u2 - (red-app2 -ta -tb -tc r)))
      (Λ f . Λ f' . λ u1 . λ u2 . λ r . (ρ u1 - ρ u2 - (red-xi -f -f' r))).

red-inv ◂ ∀ t : trm . ∀ t' : trm . red t t' ➔ red-inv-p t t' =
    Λ t . Λ t' . λ r .
      r · red-inv-p
        (Λ f . Λ a . Λ X . λ beta . λ app1 . λ app2 . λ xi . beta -f -a β β)
        (Λ t1 . Λ t1' . Λ t2 . λ ih .
           Λ X . λ beta . λ app1 . λ app2 . λ xi .
             app1 -t1 -t1' -t2 β β (red-inv-lem -t1 -t1' ih))
        (Λ t1 . Λ t2 . Λ t2' . λ ih .
           Λ X . λ beta . λ app1 . λ app2 . λ xi .
             app2 -t1 -t2 -t2' β β (red-inv-lem -t2 -t2' ih))
        (Λ f . Λ f' . λ ih .
           Λ X . λ beta . λ app1 . λ app2 . λ xi .
             xi -f -f' β β (Λ t . red-inv-lem -(f t) -(f' t) (ih -t))) . 
