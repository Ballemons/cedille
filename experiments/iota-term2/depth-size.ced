import extras.
import nat-thms/compare.
import subst.
import trm.

depth ◂ trm ➔ Nat =
  λ x . x.1.1.1 · Nat
          [depth-app = λ f . λ a . S (max f a)]
          [depth-lam = λ r . S (r Z)]
          [depth-var = λ x . Z] .

size ◂ trm ➔ Nat =
  λ x . x.1.1.1 · Nat
         [size-app = λ f . λ a . S (add f a)]
         [size-lam = λ r . S (r one)]
         [size-var = λ x . one] .

% just uses parametricity
depth-size-lem ◂ Π t : trm . Lte (depth t) (size t) =
 λ x . param2-ptrm x.1.1 · Nat · Nat · Lte
          -depth-app -depth-lam -depth-var -size-app -size-lam -size-var
          Lte-max-add
          (Λ f1 . Λ f2 . λ u. u -Z -one β)
          (λ n . β).

depth-subst-lem ◂
  Π t : trm . ∀ d1 : Nat ➔ Nat . ∀ d2 : Nat ➔ Nat . (Π n : Nat . Lte (d1 n) (d2 n)) ➔ 
    Lte (t.1.1.1 · Nat depth-app depth-lam d1) (t.1.1.1 · Nat depth-app depth-lam d2 ) =
  λ t . Λ d1 . Λ d2 . λ u . param2-trm t · Nat · Nat · Lte -depth-app -depth-lam -d1 -depth-app -depth-lam -d2
      Lte-max-max (Λ f1 . Λ f2 . λ v . v -Z -Z β) u .

% uses subst-thm
depth-subst ◂ Π t : trm . Π s : Nat ➔ trm .
              Lte (depth t) (depth (subst t s)) =
     λ t . λ s . ρ (subst-thm t s) - (depth-subst-lem t -depth-var -(λ n : Nat . depth (s n)) (λ n . Z-Lte (depth (s n)))) .
