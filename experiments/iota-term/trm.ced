module Trm.

import product.
import sum.
import nat.
import cast.
import wSigma2.
import natExtras.
import true.

TrmAppF ◂ ★ ➔ ★ = λ R1 : ★ . Product · R1 · R1 .
TrmIF ◂ ★ ➔ ★ ➔ ★ =
  λ R1 : ★ . λ R2 : ★ . Sum · (TrmAppF · R1) · R2 .

import C · TrmIF.

TrmIFFun ◂ ∀ R1 : ★ . ∀ R2 : ★ . ∀ R1' : ★ . ∀ R2' : ★ . Cast · R1 · R1' ➔ Cast · R2 · R2' ➔ Cast · (TrmIF · R1 · R2) · (TrmIF · R1' · R2') =
  Λ R1 . Λ R2 . Λ R1' . Λ R2' . λ c1 . λ c2 .
    caste · (TrmIF · R1 · R2) · (TrmIF · R1' · R2')
      (λ d . d.1 · (TrmIF · R1' · R2')
              (λ p . p.1 · (TrmIF · R1' · R2')
                      (λ a . λ b . in1 · (TrmAppF · R1') · R2'
                                    (pair · R1' · R1' (cast · R1 · R1' -c1 a) (cast · R1 · R1' -c1 b))))
              (λ e . in2 · (TrmAppF · R1') · R2' (cast · R2 · R2' -c2 e)))
      -(λ d .
          θ<d> (ind-Sum · (TrmAppF · R1) · R2 d)
            (λ a . θ<a> (ind-Product · R1 · R1 a) (λ e . λ f . β))
            (λ a . β))            
.

appe' ◂ Π n : Nat . Trm' n ➔ Trm' n ➔ Trm' n
    = λ n . λ t1 . λ t2 .
        in' n (in1 · (TrmAppF · (Trm' n)) · (Trm' (S n))
                  (pair · (Trm' n) · (Trm' n) t1 t2)) .

abs' ◂ Π n : Nat . Trm' (S n) ➔ Trm' n
     = λ n . λ t .
        in' n (in2 · (TrmAppF · (Trm' n)) · (Trm' (S n)) t) .


embed-var ◂ Π n : Nat . Π m : Nat . Lt n m ➔ Trm' m =
  λ n . λ m' . λ pm' . (lt-S n m' pm').1 · (Trm' m') (λ pm' . λ em' . ρ ς em' - (var' pm')) .

embedTrm' ◂ Π n : Nat . Trm' n ➔ Π m : Nat . Lt n m ➔ Trm' m =
  λ n . λ t .
    (TrmUnfold' -n t).1 · (λ m : Nat . Π m : Nat . Lt n m ➔ Trm' m)
      · (λ n' : Nat . λ _ : Π m : Nat . Lt n m ➔ Trm' m . True)
      (λ m . λ p .
        mkWSigma2 · (Π m' : Nat . Lt n m' ➔ Trm' m')
                  · (λ _ : Π m' : Nat . Lt n m' ➔ Trm' m' . True)
             (embed-var n) -triv)
      [ β{λ n' . λ e1 . λ e2 . λ d . λ m' . λ pm' . d (λ a . a (λ x . λ y . appe' m' (e1 x m' pm') (e1 y m' pm'))) (λ a . abs' m' (e2 (embed-var n) a (S m') (LtS' n m' pm')))} ,
        λ n' . Λ val . Λ R1 . Λ R2 . Λ c1 . Λ c2 . λ e1 . λ e2 . λ d .
          λ m' . λ pm' .
            d.1 · (Trm' m')
              (λ a . a.1 · (Trm' m') (λ x . λ y . appe' m' (e1.1 x m' pm') (e1.1 y m' pm')))
              (λ a . abs' m' (e2.1 (embed-var n) -triv a (S m') (LtS' n m' pm')))] .
