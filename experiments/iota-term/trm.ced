module Trm.

import product.
import sum.
import nat.
import cast.
import RecTypeI.
import valuation.
import natExtras.
import trmC.
import is.
import top.

inTp ◂ (Nat ➔ ★) ➔ ★ = λ Trm : Nat ➔ ★ . Π n : Nat . TrmIF · (Trm n) · (Trm (S n)) ➔ Trm n.

TrmPrfAlg ◂ Π Trm : Nat ➔ ★ .
            Π Trm' : Nat ➔ ★ .
            Π in : inTp · Trm' .
            Π var : varTp · Trm'.
            Π P : Π x : Nat . Trm' x ➔ ★ .
            ★ =
  λ Trm : Nat ➔ ★ . λ Trm' : Nat ➔ ★ . λ in : inTp · Trm' . λ var : varTp · Trm' . λ P : (Π x : Nat . Trm' x ➔ ★) . 
    ι alg : Top .
    Π n : Nat . ∀ val : Top . ∀ R1 : ★ . ∀ R2 : ★ . 
    ∀ Reveal1 : Cast · R1 · (Trm n) .
    ∀ Reveal2 : Cast · R2 · (Trm (S n)) .
    ∀ reveal1 : Cast · R1 · (Trm' n) .
    ∀ reveal2 : Cast · R2 · (Trm' (S n)) .
    Π e1 : is · (Π r : R1 . P n (cast · R1 · (Trm' n) -reveal1 r)) (foldU1 alg val).
    Π e2 : is · (P (S n) (var n) ➔ Π r : R2 . P (S n) (cast · R2 · (Trm' (S n)) -reveal2 r)) (foldU2 n alg val) .
    Π d : TrmIF · R1 · R2 .
    P n (in n (cast · (TrmIF · R1 · R2) · (TrmIF · (Trm' n) · (Trm' (S n)))
                  -(TrmIFFun · R1 · R2 · (Trm' n) · (Trm' (S n)) reveal1 reveal2) d)).

InductiveTrm ◂ Π Trm : Nat ➔ ★ .
               Π Trm' : Nat ➔ ★ .
               Π in : inTp · Trm' .
               Π var : varTp · Trm' .               
               Π n : Nat . Trm' n ➔ ★ =
  λ Trm : Nat ➔ ★ . λ Trm' : Nat ➔ ★ . λ in : inTp · Trm' . λ var : varTp · Trm' .
  λ n : Nat . λ t : Trm' n .
    ∀ P : Π x : Nat . Trm' x ➔ ★.
    Π val : Valuation n · Trm' var · P .
    TrmPrfAlg · Trm · Trm' in var · P ➔
    P n t.
    
TrmF ◂ (Nat ➔ ★) ➔ Nat ➔ ★ =
  λ Trm : Nat ➔ ★ . λ n : Nat . ι x : Trm' n . InductiveTrm · Trm · Trm' in' var' n x .
    
Trm ◂ Nat ➔ ★ = Reci · Nat · TrmF .

TrmFFun ◂ RecFunctori · Nat · TrmF =
  Λ X . Λ Y . λ c .
    [ Λ i . λ d .
      [ d.1 ,
        Λ P . λ val . λ alg .
          d.2 · P val
            [β{alg},
             λ n . Λ val . Λ R1 . Λ R2 . Λ Reveal1 . Λ Reveal2 .
             Λ reveal1 . Λ reveal2 . λ e1 . λ e2 . λ d .
               alg.2 n -β{val} · R1 · R2
                 -[λ x . c.1 -n (Reveal1.1 x),ρ c.2 - ρ Reveal1.2 - β{λ x . c (Reveal1 x)}]
                 -[λ x . c.1 -(S n) (Reveal2.1 x),ρ c.2 - ρ Reveal2.2 - β{λ x . c (Reveal2 x)}]
                 -reveal1 -reveal2 e1 e2 d] ] ,  β].
        
TrmFold ◂ ∀ n : Nat . TrmF · Trm n ➔ Trm n =
  casti · Nat · (TrmF · Trm) · Trm -(recFoldi · Nat · TrmF -TrmFFun) .

TrmUnfold ◂ ∀ n : Nat . Trm n ➔ TrmF · Trm n =
  casti · Nat · Trm · (TrmF · Trm) -(recUnfoldi · Nat · TrmF -TrmFFun) .

foldTrm ◂ ∀ P : Π x : Nat . Trm' x ➔ ★ .
          TrmPrfAlg · Trm · Trm' in' var' · P ➔
          ∀ n : Nat .
          Valuation n · Trm' var' · P ➔
          Π d : Trm n .
          P n (TrmUnfold -n d).1 =
   Λ P . λ alg . Λ n . λ val . λ d .
     (TrmUnfold -n d).2 · P val alg.

