module RecTypeI.

import top.

𝒌(I : ★) = I ➔ ★ .

Casti ◂ Π I : ★ . 𝒌 · I ➔ 𝒌 · I ➔ ★ = λ I : ★ .  λ A : 𝒌 · I . λ B : 𝒌 · I .
       ι casti : ∀ i : I . A i ➔ B i . casti ≃ λ x . x.

casti ◂ ∀ I : ★ . ∀ A : 𝒌 · I . ∀ B : 𝒌 · I . Casti · I · A · B ➾ ∀ i : I . A i ➔ B i = 
  Λ I . Λ A . Λ B . Λ c . Λ i . λ a . (χ (ι _ : A i . B i) - [ a , c.1 -i a { ρ c.2 - β } ]).2 .

castei ◂ ∀ I : ★ . ∀ A : 𝒌 · I . ∀ B : 𝒌 · I . Π f : ∀ i : I . A i ➔ B i . (∀ i : I . Π a : A i . f a ≃ a) ➾ Casti · I · A · B =
  Λ I . Λ A . Λ B . λ f . Λ e . [ Λ i . λ a . (χ (ι x : A i . B i) - [a , f -i a {ς (e -i a)}]).2 , β] .

castComposei ◂ ∀ I : ★ . ∀ A : 𝒌 · I . ∀ B : 𝒌 · I . ∀ C : 𝒌 · I . Casti · I · A · B ➔ Casti · I · B · C ➔ Casti · I · A · C =
  Λ I . Λ A . Λ B . Λ C . λ c1 . λ ci . [ Λ i . λ a . casti · I · B · C -ci -i (casti · I · A · B -c1 -i a) , β] .

RecFunctori ◂ Π I : ★ . (𝒌 · I ➔ 𝒌 · I) ➔ ★ =
  λ I : ★ . λ F : 𝒌 · I ➔ 𝒌 · I . ∀ X : 𝒌 · I . ∀ Y : 𝒌 · I . Casti · I · X · Y ➔ Casti · I · (F · X) · (F · Y) .

Reci ◂ Π I : ★ . (𝒌 · I ➔ 𝒌 · I) ➔ 𝒌 · I = λ I : ★ . λ F : 𝒌 · I ➔ 𝒌 · I . λ i : I . ∀ X : 𝒌 · I . Casti · I · (F · X) · X ➾ X i. 

recCasti ◂ ∀ I : ★ . ∀ F : 𝒌 · I ➔ 𝒌 · I . ∀ X : 𝒌 · I . Casti · I · (F · X) · X ➾ Casti · I · (Reci · I · F) · X =
  Λ I . Λ F . Λ X . Λ c . [ Λ Y . λ d . d · X -c , β ].

recFoldi ◂ ∀ I : ★ . ∀ F : 𝒌 · I ➔ 𝒌 · I . RecFunctori · I · F ➾ Casti · I · (F · (Reci · I · F)) · (Reci · I · F) =
  Λ I . Λ F . Λ fmap . 
    [ Λ i . λ x . Λ X . Λ c .
      casti · I · (F · X) · X -c -i
        (casti · I · (F · (Reci · I · F)) · (F · X)
          -(fmap · (Reci · I · F) · X (recCasti · I · F · X -c)) -i x),
      β ].

recUnfoldi ◂ ∀ I : ★ . ∀ F : 𝒌 · I ➔ 𝒌 · I . RecFunctori · I · F ➾ Casti · I · (Reci · I · F) · (F · (Reci · I · F)) =
  Λ I . Λ F . Λ fmap . [Λ X . λ x . x · (F · (Reci · I · F)) -(fmap · (F · (Reci · I · F)) · (Reci · I · F) (recFoldi · I · F -fmap)) , β ].


