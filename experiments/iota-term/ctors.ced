import trm.
import nat-thms/compare.
import bool-thms.
import extras.

vare ◂ Nat ➔ ptrme = 
  λ n . [ [ cvar n ,
            Λ A . Λ B . Λ R . Λ app. Λ lam . Λ var . λ pa . λ pl . λ pv .
            pv n ] ,
            Λ A . Λ app . Λ lam . Λ s1 . Λ s2 . Λ u . ρ (u n (eqnat-refl n)) - β{cvar n} ].

var ◂ Nat ➔ trm =
  λ n . [ vare n ,
         Λ s . β{cvar n} ].

app ◂ trm ➔ trm ➔ trm =
  λ t1 . λ t2 . [ [ [ capp t1.1.1.1 t2.1.1.1 ,
                    Λ A . Λ B . Λ R . Λ app . Λ lam . Λ var . λ pa . λ pl . λ pv .
                    pa -(λ a . t1.1.1.1 · (B a) (app a) (lam a) (var a)) -(λ a . t2.1.1.1 · (B a) (app a) (lam a) (var a))
                        (t1.1.1.2 · A · B · R -app -lam -var pa pl pv) (t2.1.1.2 · A · B · R -app -lam -var pa pl pv) ] ,
                  Λ A . Λ app . Λ lam . Λ s1 . Λ s2 . Λ u .
                   ρ+ (t1.1.2 · A -app -lam -s1 -s2 -(λ n . λ v . u n (ρ+ v - β))) -
                   ρ+ (t2.1.2 · A -app -lam -s1 -s2 -(λ n . λ v . u n (ρ+ v - (Bool-tt-tt (free-in t1.1.1.1 n))))) - 
                    β{capp t1 t2} ] ,
                 Λ s. ρ+ (t1.2 -s) - ρ+ (t2.2 -s) - β{capp t1 t2} ].

lam1-nextvar ◂ (trm ➔ ctrm) ➔ Nat = λ f . S (maxvar (f (var Z))) .

lam1-abs ◂ (trm ➔ ctrm) ➔ ∀ X : ★ . (X ➔ X ➔ X) ➔ ((X ➔ X) ➔ X) ➔ (Nat ➔ X) ➔ (X ➔ X) =
  λ f . Λ X . λ a . λ l . λ v . λ x . f (var (lam1-nextvar f)) · X a l (update · X v (lam1-nextvar f) x) .

lam1 ◂ (trm ➔ ctrm) ➔ ctrm =
  λ f . Λ X . λ a . λ l . λ v . l (lam1-abs f · X a l v) .

lamh ◂ (trm ➔ trm) ➔ trm ➔ ctrm = λ f . λ a . (f a).1.1.1 .

% see ctors-lam.
