module PosVector.

import nat.
import natExtras.
import product.
import less.
import sum.

PosVector ◂ (Nat ➔ ★) ➔ Nat ➔ ★ =
  λ T : Nat ➔ ★ . λ n : Nat . 
  ∀ X : Nat ➔ ★ .
  X Z ➔
  (Π m : Nat . T m ➔ X m ➔ X (S m)) ➔
  X n.

PVNil ◂ ∀ T : Nat ➔ ★ . PosVector · T Z =
  Λ T . Λ X . λ nil . λ cons . nil .

PVCons ◂ ∀ T : Nat ➔ ★ . Π n : Nat . T n ➔ PosVector · T n ➔ PosVector · T (S n) =
  Λ T . λ n . λ h . λ t . Λ X . λ nil . λ cons .
    cons n h (t · X nil cons).

PVfromFun ◂ ∀ T:Nat➔★.Π n:Nat .
            (Π m:Nat .Lt m n➔T m) ➔
            PosVector·T n =
  Λ T .λ n .λ f . (NatInd n ·(λ m:Nat .Lte m n➔PosVector·T m)
    (λ _ .PVNil·T)
    (λ m .λ p .λ l .[l'=Lt-Lte m n l]- PVCons·T m (f m l') (p (Lte-Lt m n l'))))
    (Lten n) .

FunfromPV ◂ ∀ T:Nat➔★.Π n:Nat .
            PosVector·T n ➔
	    Π m:Nat .
	    Lt m n ➔
	    T m =
  Λ T .λ n .λ v .λ m .λ l .
    (v·(λ n:Nat .Lt m n➔T m)
       (λ l .(lt-Z m l)·(T m))
       (λ p .λ tp .λ ih .λ l .ind-Sum·(Lt m p)·{m≃p} (Lt-S m p l) ·(λ s:Sum·(Lt m p)·{m≃p} . T m) (λ l . ih l) (λ e .ρ e -tp)))
       l.
