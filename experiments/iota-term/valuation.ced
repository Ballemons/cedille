module Valuation.

import nat.
import natExtras.
import wSigma2.

Valuation' ◂ Π n : Nat . Π X : Nat ➔ ★ . Π I : Π n : Nat . X (S n) ➔ ★ . ★ =
  λ n : Nat . λ X : Nat ➔ ★ . λ I : Π n : Nat . X (S n) ➔ ★ .
    Π m : Nat . Lt m n ➔ wSigma2 · (X (S m)) · (I m).

updateValuation' ◂ Π n : Nat . ∀ X : Nat ➔ ★ . ∀ I : Π n : Nat . X (S n) ➔ ★ .
                   Valuation' n · X · I ➔ Π x : X (S n) . I n x ➾ Valuation' (S n) · X · I =
  λ n . Λ X . Λ I . λ val . λ xn . Λ ixn . λ m . λ u . 
    (Lt-S m n u).1 · (wSigma2 · (X (S m)) · (I m)) (λ u . val m u) (λ e . ρ e - (mkWSigma2 xn -ixn)).

{-
restrictValuation' ◂
  ∀ X : Nat ➔ ★ . Π n : Nat . Π m : Nat . Lte n m ➔ Valuation' m · X ➔ Valuation' n · X =
  Λ X . λ n . λ m . λ p . λ val . λ m' . λ p' .
    p.1 · (X (S m')) (λ p'' . val m' (Lt-trans m' n m p' p'')) (λ e . val m' (ρ ς e - p')) .
-}

varTp ◂ (Nat ➔ ★) ➔ ★ = λ Trm : Nat ➔ ★ . Π n : Nat . Trm (S n) .

Valuation ◂ Π n : Nat . Π Trm : Nat ➔ ★ . Π var : varTp · Trm . Π P : Π n : Nat . Trm n ➔ ★. Π I : Π m : Nat . P (S m) (var m) ➔ ★ . ★ =
  λ n : Nat . λ Trm : Nat ➔ ★ . λ var : varTp · Trm . λ P : Π n : Nat . Trm n ➔ ★ .
  λ I : Π n : Nat . P (S n) (var n) ➔ ★ .
    Π m : Nat . Π p : Lt m n . wSigma2 · (P (S m) (var m)) · (I m) .

updateValuation ◂ Π n : Nat . ∀ Trm : Nat ➔ ★ . ∀ var : varTp · Trm .
                  ∀ P : Π n : Nat . Trm n ➔ ★.
                  ∀ I : Π n : Nat . P (S n) (var n) ➔ ★.                  
                  Valuation n · Trm var · P · I ➔ 
                  Π p : P (S n) (var n) .
                  I n p ➾ 
                  Valuation (S n) · Trm var · P · I =
  λ n . Λ Trm . Λ var . Λ P . Λ I . λ val . λ xn . Λ ixn . λ m . λ u .
    (Lt-S m n u).1 · (wSigma2 · (P (S m) (var m)) · (I m)) (λ u . val m u) (λ e . ρ e - (mkWSigma2 xn -ixn)) .
