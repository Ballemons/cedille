module subst.

import trmC.
import trmD.
import nat.
import natExtras.
import valuation.
import true.

{- Substitution -}
subst ◂ Π n : Nat 
      . Trm n
      ➔ Valuation n · Trm var · (λ n : Nat . λ _ : Trm n . Trm n)
      		    · (λ n : Nat . λ m : Nat . λ p : Lt m n . λ _ : Trm n . True)
      ➔ Trm n
      = λ n . λ t .λ v .TrmRec n t·Trm -●·(λ n':Nat .λ _ : Trm (S n') .True) v
      	[β{λ n . λ eval1 . λ eval2 . λ d .
          d   (λ a . a (λ a1 . λ a2 . app n (eval1 a1) (eval1 a2)))
	      (λ a . abs n (eval2 (var n) a))},
	λ n . Λ val . Λ R1 . Λ R2 . Λ _ . Λ _ .
        λ eval1 . λ eval2 . λ d .
          d.1 · (Trm n)
	      (λ a . a.1 · (Trm n) (λ a1 . λ a2 . app n (eval1.1 a1) (eval1.1 a2)))
	      (λ a . abs n (eval2.1 (var n -(S n) -(lt-nSn n)) -triv a))].
