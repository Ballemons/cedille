module cedille-options where
open import lib
open import general-util

record options : Set where
  field include-path : ๐ string ร stringset
        use-cede-files : ๐น
        make-rkt-files : ๐น
        generate-logs : ๐น
        show-qualified-vars : ๐น
        erase-types : ๐น

        -- Internal use only
        during-elaboration : ๐น

default-options : options
default-options = record {
  include-path = [] , empty-stringset;
  use-cede-files = tt;
  make-rkt-files = ff;
  generate-logs = ff;
  show-qualified-vars = ff;
  erase-types = tt;
  during-elaboration = ff}

include-path-insert : string โ ๐ string ร stringset โ ๐ string ร stringset
include-path-insert s (l , ss) =
  if stringset-contains ss s
    then l , ss
    else s :: l , stringset-insert ss s

options-to-rope : options โ rope
options-to-rope ops =
  comment "Cedille Options File" โนโน [[ "\n" ]] โนโน
  comment "List of directories to search for imported files in" โนโน
  comment "Each directory should be space-delimited and inside double quotes" โนโน
  comment "The current file's directory is automatically searched first, before import-directories" โนโน
  comment "If a filepath is relative, it is considered relative to this options file" โนโน
  option "import-directories"
    (๐-to-string (ฮป fp โ "\"" ^ fp ^ "\"") " " (fst (options.include-path ops))) โนโน
  comment "Cache navigation spans for performance" โนโน
  option "use-cede-files" (๐น-s options.use-cede-files) โนโน
--  comment "Compile Cedille files to Racket after they are checked"โนโน
--  option "make-rkt-files" (๐น-s options.make-rkt-files) โนโน
  comment "Write logs to ~/.cedille/log" โนโน
  option "generate-logs" (๐น-s options.generate-logs) โนโน
  comment "Print variables fully qualified" โนโน
  option "show-qualified-vars" (๐น-s options.show-qualified-vars) โนโน
  comment "Print types erased" โนโน
  option "erase-types" (๐น-s options.erase-types)
  where ๐น-s : (options โ ๐น) โ string
        ๐น-s f = if f ops then "true" else "false"
        comment : string โ rope
        comment s = [[ "-- " ]] โนโน [[ s ]] โนโน [[ "\n" ]]
        option : (name : string) โ (value : string) โ rope
        option name value = [[ name ]] โนโน [[ " = " ]] โนโน [[ value ]] โนโน [[ ".\n\n" ]]
