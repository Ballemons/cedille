module Issue50.

Nat ◂ ★ = ∀ X : ★ . (X ➔ X) ➔ X ➔ X .
Z ◂ Nat = Λ X . λ f . λ a . a .
S ◂ Nat ➔ Nat = λ n . Λ X . λ f . λ a . f (n · X f a) .

add ◂ Nat ➔ Nat ➔ Nat
  = λ m. λ n. m S n.

-- `n` will never occur in the erasure normalized `wrong-add m n`
-- even so, our occurrence checker probably shouldn't perform normalization
wrong-add ◂ Nat ➔ Nat ➔ Nat
  = λ m. λ n. m S Z.

Vector ◂ ★ ➔ Nat ➔ ★ = λ A : ★ . λ n : Nat .
  ∀ X : Nat ➔ ★ .
    X Z ➔
    (∀ n : Nat . A ➔ X n ➔ X (S n)) ➔
    X n.

Vnil ◂ ∀ A : ★ . Vector · A Z =
  Λ A . Λ X . λ ni . λ c . ni .

Vcons ◂ ∀ A : ★ . ∀ n : Nat . A ➔ Vector · A n ➔ Vector · A (S n) =
  Λ A . Λ n . λ a . λ v . Λ X . λ ni . λ c . [ n' ◂ Nat = S n ] - c -n a (v · X ni c) .

Vcons' ◂ ∀ A : ★ . ∀ n : Nat . A ➔ Vector · A n ➔ Vector · A (S n) =
  Λ A . Λ n . λ a . λ v . Λ X . λ ni . λ c . [ n' ◂ Nat = n ] - c -n' a (v · X ni c) .

test1-fail ◂ Nat ➾ Nat = Λ n . [ n ◂ Nat = n ] - n .

test2-ok ◂ Nat ➾ Nat ➾ Nat
  = Λ n. Λ m. [ n = S Z ] - [ m = S n ] - add n m.

test3-fail ◂ Nat ➾ Nat ➾ Nat
  = Λ n. Λ m. [ n' = S Z ] - [ m = S n' ] - wrong-add n m.

-- test4-ok ◂ { λ x . [ n = x ] - x ≃ λ z . z } = β.

-- test5 ◂ Nat ➾ { Λ n . λ x . [ n' = n ] - x ≃ λ z . z } = Λ i. [ x = i ] - β .

-- in inspect buffer see {..........................}
-- when you view the erasure of it (C-i e), you should
-- see: λ x . x
test4 ◂ Nat ➾ Nat ➔ Nat = Λ n . λ x . [ n' = n ] - x .

