module Bool.
import Top.

ttu ◂ Top = β{λ t. λ f. t}.
ffu ◂ Top = β{λ t. λ f. f}.

Bool' ◂ Top ➔ ★ = λ x : Top. ∀ X : Top ➔ ★. X ttu ➔ X ffu ➔ X x.
Bool ◂ ★ = ι x : Top. Bool' x.
tt ◂ Bool = [ttu, Λ X. λ t. λ f. t].
ff ◂ Bool = [ffu, Λ X. λ t. λ f. f].

BoolInd ◂ Π b : Bool. ∀ Q : Bool ➔ ★. Q tt ➔ Q ff ➔ Q b =
  λ b. Λ Q. λ t. λ f. b.2 · (λ x : Top. ∀ y : Bool. {y ≃ x} ➾ Q y)
    (Λ y. Λ e. ρ e - t) (Λ y. Λ e. ρ e - f) -b -β.

if ◂ Bool ➔ ∀ X : ★. X ➔ X ➔ X =
  λ b. Λ X. b.2 · (λ x : Top. X).
ifD ◂ Π b : Bool. ∀ X : ★. ({b ≃ tt} ➾ X) ➔ ({b ≃ ff} ➾ X) ➔ X =
  λ b. Λ X. φ (θ<b> (BoolInd b) β β) -
    (BoolInd b · (λ b : Bool. ({b ≃ tt} ➾ X) ➔ ({b ≃ ff} ➾ X) ➔ X)
      (λ t. λ f. t -β) (λ t. λ f. f -β)) {b}.

--lIFt ◂ Bool ➔ ★ ➔ ★ ➔ ★ = λ b : Bool. ↑ X. if b · X : ☆ ➔↑ ☆ ➔↑ ☆.

not ◂ Bool ➔ Bool = λ a. [β{λ t. λ f. a f t}, Λ X. λ t. λ f. θ<a> (BoolInd a) f t].

and  ◂ Bool ➔ Bool ➔ Bool = λ a. λ b.
  [β{λ t. λ f. a (b t f) f}, Λ X. λ t. λ f. θ<a> (BoolInd a) (b.2 · X t f) f].
or   ◂ Bool ➔ Bool ➔ Bool = λ a. λ b.
  [β{λ t. λ f. a t (b t f)}, Λ X. λ t. λ f. θ<a> (BoolInd a) t (b.2 · X t f)].
xor  ◂ Bool ➔ Bool ➔ Bool = λ a. λ b.
  [β{λ t. λ f. a (b f t) (b t f)}, Λ X. λ t. λ f.
    θ<a> (BoolInd a) (θ<b> (BoolInd b) f t) (b.2 · X t f)].
nand ◂ Bool ➔ Bool ➔ Bool = λ a. λ b. not (and a b).
nor  ◂ Bool ➔ Bool ➔ Bool = λ a. λ b.
  [β{λ t. λ f. a f (b f t)}, Λ X. λ t. λ f. θ<a> (BoolInd a) f (θ<b> (BoolInd b) f t)].
xnor ◂ Bool ➔ Bool ➔ Bool = λ a. λ b.
  [β{λ t. λ f. a (b t f) (b f t)}, Λ X. λ t. λ f.
    θ<a> (BoolInd a) (b.2 · X t f) (θ<b> (BoolInd b) f t)].
iff  ◂ Bool ➔ Bool ➔ Bool = xnor.
imp  ◂ Bool ➔ Bool ➔ Bool = λ a. λ b. --if a b tt.
  [β{λ t. λ f. a (b t f) t}, Λ X. λ t. λ f. θ<a> (BoolInd a) (b.2 · X t f) t].

tt-ff-raa ◂ {tt ≃ ff} ➾ RAA = Λ e. δ - χ {tt ≃ ff} - ρ e - β.-- χ (lIFt tt · RAA · Top) - ρ e - β.
tt-ff-raa' ◂ ∀ X : ★. {tt ≃ ff} ➾ X =
  Λ X. Λ e. tt-ff-raa -e · X.
tt-ff-raa'' ◂ ∀ X : ★. {ff ≃ tt} ➾ X =
  Λ X. Λ e. tt-ff-raa -(ς e) · X.
