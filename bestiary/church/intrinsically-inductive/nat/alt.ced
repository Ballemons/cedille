import ../../cnat.

Inductive ◂ cNat ➔ ★ = λ x : cNat . ∀ Q : cNat ➔ ★ . Q cZ ➔ (∀ x : cNat . Q x ➔ Q (cS x)) ➔ Q x.

Nat ◂ ★ = ι x : cNat . Inductive x.

Z ◂ Nat = [ cZ , Λ X . λ z . λ s . z ] .
S ◂ Nat ➔ Nat = λ n . [ cS n.1 , Λ P . λ z . λ s . s -n.1 (n.2 · P z s) ] .

toNat ◂ cNat ➔ Nat = λ n . n · Nat Z S .

reflection ◂ Π n : Nat . toNat n ≃ n = λ n . n.2 · (λ n : cNat . toNat n ≃ n) β (Λ x' . λ ih . ρ+ ih - β) .

Ind ◂ Π x : Nat . ∀ Q : Nat ➔ ★ . Q Z ➔ (∀ x : Nat . Q x ➔ Q (S x)) ➔ Q x =
  λ x . Λ Q . λ z . λ s . 
    ρ ς (reflection x) -
      (x.2 · (λ x : cNat . Q (toNat x))
        z (Λ p . λ q . s -(toNat p) q)) .
      
