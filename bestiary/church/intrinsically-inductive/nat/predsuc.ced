module Predsuc.

import ../../cnat.
import nat.

predsuch ◂ Π n : Nat . snd (predh n) ≃ n =
  λ n . θ<n> (Induction n) β (Λ p . λ ih . ρ+ ih - β) .

predsuc ◂ Π n : Nat . pred (cS n) ≃ n = λ n . ρ+ (predsuch n) - β.

rebuild ◂ cNat ➔ cNat =
  λ n . Λ X . λ z . λ s . n · ((X ➔ X) ➔ X) (λ u . z) (λ g . λ h . h (g s)) s.

pred'such ◂ Π n : Nat . λ z . λ s . rebuild n z s ≃ n =
  λ n . θ<n> (Induction n) β (Λ x . λ ih . χ ((λ z . λ s . s ((λ z . λ s . rebuild x z s) z s)) ≃ (cS x)) - ρ ih - β) .

pred'suc ◂ Π n : Nat . pred' (cS n) ≃ n =
  λ n . χ (λ z . λ s . (cS n) (λ u . z) (λ g . λ h . h (g s)) (λ u . u) ≃ n) -
        χ (λ z . λ s . (λ g . λ h . h (g s)) (n (λ u . z) (λ g . λ h . h (g s))) (λ u . u) ≃ n) -
        χ (λ z . λ s . n (λ u . z) (λ g . λ h . h (g s)) s ≃ n) -
        (pred'such n).
