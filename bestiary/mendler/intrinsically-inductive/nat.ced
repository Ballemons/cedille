import ../cnat.

NatP ◂ cNat ➔ ★ =
  λ n : cNat .
    ∀ R : cNat ➔ ★ .
    R cZ ➔
    (∀ A : ★ . ∀ a : A . ∀ c : A ➔ cNat . R (c a) ➔ R (cS · A c a)) ➔
    R n.

Nat ◂ ★ = ι n : cNat . NatP n .

Z ◂ Nat = [ cZ, Λ R . λ z . λ s . z ] .

S ◂ ∀ A : ★ . (A ➔ Nat) ➔ A ➔ Nat =
  Λ A : ★ . λ e . λ d . [ cS · A (λ a . (e a).1) d,
                          Λ R . λ z . λ s . s · A -d -(λ a . (e a).1) (((λ a : A. e a) d).2 · R z s) ] .
