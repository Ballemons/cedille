import ACG-definitions.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%						%
%  Add-Defn : Addition is iterated succession	%
%						%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  Add-Defn ⇐ Π x : Nat . Π y : Nat .

  % Theorem

  add x y ≃ x ( λ p . S ) y =

  % Proof

  λ x . λ y . β .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%						%
%  Add-Ident : Z is the identity for addition	%
%						%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  Add-Ident-0 ⇐ Π n : Nat .

  % Theorem

  add Z n ≃ n =

  % Proof

  λ n . β .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  Add-Ident-1 ⇐ Π n : Nat .

  % Theorem

  add n Z ≃ n =
  
  % Inductive Step

  λ n . θ n ( λ p . λ h . εl ρ h
      	      	      	       - β )

  % Base Case
  
  β .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%						%
%  Add-Succ-Comm : Addition commutes with the	%
%    successor function				%
%						%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  Add-Succ-Comm-0 ⇐ Π n : Nat . Π m : Nat .

  % Theorem

  add ( S n ) m ≃ S ( add n m ) =

  % Proof

  λ n . λ m . β .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  Add-Succ-Comm-1 ⇐ Π n : Nat . Π m : Nat .

  % Theorem

  add n ( S m ) ≃ S ( add n m ) =

  % Inductive Step

  λ n . λ m . θ n ( λ p . λ h . εl ρ h
      	      	      	      	   - β )

  % Base Case

  β .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%						%
%  Add-Assoc : Addition is associative		%
%						%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  Add-Assoc ⇐ Π x : Nat . Π y : Nat . Π z : Nat .

  % Theorem

  add x ( add y z ) ≃ add ( add x y ) z =

  % Inductive Step

  λ x . λ y . λ z . θ x ( λ p . λ h . εl ρ h - β )

  % Base Case

  β .
