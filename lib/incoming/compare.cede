{"spans":[["Cedille source file (/space/guneratne/cedille-stuff/cedille/lib/incoming/compare.ced)",1,244,{}],["Constructor definition",209,239,{"type":"0 compare-t","explanation":"1 Definition of constructor GT","erasure":"2 (λ a . λ b . λ c . c)"}],["Term variable",238,239,{"expected-type":"0 (P (λ a' . λ b' . λ c' . c'))","type":"1 (P GT)"}],["Term variable",234,235,{"type":"0 (P GT)","hnf of type":"1 (P GT)"}],["Lambda abstraction (term-level)",232,239,{"type":"0 ((P GT) → (P (λ a' . λ b' . λ c . c)))"}],["Term variable",228,229,{"type":"0 (P EQ)","hnf of type":"1 (P EQ)"}],["Lambda abstraction (term-level)",226,239,{"type":"0 ((P EQ) → (P GT) → (P (λ a' . λ b . λ c . c)))"}],["Term variable",222,223,{"type":"0 (P LT)","hnf of type":"1 (P LT)"}],["Lambda abstraction (term-level)",220,239,{"type":"0 ((P LT) → (P EQ) → (P GT) → (P (λ a . λ b . λ c . c)))"}],["Type variable",216,217,{"kind":"0 (compare-t → ★)"}],["Erased lambda abstraction (term-level)",214,239,{"type":"0 (∀ P : (compare-t → ★) . ((P LT) → (P EQ) → (P GT) → (P (λ a . λ b . λ c . c))))"}],["Constructor declaration",51,65,{"explanation":"0 Declaration of a type for constructor GT"}],["Constructor definition",172,202,{"type":"0 compare-t","explanation":"1 Definition of constructor EQ","erasure":"2 (λ a . λ b . λ c . b)"}],["Term variable",201,202,{"expected-type":"0 (P (λ a' . λ b' . λ c' . b'))","type":"1 (P EQ)"}],["Term variable",197,198,{"type":"0 (P GT)","hnf of type":"1 (P GT)"}],["Lambda abstraction (term-level)",195,202,{"type":"0 ((P GT) → (P (λ a' . λ b' . λ c . b')))"}],["Term variable",191,192,{"type":"0 (P EQ)","hnf of type":"1 (P EQ)"}],["Lambda abstraction (term-level)",189,202,{"type":"0 ((P EQ) → (P GT) → (P (λ a' . λ b . λ c . b)))"}],["Term variable",185,186,{"type":"0 (P LT)","hnf of type":"1 (P LT)"}],["Lambda abstraction (term-level)",183,202,{"type":"0 ((P LT) → (P EQ) → (P GT) → (P (λ a . λ b . λ c . b)))"}],["Type variable",179,180,{"kind":"0 (compare-t → ★)"}],["Erased lambda abstraction (term-level)",177,202,{"type":"0 (∀ P : (compare-t → ★) . ((P LT) → (P EQ) → (P GT) → (P (λ a . λ b . λ c . b))))"}],["Constructor declaration",34,48,{"explanation":"0 Declaration of a type for constructor EQ"}],["Constructor definition",135,165,{"type":"0 compare-t","explanation":"1 Definition of constructor LT","erasure":"2 (λ a . λ b . λ c . a)"}],["Term variable",164,165,{"expected-type":"0 (P (λ a' . λ b' . λ c' . a'))","type":"1 (P LT)"}],["Term variable",160,161,{"type":"0 (P GT)","hnf of type":"1 (P GT)"}],["Lambda abstraction (term-level)",158,165,{"type":"0 ((P GT) → (P (λ a' . λ b' . λ c . a')))"}],["Term variable",154,155,{"type":"0 (P EQ)","hnf of type":"1 (P EQ)"}],["Lambda abstraction (term-level)",152,165,{"type":"0 ((P EQ) → (P GT) → (P (λ a' . λ b . λ c . a')))"}],["Term variable",148,149,{"type":"0 (P LT)","hnf of type":"1 (P LT)"}],["Lambda abstraction (term-level)",146,165,{"type":"0 ((P LT) → (P EQ) → (P GT) → (P (λ a . λ b . λ c . a)))"}],["Type variable",142,143,{"kind":"0 (compare-t → ★)"}],["Erased lambda abstraction (term-level)",140,165,{"type":"0 (∀ P : (compare-t → ★) . ((P LT) → (P EQ) → (P GT) → (P (λ a . λ b . λ c . a))))"}],["Constructor declaration",17,31,{"explanation":"0 Declaration of a type for constructor LT"}],["Recursive datatype definition",1,241,{"kind":"0 ★"}],["Constructor definitions (using lambda encodings)",135,239,{}],["Recursively defined type",5,14,{"definition":"0 (ι self : compare-t . ∀ P : (compare-t → ★) . ((P LT) → (P EQ) → (P GT) → (P self)))"}],["Application of a type to a term",117,123,{"expected kind":"0 ★","kind":"1 ★"}],["Term variable",119,123,{"expected-type":"0 compare-t","type":"1 compare-t"}],["Type variable",117,118,{"kind":"0 (compare-t → ★)"}],["Application of a type to a term",110,114,{"expected kind":"0 ★","kind":"1 ★"}],["Term variable",112,114,{"expected-type":"0 compare-t","type":"1 compare-t"}],["Type variable",110,111,{"kind":"0 (compare-t → ★)"}],["Arrow type",110,123,{"kind":"0 ★"}],["Application of a type to a term",103,107,{"expected kind":"0 ★","kind":"1 ★"}],["Term variable",105,107,{"expected-type":"0 compare-t","type":"1 compare-t"}],["Type variable",103,104,{"kind":"0 (compare-t → ★)"}],["Arrow type",103,123,{"kind":"0 ★"}],["Application of a type to a term",96,100,{"expected kind":"0 ★","kind":"1 ★"}],["Term variable",98,100,{"expected-type":"0 compare-t","type":"1 compare-t"}],["Type variable",96,97,{"kind":"0 (compare-t → ★)"}],["Arrow type",96,123,{"kind":"0 ★"}],["Type variable",72,73,{"kind":"0 (compare-t → ★)"}],["Star",88,89,{}],["Type variable",76,85,{"expected kind":"0 ★","kind":"1 ★"}],["Arrow kind",76,89,{"superkind":"0 □"}],["Implicit dependent function type",70,123,{"kind":"0 ★"}],["Type variable",56,65,{"expected kind":"0 ★","kind":"1 ★"}],["Type variable",39,48,{"expected kind":"0 ★","kind":"1 ★"}],["Type variable",22,31,{"expected kind":"0 ★","kind":"1 ★"}],["Parameters, indices, and constructor declarations for datatype compare-t",14,65,{}]]}
