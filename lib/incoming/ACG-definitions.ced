import bool.
import nat.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                               %
%  		     Numbers			%
%                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

one ⇐ Nat = S Z !

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                               %
%  		     Booleans			%
%                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

not ⇐ Bool → Bool = λ x . θ x ff tt .

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                               %
%  		 Nat Operations			%
%                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

mult ⇐ Nat → Nat → Nat = λ n . λ m . θ n ( λ pn . add m ) Z .

P ⇐ Nat → Nat = λ n . θ n ( λ p . λ n . p ) n .

subtract ⇐ Nat → Nat → Nat = λ n . λ m . θ m ( λ p . P ) n .


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                               %
%  		     Other			%
%                                               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

geqnat ⇐ Nat → Nat → Bool = λ m . λ n . eqnat ( subtract n m ) Z .

leqnat ⇐ Nat → Nat → Bool = λ m . λ n . eqnat ( subtract m n ) Z .



mod ⇐ Nat → Nat → Nat =
    λ a . λ b . θ a ( λ p . λ x . ( geqnat (S x) b ) · ( λ x : Bool . Nat ) Z ( S x ) ) Z .
