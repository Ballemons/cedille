import nat .

rec Vector (A : ★) : (n : Nat)
| Vcons : ∀ n : Nat . A → Vector n → Vector (S n) ,
  Vnil : Vector Z
=
  ∀ P : Π n : Nat . Vector n → ★ .
    (∀ n : Nat . Π a : A . Π v : Vector n . P n v → P (S n) (Vcons -n a v)) → 
    P Z Vnil → 
    P n self
  with
    Vcons = Λ n . λ a . λ v . Λ P . λ c . λ e . c -n a v (v · P c e) ,
    Vnil = Λ P . λ c . λ n . n 
.

Vmap ⇐ ∀ A : ★ . ∀ B : ★ . ∀ n : Nat . (A → B) → Vector · A n → Vector · B n =
  Λ A . Λ B . Λ n . λ f . λ v .
    v · (λ n : Nat . λ _ : Vector · A n . Vector · B n)
      (Λ n . λ a . λ v . λ r . Vcons · B -n (f a) r)
      (Vnil · B).
