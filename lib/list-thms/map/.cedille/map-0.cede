{"spans":[["Cedille source file (/mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced)",1,250,{}],["Term-level definition (checking)",15,247,{"summary":"0 map-append : ∀ A : ★ . ∀ B : ★ . ∀ f : (A → B) . Π l : (List · A) . Π l' : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))","erasure":"1 λ l . λ l' . (l (λ h . λ t . λ ih . β) β)"}],["Application of a term to a term",208,244,{"language-level":"0 term","expected-type":"1 ((map f (append l l')) ≃ (append (map f l) (map f l')))","type":"2 ((map f (append l l')) ≃ (append (map f l) (map f l')))"}],["Beta axiom",243,244,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((map f (append Nil l')) ≃ (append (map f Nil) (map f l')))"}],["Application of a term to a term",208,242,{"language-level":"0 term","type":"1 ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) Nil) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) l)"}],["Rho",233,241,{"language-level":"0 term","the equation":"1 ((map f (append t l')) ≃ (append (map f t) (map f l')))","type":"2 ((λ c . λ e . (c (f h) (t appendCons l' (λ h' . λ t' . λ r . (Cons (f h') r)) Nil) (t appendCons l' (λ h' . λ t' . λ r . (Cons (f h') r)) Nil c e))) ≃ (append (map f (Cons h t)) (map f l')))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",240,241,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ c . λ e . (c (f h) (append (map f t) (map f l')) (append (map f t) (map f l') c e))) ≃ (append (map f (Cons h t)) (map f l')))"}],["Term variable",235,237,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 225","symbol":"2 ih","type":"3 (λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) t","hnf of type":"4 ((map f (append t l')) ≃ (append (map f t) (map f l')))"}],["Epsilon",230,241,{"language-level":"0 term","type":"1 ((map f (append (Cons h t) l')) ≃ (append (map f (Cons h t)) (map f l')))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",225,227,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 ih","type":"3 (λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) t","hnf of type":"4 ((map f (append t l')) ≃ (append (map f t) (map f l')))"}],["Lambda abstraction (term-level)",223,241,{"language-level":"0 term","binder":"1 0","type":"2 ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) t) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) (Cons h t))"}],["Punctuation",223,224,{"not-for-navigation":"0 true"}],["Term variable",219,220,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 t","type":"3 List · A","hnf of type":"4 List · A"}],["Lambda abstraction (term-level)",217,241,{"language-level":"0 term","binder":"1 0","type":"2 Π t : (List · A) . (((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) t) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) (Cons h t)))"}],["Punctuation",217,218,{"not-for-navigation":"0 true"}],["Term variable",213,214,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 A","hnf of type":"4 A"}],["Lambda abstraction (term-level)",211,241,{"language-level":"0 term","binder":"1 0","type":"2 Π h : A . Π t : (List · A) . (((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) t) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) (Cons h t)))"}],["Punctuation",211,212,{"not-for-navigation":"0 true"}],["Punctuation",210,242,{"not-for-navigation":"0 true"}],["Application of a term to a type",208,209,{"language-level":"0 term","type":"1 (Π h : A . Π t : (List · A) . (((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) t) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) (Cons h t)))) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) Nil) → ((λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))) l)"}],["Term variable",208,209,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 187","symbol":"2 l","type":"3 List · A","hnf of type":"4 List · A"}],["Theta",206,245,{"language-level":"0 term","expected-type":"1 ((map f (append l l')) ≃ (append (map f l) (map f l')))","the motive":"2 λ l : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",193,195,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l'","type":"3 List · A","hnf of type":"4 List · A"}],["Lambda abstraction (term-level)",191,245,{"language-level":"0 term","binder":"1 0","type":"2 Π l' : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))"}],["Punctuation",191,192,{"not-for-navigation":"0 true"}],["Term variable",187,188,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l","type":"3 List · A","hnf of type":"4 List · A"}],["Lambda abstraction (term-level)",185,245,{"language-level":"0 term","binder":"1 0","type":"2 Π l : (List · A) . Π l' : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))"}],["Punctuation",185,186,{"not-for-navigation":"0 true"}],["Term variable",181,182,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 f","type":"3 A → B","hnf of type":"4 A → B"}],["Erased lambda abstraction (term-level)",179,245,{"language-level":"0 term","binder":"1 0","type":"2 ∀ f : (A → B) . Π l : (List · A) . Π l' : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))"}],["Punctuation",179,180,{"not-for-navigation":"0 true"}],["Type variable",175,176,{"language-level":"0 type","location":"1 missing - missing","symbol":"2 B","kind":"3 ★"}],["Erased lambda abstraction (term-level)",173,245,{"language-level":"0 term","binder":"1 0","type":"2 ∀ B : ★ . ∀ f : (A → B) . Π l : (List · A) . Π l' : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))"}],["Punctuation",173,174,{"not-for-navigation":"0 true"}],["Type variable",169,170,{"language-level":"0 type","location":"1 missing - missing","symbol":"2 A","kind":"3 ★"}],["Erased lambda abstraction (term-level)",167,245,{"language-level":"0 term","binder":"1 0","type":"2 ∀ A : ★ . ∀ B : ★ . ∀ f : (A → B) . Π l : (List · A) . Π l' : (List · A) . ((map f (append l l')) ≃ (append (map f l) (map f l')))"}],["Punctuation",167,168,{"not-for-navigation":"0 true"}],["Equation",110,159,{"language-level":"0 type","kind":"1 ★"}],["Term variable",156,158,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 81","symbol":"2 l'"}],["Term variable",154,155,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 50","symbol":"2 f"}],["Term variable",150,153,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 1549","symbol":"2 map"}],["Term variable",146,147,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 64","symbol":"2 l"}],["Term variable",144,145,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 50","symbol":"2 f"}],["Term variable",140,143,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 1549","symbol":"2 map"}],["Term variable",132,138,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 397","symbol":"2 append"}],["Term variable",126,128,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 81","symbol":"2 l'"}],["Term variable",124,125,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 64","symbol":"2 l"}],["Term variable",117,123,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 397","symbol":"2 append"}],["Term variable",114,115,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 50","symbol":"2 f"}],["Term variable",110,113,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 1549","symbol":"2 map"}],["Term variable",81,83,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l'","type":"3 List · A","hnf of type":"4 List · A"}],["Application of a type to a type",86,94,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Type variable",93,94,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 30","symbol":"2 A","expected kind":"3 ★","kind":"4 ★"}],["Type variable",86,90,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"2 List","kind":"3 ★ → ★"}],["Punctuation",79,80,{"not-for-navigation":"0 true"}],["Dependent function type",79,159,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",64,65,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l","type":"3 List · A","hnf of type":"4 List · A"}],["Application of a type to a type",68,76,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Type variable",75,76,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 30","symbol":"2 A","expected kind":"3 ★","kind":"4 ★"}],["Type variable",68,72,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"2 List","kind":"3 ★ → ★"}],["Punctuation",62,63,{"not-for-navigation":"0 true"}],["Dependent function type",62,159,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",50,51,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 f","type":"3 A → B","hnf of type":"4 A → B"}],["Type variable",58,59,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 40","symbol":"2 B","expected kind":"3 ★","kind":"4 ★"}],["Type variable",54,55,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/map/map-0.ced - 30","symbol":"2 A","expected kind":"3 ★","kind":"4 ★"}],["Arrow type",54,59,{"language-level":"0 type","kind":"1 ★"}],["Punctuation",48,49,{"not-for-navigation":"0 true"}],["Implicit dependent function type",48,159,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Type variable",40,41,{"language-level":"0 type","location":"1 missing - missing","symbol":"2 B","kind":"3 ★"}],["Star",44,45,{"language-level":"0 kind"}],["Punctuation",38,39,{"not-for-navigation":"0 true"}],["Implicit dependent function type",38,159,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Type variable",30,31,{"language-level":"0 type","location":"1 missing - missing","symbol":"2 A","kind":"3 ★"}],["Star",34,35,{"language-level":"0 kind"}],["Punctuation",28,29,{"not-for-navigation":"0 true"}],["Implicit dependent function type",28,159,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Import of another source file",1,13,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 1"}]]}
