{"spans":[["Cedille source file (/mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced)",1,228,{}],["Term-level definition (checking)",26,225,{"summary":"0 length-append : ∀ A : ★ . Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","erasure":"1 λ l1 . λ l2 . (l1 (λ h . λ t . λ ih . β) β)"}],["Application of a term to a term",185,223,{"language-level":"0 term","expected-type":"1 ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","type":"2 ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Beta axiom",222,223,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((length (append Nil l2)) ≃ (add (length Nil) (length l2)))"}],["Application of a term to a term",185,221,{"language-level":"0 term","type":"1 ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) Nil) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) l1)"}],["Rho",211,219,{"language-level":"0 term","the equation":"1 ((length (append t l2)) ≃ (add (length t) (length l2)))","type":"2 ((λ s . λ z . (s (t appendCons l2 lengthCons Z) (t appendCons l2 lengthCons Z s z))) ≃ (add (length (Cons h t)) (length l2)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",218,219,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ s . λ z . (s (add (length t) (length l2)) (add (length t) (length l2) s z))) ≃ (add (length (Cons h t)) (length l2)))"}],["Term variable",213,215,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 203","symbol":"2 ih","type":"3 (λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t","hnf of type":"4 ((length (append t l2)) ≃ (add (length t) (length l2)))"}],["Epsilon",208,219,{"language-level":"0 term","type":"1 ((length (append (Cons h t) l2)) ≃ (add (length (Cons h t)) (length l2)))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",203,205,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 ih","type":"3 (λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t","hnf of type":"4 ((length (append t l2)) ≃ (add (length t) (length l2)))"}],["Lambda abstraction (term-level)",201,219,{"language-level":"0 term","binder":"1 0","type":"2 ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t))"}],["Punctuation",201,202,{"not-for-navigation":"0 true"}],["Term variable",197,198,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 t","type":"3 List · A","hnf of type":"4 List · A"}],["Lambda abstraction (term-level)",195,219,{"language-level":"0 term","binder":"1 0","type":"2 Π t : (List · A) . (((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t)))"}],["Punctuation",195,196,{"not-for-navigation":"0 true"}],["Term variable",191,192,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 A","hnf of type":"4 A"}],["Lambda abstraction (term-level)",189,219,{"language-level":"0 term","binder":"1 0","type":"2 Π h : A . Π t : (List · A) . (((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t)))"}],["Punctuation",189,190,{"not-for-navigation":"0 true"}],["Punctuation",188,221,{"not-for-navigation":"0 true"}],["Application of a term to a type",185,187,{"language-level":"0 term","type":"1 (Π h : A . Π t : (List · A) . (((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t)))) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) Nil) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) l1)"}],["Term variable",185,187,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 171","symbol":"2 l1","type":"3 List · A","hnf of type":"4 List · A"}],["Theta",183,224,{"language-level":"0 term","expected-type":"1 ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","the motive":"2 λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",178,180,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l2","type":"3 List · A","hnf of type":"4 List · A"}],["Lambda abstraction (term-level)",176,224,{"language-level":"0 term","binder":"1 0","type":"2 Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Punctuation",176,177,{"not-for-navigation":"0 true"}],["Term variable",171,173,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l1","type":"3 List · A","hnf of type":"4 List · A"}],["Lambda abstraction (term-level)",169,224,{"language-level":"0 term","binder":"1 0","type":"2 Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Punctuation",169,170,{"not-for-navigation":"0 true"}],["Type variable",165,166,{"language-level":"0 type","location":"1 missing - missing","symbol":"2 A","kind":"3 ★"}],["Erased lambda abstraction (term-level)",163,224,{"language-level":"0 term","binder":"1 0","type":"2 ∀ A : ★ . Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Punctuation",163,164,{"not-for-navigation":"0 true"}],["Equation",107,158,{"language-level":"0 type","kind":"1 ★"}],["Term variable",155,157,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 73","symbol":"2 l2"}],["Term variable",148,154,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"2 length"}],["Term variable",143,145,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 55","symbol":"2 l1"}],["Term variable",136,142,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"2 length"}],["Term variable",131,134,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",125,127,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 73","symbol":"2 l2"}],["Term variable",122,124,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 55","symbol":"2 l1"}],["Term variable",115,121,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 397","symbol":"2 append"}],["Term variable",107,113,{"language-level":"0 term","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"2 length"}],["Term variable",73,75,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l2","type":"3 List · A","hnf of type":"4 List · A"}],["Application of a type to a type",78,86,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Type variable",85,86,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 45","symbol":"2 A","expected kind":"3 ★","kind":"4 ★"}],["Type variable",78,82,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"2 List","kind":"3 ★ → ★"}],["Punctuation",71,72,{"not-for-navigation":"0 true"}],["Dependent function type",71,158,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",55,57,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 l1","type":"3 List · A","hnf of type":"4 List · A"}],["Application of a type to a type",60,68,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Type variable",67,68,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 45","symbol":"2 A","expected kind":"3 ★","kind":"4 ★"}],["Type variable",60,64,{"language-level":"0 type","location":"1 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"2 List","kind":"3 ★ → ★"}],["Punctuation",53,54,{"not-for-navigation":"0 true"}],["Dependent function type",53,158,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Type variable",45,46,{"language-level":"0 type","location":"1 missing - missing","symbol":"2 A","kind":"3 ★"}],["Star",49,50,{"language-level":"0 kind"}],["Punctuation",43,44,{"not-for-navigation":"0 true"}],["Implicit dependent function type",43,158,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Import of another source file",1,13,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 1"}]]}
