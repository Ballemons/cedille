{"spans":[["Cedille source file (/mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced)",1,228,{}],["Term-level definition (checking)",26,225,{"checking-mode":"0 checking","summary":"1 length-append : ∀ A : ★ . Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","erasure":"2 λ l1 . λ l2 . (l1 (λ h . λ t . λ ih . β) β)"}],["Application of a term to a term",185,223,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","type":"3 ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Beta axiom",222,223,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((length (append Nil l2)) ≃ (add (length Nil) (length l2)))"}],["Application of a term to a term",185,221,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) Nil) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) l1)"}],["Rho",211,219,{"language-level":"0 term","the equation":"1 ((length (append t l2)) ≃ (add (length t) (length l2)))","type":"2 ((λ s . λ z . (s (t appendCons l2 lengthCons Z) (t appendCons l2 lengthCons Z s z))) ≃ (add (length (Cons h t)) (length l2)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",218,219,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((λ s . λ z . (s (add (length t) (length l2)) (add (length t) (length l2) s z))) ≃ (add (length (Cons h t)) (length l2)))"}],["Term variable",213,215,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 203","symbol":"3 ih","type":"4 (λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t","hnf of type":"5 ((length (append t l2)) ≃ (add (length t) (length l2)))"}],["Epsilon",208,219,{"checking-mode":"0 checking","language-level":"1 term","type":"2 ((length (append (Cons h t) l2)) ≃ (add (length (Cons h t)) (length l2)))","explanation":"3 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",203,205,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 ih","type":"4 (λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t","hnf of type":"5 ((length (append t l2)) ≃ (add (length t) (length l2)))"}],["Lambda abstraction (term-level)",201,219,{"language-level":"0 term","binder":"1 0","type":"2 ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t))"}],["Lambda",201,202,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",197,198,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 t","type":"4 List · A","hnf of type":"5 List · A"}],["Lambda abstraction (term-level)",195,219,{"language-level":"0 term","binder":"1 0","type":"2 Π t : (List · A) . (((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t)))"}],["Lambda",195,196,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",191,192,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 h","type":"4 A","hnf of type":"5 A"}],["Lambda abstraction (term-level)",189,219,{"language-level":"0 term","binder":"1 0","type":"2 Π h : A . Π t : (List · A) . (((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t)))"}],["Lambda",189,190,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Parens",188,221,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a type",185,187,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (Π h : A . Π t : (List · A) . (((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) t) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) (Cons h t)))) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) Nil) → ((λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))) l1)"}],["Term variable",185,187,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 171","symbol":"3 l1","type":"4 List · A","hnf of type":"5 List · A"}],["Theta",183,224,{"language-level":"0 term","expected-type":"1 ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","the motive":"2 λ l1 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",178,180,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 l2","type":"4 List · A","hnf of type":"5 List · A"}],["Lambda abstraction (term-level)",176,224,{"language-level":"0 term","binder":"1 0","type":"2 Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Lambda",176,177,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",171,173,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 l1","type":"4 List · A","hnf of type":"5 List · A"}],["Lambda abstraction (term-level)",169,224,{"language-level":"0 term","binder":"1 0","type":"2 Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Lambda",169,170,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Type variable",165,166,{"checking-mode":"0 checking","language-level":"1 type","location":"2 missing - missing","symbol":"3 A","kind":"4 ★"}],["Erased lambda abstraction (term-level)",163,224,{"language-level":"0 term","binder":"1 0","type":"2 ∀ A : ★ . Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Lambda",163,164,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",107,158,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",155,157,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 73","symbol":"3 l2"}],["Term variable",148,154,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"3 length"}],["Term variable",143,145,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 55","symbol":"3 l1"}],["Term variable",136,142,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"3 length"}],["Term variable",131,134,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",125,127,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 73","symbol":"3 l2"}],["Term variable",122,124,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 55","symbol":"3 l1"}],["Term variable",115,121,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 397","symbol":"3 append"}],["Term variable",107,113,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"3 length"}],["Term variable",73,75,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 l2","type":"4 List · A","hnf of type":"5 List · A"}],["Application of a type to a type",78,86,{"checking-mode":"0 checking","language-level":"1 type","expected kind":"2 ★","kind":"3 ★"}],["Type variable",85,86,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 45","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Type variable",78,82,{"checking-mode":"0 synthesizing","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"3 List","kind":"4 ★ → ★"}],["Forall",71,72,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",71,158,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",55,57,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 l1","type":"4 List · A","hnf of type":"5 List · A"}],["Application of a type to a type",60,68,{"checking-mode":"0 checking","language-level":"1 type","expected kind":"2 ★","kind":"3 ★"}],["Type variable",67,68,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 45","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Type variable",60,64,{"checking-mode":"0 synthesizing","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"3 List","kind":"4 ★ → ★"}],["Forall",53,54,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",53,158,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Type variable",45,46,{"checking-mode":"0 checking","language-level":"1 type","location":"2 missing - missing","symbol":"3 A","kind":"4 ★"}],["Star",49,50,{"checking-mode":"0 checking","language-level":"1 kind"}],["Forall",43,44,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Implicit dependent function type",43,158,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Import of another source file",1,13,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 1"}]]}
