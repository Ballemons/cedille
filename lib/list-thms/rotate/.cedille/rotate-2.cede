{"spans":[["Cedille source file (/mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced)",1,319,{}],["Term-level definition (checking)",63,317,{"checking-mode":"0 checking","summary":"1 list-rotate-length : ∀ A : ★ . Π l : (List · A) . ((length l) ≃ (length (list-rotate l)))","erasure":"2 λ l . (l (λ h . λ t . λ _ . β) β)"}],["Application of a term to a term",163,314,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 ((length l) ≃ (length (list-rotate l)))","type":"3 ((length l) ≃ (length (list-rotate l)))"}],["Beta axiom",313,314,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((length Nil) ≃ (length (list-rotate Nil)))"}],["Application of a term to a term",163,312,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) Nil) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) l)"}],["Rho",187,311,{"language-level":"0 term","the equation":"1 ((length (append t (Cons h Nil))) ≃ (add (length t) (length (Cons h Nil))))","type":"2 ((length (Cons h t)) ≃ (t appendCons (Cons h Nil) lengthCons Z))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",276,311,{"language-level":"0 term","the equation":"1 ((add (length t) one) ≃ (add one (length t)))","type":"2 ((length (Cons h t)) ≃ (add (length t) (length (Cons h Nil))))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",310,311,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((length (Cons h t)) ≃ (add one (length t)))"}],["Application of a term to a term",279,306,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((add (length t) one) ≃ (add one (length t)))"}],["Term variable",303,306,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 219","symbol":"3 one","expected-type":"4 Nat","type":"5 Nat"}],["Application of a term to a term",279,302,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 Π m : Nat . ((add (length · A t) m) ≃ (add m (length · A t)))"}],["Application of a term to a term",289,301,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 Nat","type":"3 Nat"}],["Term variable",300,301,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 174","symbol":"3 t","expected-type":"4 List · A","type":"5 List · A"}],["Application of a term to a type",289,299,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (List · A) → Nat"}],["Type variable",298,299,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 151","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Term variable",289,295,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"3 length","type":"4 ∀ A : ★ . ((List · A) → Nat)","hnf of type":"5 ∀ A : ★ . ((List · A) → Nat)"}],["Parens",288,302,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",279,287,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-1.ced - 52","symbol":"3 add-comm","type":"4 Π n : Nat . Π m : Nat . ((add n m) ≃ (add m n))","hnf of type":"5 Π n : Nat . Π m : Nat . ((add n m) ≃ (add m n))"}],["Parens",278,307,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a term",190,232,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((length (append t (Cons h Nil))) ≃ (add (length t) (length (Cons h Nil))))"}],["Application of a term to a term",211,231,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 List · A","type":"3 List · A"}],["Application of a term to a type",223,230,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 List · A","type":"3 List · A"}],["Type variable",229,230,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 151","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Term variable",223,226,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 87","symbol":"3 Nil","type":"4 ∀ A : ★ . (List · A)","hnf of type":"5 ∀ A : ★ . (List · A)"}],["Parens",222,231,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a term",211,221,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (List · A) → (List · A)"}],["Term variable",220,221,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 168","symbol":"3 h","expected-type":"4 A","type":"5 A"}],["Application of a term to a type",211,219,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 A → (List · A) → (List · A)"}],["Type variable",218,219,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 151","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Term variable",211,215,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 62","symbol":"3 Cons","type":"4 ∀ A : ★ . (A → (List · A) → (List · A))","hnf of type":"5 ∀ A : ★ . (A → (List · A) → (List · A))"}],["Parens",210,232,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a term",190,209,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 Π l2 : (List · A) . ((length (append t l2)) ≃ (add (length t) (length l2)))"}],["Term variable",208,209,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 174","symbol":"3 t","expected-type":"4 List · A","type":"5 List · A"}],["Application of a term to a type",190,207,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Type variable",206,207,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 151","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Term variable",190,203,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 26","symbol":"3 length-append","type":"4 ∀ A : ★ . Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))","hnf of type":"5 ∀ A : ★ . Π l1 : (List · A) . Π l2 : (List · A) . ((length (append l1 l2)) ≃ (add (length l1) (length l2)))"}],["Parens",189,233,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Epsilon",184,311,{"checking-mode":"0 checking","language-level":"1 term","type":"2 ((length (Cons h t)) ≃ (length (list-rotate (Cons h t))))","explanation":"3 Normalize the right-hand side of the expected equation, using head reduction."}],["Term variable",180,181,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 (λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) t","hnf of type":"5 ((length t) ≃ (length (list-rotate t)))"}],["Lambda abstraction (term-level)",178,311,{"language-level":"0 term","binder":"1 0","type":"2 ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) t) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) (Cons h t))"}],["Lambda",178,179,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",174,175,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 t","type":"4 List · A","hnf of type":"5 List · A"}],["Lambda abstraction (term-level)",172,311,{"language-level":"0 term","binder":"1 0","type":"2 Π t : (List · A) . (((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) t) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) (Cons h t)))"}],["Lambda",172,173,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",168,169,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 h","type":"4 A","hnf of type":"5 A"}],["Lambda abstraction (term-level)",166,311,{"language-level":"0 term","binder":"1 0","type":"2 Π h : A . Π t : (List · A) . (((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) t) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) (Cons h t)))"}],["Lambda",166,167,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Parens",165,312,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a type",163,164,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (Π h : A . Π t : (List · A) . (((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) t) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) (Cons h t)))) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) Nil) → ((λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))) l)"}],["Term variable",163,164,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 157","symbol":"3 l","type":"4 List · A","hnf of type":"5 List · A"}],["Theta",161,315,{"language-level":"0 term","expected-type":"1 ((length l) ≃ (length (list-rotate l)))","the motive":"2 λ l : (List · A) . ((length l) ≃ (length (list-rotate l)))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",157,158,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 l","type":"4 List · A","hnf of type":"5 List · A"}],["Lambda abstraction (term-level)",155,315,{"language-level":"0 term","binder":"1 0","type":"2 Π l : (List · A) . ((length l) ≃ (length (list-rotate l)))"}],["Lambda",155,156,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Type variable",151,152,{"checking-mode":"0 checking","language-level":"1 type","location":"2 missing - missing","symbol":"3 A","kind":"4 ★"}],["Erased lambda abstraction (term-level)",149,315,{"language-level":"0 term","binder":"1 0","type":"2 ∀ A : ★ . Π l : (List · A) . ((length l) ≃ (length (list-rotate l)))"}],["Lambda",149,150,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",111,144,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",142,143,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 96","symbol":"3 l"}],["Term variable",130,141,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 2323","symbol":"3 list-rotate"}],["Term variable",122,128,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"3 length"}],["Term variable",118,119,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 96","symbol":"3 l"}],["Term variable",111,117,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 596","symbol":"3 length"}],["Term variable",96,97,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 l","type":"4 List · A","hnf of type":"5 List · A"}],["Application of a type to a type",100,108,{"checking-mode":"0 checking","language-level":"1 type","expected kind":"2 ★","kind":"3 ★"}],["Type variable",107,108,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/rotate/rotate-2.ced - 86","symbol":"3 A","expected kind":"4 ★","kind":"5 ★"}],["Type variable",100,104,{"checking-mode":"0 synthesizing","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list.ced - 45","symbol":"3 List","kind":"4 ★ → ★"}],["Forall",94,95,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",94,144,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Type variable",86,87,{"checking-mode":"0 checking","language-level":"1 type","location":"2 missing - missing","symbol":"3 A","kind":"4 ★"}],["Star",90,91,{"checking-mode":"0 checking","language-level":"1 kind"}],["Forall",84,85,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Implicit dependent function type",84,144,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Import of another source file",28,61,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/list-thms/length/length-0.ced - 1"}],["Import of another source file",1,27,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-1.ced - 1"}]]}
