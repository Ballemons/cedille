{"spans":[["Cedille source file (/space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced)",1,2754,{}],["Term-level definition (checking)",1949,2752,{"summary":"0 compare-trans : Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))","erasure":"1 λ x . (x (λ px . λ hx . λ y . (y (λ py . λ _ . λ z . (z (λ pz . λ _ . λ o . λ pf-xy . λ pf-yz . β) (λ o . λ _ . λ pf-yz . β))) (λ z . (z (λ _ . λ _ . λ o . λ pf-xy . λ pf-yz . [erased-proof]) (λ o . λ pf-xy . λ pf-yz . [erased-proof]))))) (λ y . (y (λ _ . λ _ . λ z . (z (λ _ . λ _ . λ o . λ pf-xy . λ _ . β) (λ _ . λ pf-xy . λ pf-yz . [erased-proof]))) (λ z . (z (λ _ . λ _ . λ o . λ pf-xy . λ pf-yz . [erased-proof]) (λ _ . λ pf-xy . λ _ . pf-xy))))))"}],["Application of a term to a term",2095,2750,{"language-level":"0 term","expected-type":"1 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))","type":"2 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))"}],["Application of a term to a term",2461,2748,{"language-level":"0 term","expected-type":"1 Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))","type":"2 Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))"}],["Application of a term to a term",2634,2746,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))","type":"2 Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))"}],["Term variable",2739,2744,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2725","symbol":"2 pf-xy","expected-type":"3 ((compare Z Z) ≃ _)","type":"4 ((compare Z Z) ≃ _)"}],["Term variable",2735,2736,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 ((compare Z Z) ≃ _)","hnf of type":"4 (EQ ≃ _)"}],["Lambda abstraction (term-level)",2733,2744,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z Z) ≃ _) → ((compare Z Z) ≃ _)"}],["Punctuation",2733,2734,{"not-for-navigation":"0 true"}],["Term variable",2725,2730,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare Z Z) ≃ _)","hnf of type":"4 (EQ ≃ _)"}],["Lambda abstraction (term-level)",2723,2744,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z Z) ≃ _) → ((compare Z Z) ≃ _) → ((compare Z Z) ≃ _)"}],["Punctuation",2723,2724,{"not-for-navigation":"0 true"}],["Term variable",2719,2720,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2717,2744,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z Z) ≃ o) → ((compare Z Z) ≃ o))"}],["Punctuation",2717,2718,{"not-for-navigation":"0 true"}],["Punctuation",2715,2746,{"not-for-navigation":"0 true"}],["Application of a term to a term",2634,2713,{"language-level":"0 term","type":"1 ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) z)"}],["Delta",2684,2711,{"language-level":"0 term","type":"1 ((compare Z (S _)) ≃ o)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Rho",2688,2709,{"language-level":"0 term","type":"1 ((compare Z (S _)) ≃ (compare Z Z))","explanation":"2 Rewrite terms in the synthesized type, using an equation. "}],["Term variable",2704,2709,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2676","symbol":"2 pf-yz","type":"3 ((compare Z (S _)) ≃ o)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ o)"}],["Sigma",2692,2699,{"language-level":"0 term","type":"1 (o ≃ (compare Z Z))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",2694,2699,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2666","symbol":"2 pf-xy","type":"3 ((compare Z Z) ≃ o)","hnf of type":"4 (EQ ≃ o)"}],["Punctuation",2690,2701,{"not-for-navigation":"0 true"}],["Punctuation",2686,2711,{"not-for-navigation":"0 true"}],["Term variable",2676,2681,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare Z (S _)) ≃ o)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ o)"}],["Lambda abstraction (term-level)",2674,2711,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z (S _)) ≃ o) → ((compare Z (S _)) ≃ o)"}],["Punctuation",2674,2675,{"not-for-navigation":"0 true"}],["Term variable",2666,2671,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare Z Z) ≃ o)","hnf of type":"4 (EQ ≃ o)"}],["Lambda abstraction (term-level)",2664,2711,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z Z) ≃ o) → ((compare Z (S _)) ≃ o) → ((compare Z (S _)) ≃ o)"}],["Punctuation",2664,2665,{"not-for-navigation":"0 true"}],["Term variable",2660,2661,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2658,2711,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z (S _)) ≃ o) → ((compare Z (S _)) ≃ o))"}],["Punctuation",2658,2659,{"not-for-navigation":"0 true"}],["Term variable",2654,2655,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) _","hnf of type":"4 Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z _) ≃ o) → ((compare Z _) ≃ o))"}],["Lambda abstraction (term-level)",2652,2711,{"language-level":"0 term","binder":"1 0","type":"2 ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) _) → ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) (S _))"}],["Punctuation",2652,2653,{"not-for-navigation":"0 true"}],["Term variable",2648,2649,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2646,2711,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) (S n)))"}],["Punctuation",2646,2647,{"not-for-navigation":"0 true"}],["Punctuation",2644,2713,{"not-for-navigation":"0 true"}],["Application of a term to a type",2634,2635,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) (S n)))) → ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))) z)"}],["Term variable",2634,2635,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2628","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2632,2747,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))","the motive":"2 λ z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2628,2629,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2626,2747,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . Π o : compare-t . (((compare Z Z) ≃ o) → ((compare Z z) ≃ o) → ((compare Z z) ≃ o))"}],["Punctuation",2626,2627,{"not-for-navigation":"0 true"}],["Punctuation",2624,2748,{"not-for-navigation":"0 true"}],["Application of a term to a term",2461,2617,{"language-level":"0 term","type":"1 ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) Z) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) y)"}],["Application of a term to a term",2491,2615,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))","type":"2 Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))"}],["Delta",2586,2613,{"language-level":"0 term","type":"1 ((compare Z Z) ≃ _)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Rho",2590,2611,{"language-level":"0 term","type":"1 ((compare (S (compare Z (S _))) Z) ≃ (compare Z (S _)))","explanation":"2 Rewrite terms in the synthesized type, using an equation. "}],["Term variable",2606,2611,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2578","symbol":"2 pf-yz","type":"3 ((compare (S _) Z) ≃ _)","hnf of type":"4 ((S _ (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _' . LT) EQ)) Z) ≃ _)"}],["Sigma",2594,2601,{"language-level":"0 term","type":"1 (_ ≃ (compare Z (S _)))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",2596,2601,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2568","symbol":"2 pf-xy","type":"3 ((compare Z (S _)) ≃ _)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ _)"}],["Punctuation",2592,2603,{"not-for-navigation":"0 true"}],["Punctuation",2588,2613,{"not-for-navigation":"0 true"}],["Term variable",2578,2583,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare (S _) Z) ≃ _)","hnf of type":"4 ((S _ (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _' . LT) EQ)) Z) ≃ _)"}],["Lambda abstraction (term-level)",2576,2613,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S _) Z) ≃ _) → ((compare Z Z) ≃ _)"}],["Punctuation",2576,2577,{"not-for-navigation":"0 true"}],["Term variable",2568,2573,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare Z (S _)) ≃ _)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ _)"}],["Lambda abstraction (term-level)",2566,2613,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z (S _)) ≃ _) → ((compare (S _) Z) ≃ _) → ((compare Z Z) ≃ _)"}],["Punctuation",2566,2567,{"not-for-navigation":"0 true"}],["Term variable",2562,2563,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2560,2613,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) Z) ≃ o) → ((compare Z Z) ≃ o))"}],["Punctuation",2560,2561,{"not-for-navigation":"0 true"}],["Punctuation",2558,2615,{"not-for-navigation":"0 true"}],["Application of a term to a term",2491,2556,{"language-level":"0 term","type":"1 ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) z)"}],["Rho",2537,2554,{"language-level":"0 term","the equation":"1 (o ≃ (compare Z (S _)))","type":"2 ((compare Z (S _)) ≃ o)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",2553,2554,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((compare Z (S _)) ≃ (compare Z (S _)))"}],["Sigma",2541,2548,{"language-level":"0 term","type":"1 (o ≃ (compare Z (S _)))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",2543,2548,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2523","symbol":"2 pf-xy","type":"3 ((compare Z (S _)) ≃ o)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ o)"}],["Punctuation",2539,2550,{"not-for-navigation":"0 true"}],["Term variable",2533,2534,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 ((compare (S _) (S _)) ≃ o)","hnf of type":"4 ((S _ (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _' . LT) EQ)) (S _)) ≃ o)"}],["Lambda abstraction (term-level)",2531,2554,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S _) (S _)) ≃ o) → ((compare Z (S _)) ≃ o)"}],["Punctuation",2531,2532,{"not-for-navigation":"0 true"}],["Term variable",2523,2528,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare Z (S _)) ≃ o)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ o)"}],["Lambda abstraction (term-level)",2521,2554,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z (S _)) ≃ o) → ((compare (S _) (S _)) ≃ o) → ((compare Z (S _)) ≃ o)"}],["Punctuation",2521,2522,{"not-for-navigation":"0 true"}],["Term variable",2517,2518,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2515,2554,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) (S _)) ≃ o) → ((compare Z (S _)) ≃ o))"}],["Punctuation",2515,2516,{"not-for-navigation":"0 true"}],["Term variable",2511,2512,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) _","hnf of type":"4 Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) _) ≃ o) → ((compare Z _) ≃ o))"}],["Lambda abstraction (term-level)",2509,2554,{"language-level":"0 term","binder":"1 0","type":"2 ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) _) → ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) (S _))"}],["Punctuation",2509,2510,{"not-for-navigation":"0 true"}],["Term variable",2505,2506,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2503,2554,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) (S n)))"}],["Punctuation",2503,2504,{"not-for-navigation":"0 true"}],["Punctuation",2501,2556,{"not-for-navigation":"0 true"}],["Application of a term to a type",2491,2492,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) (S n)))) → ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))) z)"}],["Term variable",2491,2492,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2485","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2489,2616,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))","the motive":"2 λ z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2485,2486,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2483,2616,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . Π o : compare-t . (((compare Z (S _)) ≃ o) → ((compare (S _) z) ≃ o) → ((compare Z z) ≃ o))"}],["Punctuation",2483,2484,{"not-for-navigation":"0 true"}],["Term variable",2479,2480,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) _","hnf of type":"4 Π z : Nat . Π o : compare-t . (((compare Z _) ≃ o) → ((compare _ z) ≃ o) → ((compare Z z) ≃ o))"}],["Lambda abstraction (term-level)",2477,2616,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) _) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) (S _))"}],["Punctuation",2477,2478,{"not-for-navigation":"0 true"}],["Term variable",2473,2474,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2471,2616,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) n) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) (S n)))"}],["Punctuation",2471,2472,{"not-for-navigation":"0 true"}],["Punctuation",2469,2617,{"not-for-navigation":"0 true"}],["Application of a term to a type",2461,2462,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) n) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) (S n)))) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) Z) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))) y)"}],["Term variable",2461,2462,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2455","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2459,2749,{"language-level":"0 term","expected-type":"1 Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))","the motive":"2 λ y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2455,2456,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2453,2749,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare Z y) ≃ o) → ((compare y z) ≃ o) → ((compare Z z) ≃ o))"}],["Punctuation",2453,2454,{"not-for-navigation":"0 true"}],["Punctuation",2451,2750,{"not-for-navigation":"0 true"}],["Application of a term to a term",2095,2446,{"language-level":"0 term","type":"1 ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) Z) → ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) x)"}],["Application of a term to a term",2125,2444,{"language-level":"0 term","expected-type":"1 Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))","type":"2 Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Application of a term to a term",2304,2442,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))","type":"2 Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Delta",2413,2440,{"language-level":"0 term","type":"1 ((compare (S px) Z) ≃ o)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Rho",2417,2438,{"language-level":"0 term","type":"1 ((compare Z Z) ≃ (compare (S px) Z))","explanation":"2 Rewrite terms in the synthesized type, using an equation. "}],["Term variable",2433,2438,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2405","symbol":"2 pf-yz","type":"3 ((compare Z Z) ≃ o)","hnf of type":"4 (EQ ≃ o)"}],["Sigma",2421,2428,{"language-level":"0 term","type":"1 (o ≃ (compare (S px) Z))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",2423,2428,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2395","symbol":"2 pf-xy","type":"3 ((compare (S px) Z) ≃ o)","hnf of type":"4 ((S px (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ o)"}],["Punctuation",2419,2430,{"not-for-navigation":"0 true"}],["Punctuation",2415,2440,{"not-for-navigation":"0 true"}],["Term variable",2405,2410,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare Z Z) ≃ o)","hnf of type":"4 (EQ ≃ o)"}],["Lambda abstraction (term-level)",2403,2440,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z Z) ≃ o) → ((compare (S px) Z) ≃ o)"}],["Punctuation",2403,2404,{"not-for-navigation":"0 true"}],["Term variable",2395,2400,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare (S px) Z) ≃ o)","hnf of type":"4 ((S px (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ o)"}],["Lambda abstraction (term-level)",2393,2440,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S px) Z) ≃ o) → ((compare Z Z) ≃ o) → ((compare (S px) Z) ≃ o)"}],["Punctuation",2393,2394,{"not-for-navigation":"0 true"}],["Term variable",2389,2390,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2387,2440,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z Z) ≃ o) → ((compare (S px) Z) ≃ o))"}],["Punctuation",2387,2388,{"not-for-navigation":"0 true"}],["Punctuation",2385,2442,{"not-for-navigation":"0 true"}],["Application of a term to a term",2304,2383,{"language-level":"0 term","type":"1 ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) z)"}],["Delta",2354,2381,{"language-level":"0 term","type":"1 ((compare (S px) (S _)) ≃ o)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Rho",2358,2379,{"language-level":"0 term","type":"1 ((compare Z (S _)) ≃ (compare (S px) Z))","explanation":"2 Rewrite terms in the synthesized type, using an equation. "}],["Term variable",2374,2379,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2346","symbol":"2 pf-yz","type":"3 ((compare Z (S _)) ≃ o)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ o)"}],["Sigma",2362,2369,{"language-level":"0 term","type":"1 (o ≃ (compare (S px) Z))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",2364,2369,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2336","symbol":"2 pf-xy","type":"3 ((compare (S px) Z) ≃ o)","hnf of type":"4 ((S px (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ o)"}],["Punctuation",2360,2371,{"not-for-navigation":"0 true"}],["Punctuation",2356,2381,{"not-for-navigation":"0 true"}],["Term variable",2346,2351,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare Z (S _)) ≃ o)","hnf of type":"4 ((S _ (λ _ . λ _' . LT) EQ) ≃ o)"}],["Lambda abstraction (term-level)",2344,2381,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z (S _)) ≃ o) → ((compare (S px) (S _)) ≃ o)"}],["Punctuation",2344,2345,{"not-for-navigation":"0 true"}],["Term variable",2336,2341,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare (S px) Z) ≃ o)","hnf of type":"4 ((S px (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ o)"}],["Lambda abstraction (term-level)",2334,2381,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S px) Z) ≃ o) → ((compare Z (S _)) ≃ o) → ((compare (S px) (S _)) ≃ o)"}],["Punctuation",2334,2335,{"not-for-navigation":"0 true"}],["Term variable",2330,2331,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2328,2381,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z (S _)) ≃ o) → ((compare (S px) (S _)) ≃ o))"}],["Punctuation",2328,2329,{"not-for-navigation":"0 true"}],["Term variable",2324,2325,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) _","hnf of type":"4 Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z _) ≃ o) → ((compare (S px) _) ≃ o))"}],["Lambda abstraction (term-level)",2322,2381,{"language-level":"0 term","binder":"1 0","type":"2 ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) _) → ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) (S _))"}],["Punctuation",2322,2323,{"not-for-navigation":"0 true"}],["Term variable",2318,2319,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2316,2381,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) (S n)))"}],["Punctuation",2316,2317,{"not-for-navigation":"0 true"}],["Punctuation",2314,2383,{"not-for-navigation":"0 true"}],["Application of a term to a type",2304,2305,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) (S n)))) → ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))) z)"}],["Term variable",2304,2305,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2298","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2302,2443,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))","the motive":"2 λ z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2298,2299,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2296,2443,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . Π o : compare-t . (((compare (S px) Z) ≃ o) → ((compare Z z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Punctuation",2296,2297,{"not-for-navigation":"0 true"}],["Punctuation",2294,2444,{"not-for-navigation":"0 true"}],["Application of a term to a term",2125,2287,{"language-level":"0 term","type":"1 ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) Z) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) y)"}],["Application of a term to a term",2156,2285,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))","type":"2 Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Rho",2266,2283,{"language-level":"0 term","the equation":"1 (o ≃ (compare (S py) Z))","type":"2 ((compare (S px) Z) ≃ o)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",2282,2283,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((compare (S px) Z) ≃ (compare (S py) Z))"}],["Sigma",2270,2277,{"language-level":"0 term","type":"1 (o ≃ (compare (S py) Z))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",2272,2277,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2258","symbol":"2 pf-yz","type":"3 ((compare (S py) Z) ≃ o)","hnf of type":"4 ((S py (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ o)"}],["Punctuation",2268,2279,{"not-for-navigation":"0 true"}],["Term variable",2258,2263,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare (S py) Z) ≃ o)","hnf of type":"4 ((S py (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ o)"}],["Lambda abstraction (term-level)",2256,2283,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S py) Z) ≃ o) → ((compare (S px) Z) ≃ o)"}],["Punctuation",2256,2257,{"not-for-navigation":"0 true"}],["Term variable",2252,2253,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 ((compare (S px) (S py)) ≃ o)","hnf of type":"4 ((S px (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) (S py)) ≃ o)"}],["Lambda abstraction (term-level)",2250,2283,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S px) (S py)) ≃ o) → ((compare (S py) Z) ≃ o) → ((compare (S px) Z) ≃ o)"}],["Punctuation",2250,2251,{"not-for-navigation":"0 true"}],["Term variable",2246,2247,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2244,2283,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) Z) ≃ o) → ((compare (S px) Z) ≃ o))"}],["Punctuation",2244,2245,{"not-for-navigation":"0 true"}],["Punctuation",2242,2285,{"not-for-navigation":"0 true"}],["Application of a term to a term",2156,2240,{"language-level":"0 term","type":"1 ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) z)"}],["Rho",2206,2238,{"language-level":"0 term","the equation":"1 ((compare px pz) ≃ o)","type":"2 ((compare (S px) (S pz)) ≃ o)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",2237,2238,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (o ≃ o)"}],["Application of a term to a term",2210,2232,{"language-level":"0 term","type":"1 ((compare px pz) ≃ o)"}],["Term variable",2227,2232,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2198","symbol":"2 pf-yz","expected-type":"3 ((compare py pz) ≃ o)","type":"4 ((compare (S py) (S pz)) ≃ o)"}],["Application of a term to a term",2210,2226,{"language-level":"0 term","type":"1 ((compare py pz) ≃ o) → ((compare px pz) ≃ o)"}],["Term variable",2221,2226,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2188","symbol":"2 pf-xy","expected-type":"3 ((compare px py) ≃ o)","type":"4 ((compare (S px) (S py)) ≃ o)"}],["Application of a term to a term",2210,2220,{"language-level":"0 term","type":"1 ((compare px py) ≃ o) → ((compare py pz) ≃ o) → ((compare px pz) ≃ o)"}],["Term variable",2219,2220,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2182","symbol":"2 o","expected-type":"3 compare-t","type":"4 compare-t"}],["Application of a term to a term",2210,2218,{"language-level":"0 term","type":"1 Π o : compare-t . (((compare px py) ≃ o) → ((compare py pz) ≃ o) → ((compare px pz) ≃ o))"}],["Term variable",2216,2218,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2169","symbol":"2 pz","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",2210,2215,{"language-level":"0 term","type":"1 Π z : Nat . Π o : compare-t . (((compare px py) ≃ o) → ((compare py z) ≃ o) → ((compare px z) ≃ o))"}],["Term variable",2213,2215,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2137","symbol":"2 py","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",2210,2212,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2112","symbol":"2 hx","type":"3 (λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) px","hnf of type":"4 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare px y) ≃ o) → ((compare y z) ≃ o) → ((compare px z) ≃ o))"}],["Punctuation",2208,2234,{"not-for-navigation":"0 true"}],["Term variable",2198,2203,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare (S py) (S pz)) ≃ o)","hnf of type":"4 ((S py (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) (S pz)) ≃ o)"}],["Lambda abstraction (term-level)",2196,2238,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S py) (S pz)) ≃ o) → ((compare (S px) (S pz)) ≃ o)"}],["Punctuation",2196,2197,{"not-for-navigation":"0 true"}],["Term variable",2188,2193,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare (S px) (S py)) ≃ o)","hnf of type":"4 ((S px (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) (S py)) ≃ o)"}],["Lambda abstraction (term-level)",2186,2238,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S px) (S py)) ≃ o) → ((compare (S py) (S pz)) ≃ o) → ((compare (S px) (S pz)) ≃ o)"}],["Punctuation",2186,2187,{"not-for-navigation":"0 true"}],["Term variable",2182,2183,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",2180,2238,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) (S pz)) ≃ o) → ((compare (S px) (S pz)) ≃ o))"}],["Punctuation",2180,2181,{"not-for-navigation":"0 true"}],["Term variable",2176,2177,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) pz","hnf of type":"4 Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) pz) ≃ o) → ((compare (S px) pz) ≃ o))"}],["Lambda abstraction (term-level)",2174,2238,{"language-level":"0 term","binder":"1 0","type":"2 ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) pz) → ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) (S pz))"}],["Punctuation",2174,2175,{"not-for-navigation":"0 true"}],["Term variable",2169,2171,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pz","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2167,2238,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) (S n)))"}],["Punctuation",2167,2168,{"not-for-navigation":"0 true"}],["Punctuation",2165,2240,{"not-for-navigation":"0 true"}],["Application of a term to a type",2156,2157,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) n) → ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) (S n)))) → ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) Z) → ((λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))) z)"}],["Term variable",2156,2157,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2150","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2154,2286,{"language-level":"0 term","expected-type":"1 Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))","the motive":"2 λ z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2150,2151,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2148,2286,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . Π o : compare-t . (((compare (S px) (S py)) ≃ o) → ((compare (S py) z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Punctuation",2148,2149,{"not-for-navigation":"0 true"}],["Term variable",2144,2145,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) py","hnf of type":"4 Π z : Nat . Π o : compare-t . (((compare (S px) py) ≃ o) → ((compare py z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Lambda abstraction (term-level)",2142,2286,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) py) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) (S py))"}],["Punctuation",2142,2143,{"not-for-navigation":"0 true"}],["Term variable",2137,2139,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 py","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2135,2286,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) n) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) (S n)))"}],["Punctuation",2135,2136,{"not-for-navigation":"0 true"}],["Punctuation",2133,2287,{"not-for-navigation":"0 true"}],["Application of a term to a type",2125,2126,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) n) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) (S n)))) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) Z) → ((λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))) y)"}],["Term variable",2125,2126,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2119","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2123,2445,{"language-level":"0 term","expected-type":"1 Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))","the motive":"2 λ y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2119,2120,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2117,2445,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare (S px) y) ≃ o) → ((compare y z) ≃ o) → ((compare (S px) z) ≃ o))"}],["Punctuation",2117,2118,{"not-for-navigation":"0 true"}],["Term variable",2112,2114,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 hx","type":"3 (λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) px","hnf of type":"4 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare px y) ≃ o) → ((compare y z) ≃ o) → ((compare px z) ≃ o))"}],["Lambda abstraction (term-level)",2110,2445,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) px) → ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) (S px))"}],["Punctuation",2110,2111,{"not-for-navigation":"0 true"}],["Term variable",2105,2107,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 px","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2103,2445,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) n) → ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) (S n)))"}],["Punctuation",2103,2104,{"not-for-navigation":"0 true"}],["Punctuation",2101,2446,{"not-for-navigation":"0 true"}],["Application of a term to a type",2095,2096,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) n) → ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) (S n)))) → ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) Z) → ((λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))) x)"}],["Term variable",2095,2096,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2089","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",2093,2751,{"language-level":"0 term","expected-type":"1 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))","the motive":"2 λ x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",2089,2090,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",2087,2751,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ o) → ((compare x z) ≃ o))"}],["Punctuation",2087,2088,{"not-for-navigation":"0 true"}],["Equation",2065,2080,{"language-level":"0 type","kind":"1 ★"}],["Term variable",2079,2080,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2003","symbol":"2 o"}],["Term variable",2075,2076,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1991","symbol":"2 z"}],["Term variable",2073,2074,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1967","symbol":"2 x"}],["Term variable",2065,2072,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",2063,2082,{"not-for-navigation":"0 true"}],["Equation",2043,2058,{"language-level":"0 type","kind":"1 ★"}],["Term variable",2057,2058,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2003","symbol":"2 o"}],["Term variable",2053,2054,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1991","symbol":"2 z"}],["Term variable",2051,2052,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1979","symbol":"2 y"}],["Term variable",2043,2050,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",2041,2060,{"not-for-navigation":"0 true"}],["Arrow type",2041,2082,{"language-level":"0 type","kind":"1 ★"}],["Equation",2021,2036,{"language-level":"0 type","kind":"1 ★"}],["Term variable",2035,2036,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 2003","symbol":"2 o"}],["Term variable",2031,2032,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1979","symbol":"2 y"}],["Term variable",2029,2030,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1967","symbol":"2 x"}],["Term variable",2021,2028,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",2019,2038,{"not-for-navigation":"0 true"}],["Arrow type",2019,2082,{"language-level":"0 type","kind":"1 ★"}],["Term variable",2003,2004,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Type variable",2007,2016,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/compare.ced - 5","symbol":"2 compare-t","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",2001,2002,{"not-for-navigation":"0 true"}],["Dependent function type",2001,2082,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1991,1992,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1995,1998,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1989,1990,{"not-for-navigation":"0 true"}],["Dependent function type",1989,2082,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1979,1980,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1983,1986,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1977,1978,{"not-for-navigation":"0 true"}],["Dependent function type",1977,2082,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1967,1968,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1971,1974,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1965,1966,{"not-for-navigation":"0 true"}],["Dependent function type",1965,2082,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1713,1947,{"summary":"0 compare-trans-eq : Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ EQ) → ((compare x z) ≃ o))","erasure":"1 λ x . λ y . λ z . λ o . λ pf-xy . λ pf-yz . β"}],["Rho",1899,1945,{"language-level":"0 term","the equation":"1 (o ≃ (compare x y))","type":"2 ((compare x z) ≃ o)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",1915,1945,{"language-level":"0 term","the equation":"1 (y ≃ z)","type":"2 ((compare x z) ≃ (compare x y))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",1944,1945,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((compare x z) ≃ (compare x z))"}],["Application of a term to a term",1919,1939,{"language-level":"0 term","type":"1 (y ≃ z)"}],["Term variable",1934,1939,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1891","symbol":"2 pf-yz","expected-type":"3 ((compare y z) ≃ EQ)","type":"4 ((compare y z) ≃ EQ)"}],["Application of a term to a term",1919,1933,{"language-level":"0 term","type":"1 ((compare y z) ≃ EQ) → (y ≃ z)"}],["Term variable",1932,1933,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1869","symbol":"2 z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",1919,1931,{"language-level":"0 term","type":"1 Π y' : Nat . (((compare y y') ≃ EQ) → (y ≃ y'))"}],["Term variable",1930,1931,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1863","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",1919,1929,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 26","symbol":"2 compare-eq","type":"3 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","hnf of type":"4 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Punctuation",1917,1941,{"not-for-navigation":"0 true"}],["Sigma",1903,1910,{"language-level":"0 term","type":"1 (o ≃ (compare x y))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",1905,1910,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1881","symbol":"2 pf-xy","type":"3 ((compare x y) ≃ o)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ o)"}],["Punctuation",1901,1912,{"not-for-navigation":"0 true"}],["Term variable",1891,1896,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare y z) ≃ EQ)","hnf of type":"4 ((y (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) z) ≃ EQ)"}],["Lambda abstraction (term-level)",1889,1945,{"language-level":"0 term","binder":"1 0","type":"2 ((compare y z) ≃ EQ) → ((compare x z) ≃ o)"}],["Punctuation",1889,1890,{"not-for-navigation":"0 true"}],["Term variable",1881,1886,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare x y) ≃ o)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ o)"}],["Lambda abstraction (term-level)",1879,1945,{"language-level":"0 term","binder":"1 0","type":"2 ((compare x y) ≃ o) → ((compare y z) ≃ EQ) → ((compare x z) ≃ o)"}],["Punctuation",1879,1880,{"not-for-navigation":"0 true"}],["Term variable",1875,1876,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",1873,1945,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ EQ) → ((compare x z) ≃ o))"}],["Punctuation",1873,1874,{"not-for-navigation":"0 true"}],["Term variable",1869,1870,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1867,1945,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ EQ) → ((compare x z) ≃ o))"}],["Punctuation",1867,1868,{"not-for-navigation":"0 true"}],["Term variable",1863,1864,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1861,1945,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ EQ) → ((compare x z) ≃ o))"}],["Punctuation",1861,1862,{"not-for-navigation":"0 true"}],["Term variable",1857,1858,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1855,1945,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ o) → ((compare y z) ≃ EQ) → ((compare x z) ≃ o))"}],["Punctuation",1855,1856,{"not-for-navigation":"0 true"}],["Equation",1833,1848,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1847,1848,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1770","symbol":"2 o"}],["Term variable",1843,1844,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1758","symbol":"2 z"}],["Term variable",1841,1842,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1734","symbol":"2 x"}],["Term variable",1833,1840,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",1831,1850,{"not-for-navigation":"0 true"}],["Equation",1810,1826,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1824,1826,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/compare.ced - 34","symbol":"2 EQ"}],["Term variable",1820,1821,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1758","symbol":"2 z"}],["Term variable",1818,1819,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1746","symbol":"2 y"}],["Term variable",1810,1817,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",1808,1828,{"not-for-navigation":"0 true"}],["Arrow type",1808,1850,{"language-level":"0 type","kind":"1 ★"}],["Equation",1788,1803,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1802,1803,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1770","symbol":"2 o"}],["Term variable",1798,1799,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1746","symbol":"2 y"}],["Term variable",1796,1797,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1734","symbol":"2 x"}],["Term variable",1788,1795,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",1786,1805,{"not-for-navigation":"0 true"}],["Arrow type",1786,1850,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1770,1771,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Type variable",1774,1783,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/compare.ced - 5","symbol":"2 compare-t","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1768,1769,{"not-for-navigation":"0 true"}],["Dependent function type",1768,1850,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1758,1759,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1762,1765,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1756,1757,{"not-for-navigation":"0 true"}],["Dependent function type",1756,1850,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1746,1747,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1750,1753,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1744,1745,{"not-for-navigation":"0 true"}],["Dependent function type",1744,1850,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1734,1735,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1738,1741,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1732,1733,{"not-for-navigation":"0 true"}],["Dependent function type",1732,1850,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1477,1711,{"summary":"0 compare-eq-trans : Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ EQ) → ((compare y z) ≃ o) → ((compare x z) ≃ o))","erasure":"1 λ x . λ y . λ z . λ o . λ pf-xy . λ pf-yz . β"}],["Rho",1663,1709,{"language-level":"0 term","the equation":"1 (x ≃ y)","type":"2 ((compare x z) ≃ o)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",1692,1709,{"language-level":"0 term","the equation":"1 (o ≃ (compare y z))","type":"2 ((compare y z) ≃ o)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",1708,1709,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((compare y z) ≃ (compare y z))"}],["Sigma",1696,1703,{"language-level":"0 term","type":"1 (o ≃ (compare y z))","explanation":"2 Swap the sides of the equation synthesized for the body of the of this term."}],["Term variable",1698,1703,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1655","symbol":"2 pf-yz","type":"3 ((compare y z) ≃ o)","hnf of type":"4 ((y (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) z) ≃ o)"}],["Punctuation",1694,1705,{"not-for-navigation":"0 true"}],["Application of a term to a term",1667,1687,{"language-level":"0 term","type":"1 (x ≃ y)"}],["Term variable",1682,1687,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1645","symbol":"2 pf-xy","expected-type":"3 ((compare x y) ≃ EQ)","type":"4 ((compare x y) ≃ EQ)"}],["Application of a term to a term",1667,1681,{"language-level":"0 term","type":"1 ((compare x y) ≃ EQ) → (x ≃ y)"}],["Term variable",1680,1681,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1627","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",1667,1679,{"language-level":"0 term","type":"1 Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Term variable",1678,1679,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1621","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",1667,1677,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 26","symbol":"2 compare-eq","type":"3 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","hnf of type":"4 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Punctuation",1665,1689,{"not-for-navigation":"0 true"}],["Term variable",1655,1660,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-yz","type":"3 ((compare y z) ≃ o)","hnf of type":"4 ((y (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) z) ≃ o)"}],["Lambda abstraction (term-level)",1653,1709,{"language-level":"0 term","binder":"1 0","type":"2 ((compare y z) ≃ o) → ((compare x z) ≃ o)"}],["Punctuation",1653,1654,{"not-for-navigation":"0 true"}],["Term variable",1645,1650,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf-xy","type":"3 ((compare x y) ≃ EQ)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ EQ)"}],["Lambda abstraction (term-level)",1643,1709,{"language-level":"0 term","binder":"1 0","type":"2 ((compare x y) ≃ EQ) → ((compare y z) ≃ o) → ((compare x z) ≃ o)"}],["Punctuation",1643,1644,{"not-for-navigation":"0 true"}],["Term variable",1639,1640,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Lambda abstraction (term-level)",1637,1709,{"language-level":"0 term","binder":"1 0","type":"2 Π o : compare-t . (((compare x y) ≃ EQ) → ((compare y z) ≃ o) → ((compare x z) ≃ o))"}],["Punctuation",1637,1638,{"not-for-navigation":"0 true"}],["Term variable",1633,1634,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1631,1709,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . Π o : compare-t . (((compare x y) ≃ EQ) → ((compare y z) ≃ o) → ((compare x z) ≃ o))"}],["Punctuation",1631,1632,{"not-for-navigation":"0 true"}],["Term variable",1627,1628,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1625,1709,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ EQ) → ((compare y z) ≃ o) → ((compare x z) ≃ o))"}],["Punctuation",1625,1626,{"not-for-navigation":"0 true"}],["Term variable",1621,1622,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1619,1709,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . (((compare x y) ≃ EQ) → ((compare y z) ≃ o) → ((compare x z) ≃ o))"}],["Punctuation",1619,1620,{"not-for-navigation":"0 true"}],["Equation",1597,1612,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1611,1612,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1534","symbol":"2 o"}],["Term variable",1607,1608,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1522","symbol":"2 z"}],["Term variable",1605,1606,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1498","symbol":"2 x"}],["Term variable",1597,1604,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",1595,1614,{"not-for-navigation":"0 true"}],["Equation",1575,1590,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1589,1590,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1534","symbol":"2 o"}],["Term variable",1585,1586,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1522","symbol":"2 z"}],["Term variable",1583,1584,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1510","symbol":"2 y"}],["Term variable",1575,1582,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",1573,1592,{"not-for-navigation":"0 true"}],["Arrow type",1573,1614,{"language-level":"0 type","kind":"1 ★"}],["Equation",1552,1568,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1566,1568,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/compare.ced - 34","symbol":"2 EQ"}],["Term variable",1562,1563,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1510","symbol":"2 y"}],["Term variable",1560,1561,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1498","symbol":"2 x"}],["Term variable",1552,1559,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",1550,1570,{"not-for-navigation":"0 true"}],["Arrow type",1550,1614,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1534,1535,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 o","type":"3 compare-t","hnf of type":"4 compare-t"}],["Type variable",1538,1547,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/compare.ced - 5","symbol":"2 compare-t","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1532,1533,{"not-for-navigation":"0 true"}],["Dependent function type",1532,1614,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1522,1523,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1526,1529,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1520,1521,{"not-for-navigation":"0 true"}],["Dependent function type",1520,1614,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1510,1511,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1514,1517,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1508,1509,{"not-for-navigation":"0 true"}],["Dependent function type",1508,1614,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1498,1499,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1502,1505,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1496,1497,{"not-for-navigation":"0 true"}],["Dependent function type",1496,1614,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1292,1475,{"summary":"0 Lte-S-0 : Π x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))","erasure":"1 λ x . (x (λ px . λ r . λ y . (y (λ py . λ _ . λ u . (r py u)) (λ u . [erased-proof]))) (λ y . λ u . (Z-Lte y)))"}],["Application of a term to a term",1360,1474,{"language-level":"0 term","expected-type":"1 Π y : Nat . ((Lte (S x) y) → (Lte x y))","type":"2 Π y : Nat . ((Lte (S x) y) → (Lte x y))"}],["Application of a term to a term",1466,1473,{"language-level":"0 term","expected-type":"1 ((lte Z y) ≃ tt)","type":"2 ((lte Z y) ≃ tt)"}],["Term variable",1472,1473,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1456","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",1466,1471,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1009","symbol":"2 Z-Lte","type":"3 Π x : Nat . (Lte Z x)","hnf of type":"4 Π x : Nat . (Lte Z x)"}],["Term variable",1462,1463,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lte (S Z) y","hnf of type":"4 ((lte (S Z) y) ≃ tt)"}],["Lambda abstraction (term-level)",1460,1473,{"language-level":"0 term","binder":"1 0","type":"2 (Lte (S Z) y) → (Lte Z y)"}],["Punctuation",1460,1461,{"not-for-navigation":"0 true"}],["Term variable",1456,1457,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1454,1473,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((Lte (S Z) y) → (Lte Z y))"}],["Punctuation",1454,1455,{"not-for-navigation":"0 true"}],["Punctuation",1453,1474,{"not-for-navigation":"0 true"}],["Application of a term to a term",1360,1441,{"language-level":"0 term","type":"1 ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) Z) → ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) x)"}],["Application of a term to a term",1399,1440,{"language-level":"0 term","expected-type":"1 (Lte (S (S px)) y) → (Lte (S px) y)","type":"2 (Lte (S (S px)) y) → (Lte (S px) y)"}],["Delta",1436,1439,{"language-level":"0 term","type":"1 ((lte (S px) Z) ≃ tt)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Term variable",1438,1439,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1432","symbol":"2 u","type":"3 Lte (S (S px)) Z","hnf of type":"4 ((lte (S (S px)) Z) ≃ tt)"}],["Term variable",1432,1433,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lte (S (S px)) Z","hnf of type":"4 ((lte (S (S px)) Z) ≃ tt)"}],["Lambda abstraction (term-level)",1430,1439,{"language-level":"0 term","binder":"1 0","type":"2 (Lte (S (S px)) Z) → (Lte (S px) Z)"}],["Punctuation",1430,1431,{"not-for-navigation":"0 true"}],["Punctuation",1429,1440,{"not-for-navigation":"0 true"}],["Application of a term to a term",1399,1428,{"language-level":"0 term","type":"1 ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) Z) → ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) y)"}],["Application of a term to a term",1421,1427,{"language-level":"0 term","expected-type":"1 ((lte (S px) (S py)) ≃ tt)","type":"2 ((lte px py) ≃ tt)"}],["Term variable",1426,1427,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1417","symbol":"2 u","expected-type":"3 ((lte (S px) py) ≃ tt)","type":"4 Lte (S (S px)) (S py)"}],["Application of a term to a term",1421,1425,{"language-level":"0 term","type":"1 (Lte (S px) py) → (Lte px py)"}],["Term variable",1423,1425,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1404","symbol":"2 py","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",1421,1422,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1372","symbol":"2 r","type":"3 (λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) px","hnf of type":"4 Π y : Nat . ((Lte (S px) y) → (Lte px y))"}],["Term variable",1417,1418,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lte (S (S px)) (S py)","hnf of type":"4 ((lte (S (S px)) (S py)) ≃ tt)"}],["Lambda abstraction (term-level)",1415,1427,{"language-level":"0 term","binder":"1 0","type":"2 (Lte (S (S px)) (S py)) → (Lte (S px) (S py))"}],["Punctuation",1415,1416,{"not-for-navigation":"0 true"}],["Term variable",1411,1412,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) py","hnf of type":"4 (Lte (S (S px)) py) → (Lte (S px) py)"}],["Lambda abstraction (term-level)",1409,1427,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) py) → ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) (S py))"}],["Punctuation",1409,1410,{"not-for-navigation":"0 true"}],["Term variable",1404,1406,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 py","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1402,1427,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) n) → ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) (S n)))"}],["Punctuation",1402,1403,{"not-for-navigation":"0 true"}],["Punctuation",1401,1428,{"not-for-navigation":"0 true"}],["Application of a term to a type",1399,1400,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) n) → ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) (S n)))) → ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) Z) → ((λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))) y)"}],["Term variable",1399,1400,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1378","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",1397,1441,{"language-level":"0 term","expected-type":"1 (Lte (S (S px)) y) → (Lte (S px) y)","the motive":"2 λ y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",1378,1379,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1376,1441,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((Lte (S (S px)) y) → (Lte (S px) y))"}],["Punctuation",1376,1377,{"not-for-navigation":"0 true"}],["Term variable",1372,1373,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r","type":"3 (λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) px","hnf of type":"4 Π y : Nat . ((Lte (S px) y) → (Lte px y))"}],["Lambda abstraction (term-level)",1370,1441,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) px) → ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) (S px))"}],["Punctuation",1370,1371,{"not-for-navigation":"0 true"}],["Term variable",1365,1367,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 px","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1363,1441,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) n) → ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) (S n)))"}],["Punctuation",1363,1364,{"not-for-navigation":"0 true"}],["Punctuation",1362,1441,{"not-for-navigation":"0 true"}],["Application of a term to a type",1360,1361,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) n) → ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) (S n)))) → ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) Z) → ((λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))) x)"}],["Term variable",1360,1361,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1354","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",1358,1475,{"language-level":"0 term","expected-type":"1 Π y : Nat . ((Lte (S x) y) → (Lte x y))","the motive":"2 λ x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",1354,1355,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1352,1475,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((Lte (S x) y) → (Lte x y))"}],["Punctuation",1352,1353,{"not-for-navigation":"0 true"}],["Application of a type to a term",1340,1347,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",1346,1347,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1316","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",1340,1345,{"language-level":"0 type","kind":"1 Nat → ★"}],["Term variable",1344,1345,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1304","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Type variable",1340,1343,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1321","symbol":"2 Lte","kind":"3 Nat → Nat → ★"}],["Application of a type to a term",1326,1337,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",1336,1337,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1316","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",1326,1335,{"language-level":"0 type","kind":"1 Nat → ★"}],["Application of a term to a term",1331,1334,{"language-level":"0 term","expected-type":"1 Nat","type":"2 Nat"}],["Term variable",1333,1334,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1304","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",1331,1332,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S","type":"3 Nat → Nat","hnf of type":"4 Nat → Nat"}],["Punctuation",1330,1335,{"not-for-navigation":"0 true"}],["Type variable",1326,1329,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1321","symbol":"2 Lte","kind":"3 Nat → Nat → ★"}],["Arrow type",1326,1347,{"language-level":"0 type","kind":"1 ★"}],["Term variable",1316,1317,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1320,1323,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1314,1315,{"not-for-navigation":"0 true"}],["Dependent function type",1314,1347,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",1304,1305,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1308,1311,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1302,1303,{"not-for-navigation":"0 true"}],["Dependent function type",1302,1347,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1226,1290,{"summary":"0 Lte-refl : Π x : Nat . (Lte x x)","erasure":"1 λ x . (x (λ p . λ r . r) β)"}],["Application of a term to a term",1269,1288,{"language-level":"0 term","expected-type":"1 ((lte x x) ≃ tt)","type":"2 ((lte x x) ≃ tt)"}],["Beta axiom",1287,1288,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((lte Z Z) ≃ tt)"}],["Application of a term to a term",1269,1286,{"language-level":"0 term","type":"1 ((λ x : Nat . ((lte x x) ≃ tt)) Z) → ((λ x : Nat . ((lte x x) ≃ tt)) x)"}],["Term variable",1284,1285,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1280","symbol":"2 r","expected-type":"3 ((lte (S p) (S p)) ≃ tt)","type":"4 (λ x : Nat . ((lte x x) ≃ tt)) p"}],["Term variable",1280,1281,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r","type":"3 (λ x : Nat . ((lte x x) ≃ tt)) p","hnf of type":"4 ((lte p p) ≃ tt)"}],["Lambda abstraction (term-level)",1278,1285,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((lte x x) ≃ tt)) p) → ((λ x : Nat . ((lte x x) ≃ tt)) (S p))"}],["Punctuation",1278,1279,{"not-for-navigation":"0 true"}],["Term variable",1274,1275,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1272,1285,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((lte x x) ≃ tt)) n) → ((λ x : Nat . ((lte x x) ≃ tt)) (S n)))"}],["Punctuation",1272,1273,{"not-for-navigation":"0 true"}],["Punctuation",1271,1286,{"not-for-navigation":"0 true"}],["Application of a term to a type",1269,1270,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((lte x x) ≃ tt)) n) → ((λ x : Nat . ((lte x x) ≃ tt)) (S n)))) → ((λ x : Nat . ((lte x x) ≃ tt)) Z) → ((λ x : Nat . ((lte x x) ≃ tt)) x)"}],["Term variable",1269,1270,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1263","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",1267,1289,{"language-level":"0 term","expected-type":"1 ((lte x x) ≃ tt)","the motive":"2 λ x : Nat . ((lte x x) ≃ tt)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",1263,1264,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1261,1289,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . (Lte x x)"}],["Punctuation",1261,1262,{"not-for-navigation":"0 true"}],["Application of a type to a term",1249,1256,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",1255,1256,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1239","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",1249,1254,{"language-level":"0 type","kind":"1 Nat → ★"}],["Term variable",1253,1254,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1239","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Type variable",1249,1252,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1321","symbol":"2 Lte","kind":"3 Nat → Nat → ★"}],["Term variable",1239,1240,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1243,1246,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1237,1238,{"not-for-navigation":"0 true"}],["Dependent function type",1237,1256,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1163,1224,{"summary":"0 Gte-Z : Π x : Nat . (Gte x Z)","erasure":"1 λ x . (x (λ n . λ _ . β) β)"}],["Application of a term to a term",1203,1222,{"language-level":"0 term","expected-type":"1 ((gte x Z) ≃ tt)","type":"2 ((gte x Z) ≃ tt)"}],["Beta axiom",1221,1222,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((gte Z Z) ≃ tt)"}],["Application of a term to a term",1203,1220,{"language-level":"0 term","type":"1 ((λ x : Nat . ((gte x Z) ≃ tt)) Z) → ((λ x : Nat . ((gte x Z) ≃ tt)) x)"}],["Beta axiom",1218,1219,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((gte (S n) Z) ≃ tt)"}],["Term variable",1214,1215,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ x : Nat . ((gte x Z) ≃ tt)) n","hnf of type":"4 ((gte n Z) ≃ tt)"}],["Lambda abstraction (term-level)",1212,1219,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((gte x Z) ≃ tt)) n) → ((λ x : Nat . ((gte x Z) ≃ tt)) (S n))"}],["Punctuation",1212,1213,{"not-for-navigation":"0 true"}],["Term variable",1208,1209,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1206,1219,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((gte x Z) ≃ tt)) n) → ((λ x : Nat . ((gte x Z) ≃ tt)) (S n)))"}],["Punctuation",1206,1207,{"not-for-navigation":"0 true"}],["Punctuation",1205,1220,{"not-for-navigation":"0 true"}],["Application of a term to a type",1203,1204,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((gte x Z) ≃ tt)) n) → ((λ x : Nat . ((gte x Z) ≃ tt)) (S n)))) → ((λ x : Nat . ((gte x Z) ≃ tt)) Z) → ((λ x : Nat . ((gte x Z) ≃ tt)) x)"}],["Term variable",1203,1204,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1197","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",1201,1223,{"language-level":"0 term","expected-type":"1 ((gte x Z) ≃ tt)","the motive":"2 λ x : Nat . ((gte x Z) ≃ tt)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",1197,1198,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1195,1223,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . (Gte x Z)"}],["Punctuation",1195,1196,{"not-for-navigation":"0 true"}],["Application of a type to a term",1183,1190,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",1189,1190,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",1183,1188,{"language-level":"0 type","kind":"1 Nat → ★"}],["Term variable",1187,1188,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1173","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Type variable",1183,1186,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1445","symbol":"2 Gte","kind":"3 Nat → Nat → ★"}],["Term variable",1173,1174,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1177,1180,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1171,1172,{"not-for-navigation":"0 true"}],["Dependent function type",1171,1190,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1072,1161,{"summary":"0 Not-Lt-Z : Π x : Nat . (Not · (Lt x Z))","erasure":"1 λ x . (x (λ n . λ r . λ u . [erased-proof]) (λ u . [erased-proof]))"}],["Application of a term to a term",1122,1159,{"language-level":"0 term","expected-type":"1 (Lt x Z) → False","type":"2 (Lt x Z) → False"}],["Delta",1155,1158,{"language-level":"0 term","type":"1 ∀ X : ★ . X","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Term variable",1157,1158,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1151","symbol":"2 u","type":"3 Lt Z Z","hnf of type":"4 ((lt Z Z) ≃ tt)"}],["Term variable",1151,1152,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lt Z Z","hnf of type":"4 ((lt Z Z) ≃ tt)"}],["Lambda abstraction (term-level)",1149,1158,{"language-level":"0 term","binder":"1 0","type":"2 (Lt Z Z) → False"}],["Punctuation",1149,1150,{"not-for-navigation":"0 true"}],["Punctuation",1148,1159,{"not-for-navigation":"0 true"}],["Application of a term to a term",1122,1147,{"language-level":"0 term","type":"1 ((λ x : Nat . ((Lt x Z) → False)) Z) → ((λ x : Nat . ((Lt x Z) → False)) x)"}],["Delta",1143,1146,{"language-level":"0 term","type":"1 ∀ X : ★ . X","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Term variable",1145,1146,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1139","symbol":"2 u","type":"3 Lt (S n) Z","hnf of type":"4 ((lt (S n) Z) ≃ tt)"}],["Term variable",1139,1140,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lt (S n) Z","hnf of type":"4 ((lt (S n) Z) ≃ tt)"}],["Lambda abstraction (term-level)",1137,1146,{"language-level":"0 term","binder":"1 0","type":"2 (Lt (S n) Z) → False"}],["Punctuation",1137,1138,{"not-for-navigation":"0 true"}],["Term variable",1133,1134,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r","type":"3 (λ x : Nat . ((Lt x Z) → False)) n","hnf of type":"4 (Lt n Z) → False"}],["Lambda abstraction (term-level)",1131,1146,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((Lt x Z) → False)) n) → ((λ x : Nat . ((Lt x Z) → False)) (S n))"}],["Punctuation",1131,1132,{"not-for-navigation":"0 true"}],["Term variable",1127,1128,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1125,1146,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((Lt x Z) → False)) n) → ((λ x : Nat . ((Lt x Z) → False)) (S n)))"}],["Punctuation",1125,1126,{"not-for-navigation":"0 true"}],["Punctuation",1124,1147,{"not-for-navigation":"0 true"}],["Application of a term to a type",1122,1123,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((Lt x Z) → False)) n) → ((λ x : Nat . ((Lt x Z) → False)) (S n)))) → ((λ x : Nat . ((Lt x Z) → False)) Z) → ((λ x : Nat . ((Lt x Z) → False)) x)"}],["Term variable",1122,1123,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1116","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",1120,1160,{"language-level":"0 term","expected-type":"1 (Lt x Z) → False","the motive":"2 λ x : Nat . ((Lt x Z) → False)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",1116,1117,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1114,1160,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . (Not · (Lt x Z))"}],["Punctuation",1114,1115,{"not-for-navigation":"0 true"}],["Application of a type to a type",1095,1109,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Application of a type to a term",1102,1108,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",1107,1108,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",1102,1106,{"language-level":"0 type","kind":"1 Nat → ★"}],["Term variable",1105,1106,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1085","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Type variable",1102,1104,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1260","symbol":"2 Lt","kind":"3 Nat → Nat → ★"}],["Punctuation",1101,1109,{"not-for-navigation":"0 true"}],["Type variable",1095,1098,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/not.ced - 16","symbol":"2 Not","kind":"3 ★ → ★"}],["Term variable",1085,1086,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1089,1092,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1083,1084,{"not-for-navigation":"0 true"}],["Dependent function type",1083,1109,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",1009,1070,{"summary":"0 Z-Lte : Π x : Nat . (Lte Z x)","erasure":"1 λ x . (x (λ n . λ _ . β) β)"}],["Application of a term to a term",1049,1068,{"language-level":"0 term","expected-type":"1 ((lte Z x) ≃ tt)","type":"2 ((lte Z x) ≃ tt)"}],["Beta axiom",1067,1068,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((lte Z Z) ≃ tt)"}],["Application of a term to a term",1049,1066,{"language-level":"0 term","type":"1 ((λ x : Nat . ((lte Z x) ≃ tt)) Z) → ((λ x : Nat . ((lte Z x) ≃ tt)) x)"}],["Beta axiom",1064,1065,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((lte Z (S n)) ≃ tt)"}],["Term variable",1060,1061,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 (λ x : Nat . ((lte Z x) ≃ tt)) n","hnf of type":"4 ((lte Z n) ≃ tt)"}],["Lambda abstraction (term-level)",1058,1065,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((lte Z x) ≃ tt)) n) → ((λ x : Nat . ((lte Z x) ≃ tt)) (S n))"}],["Punctuation",1058,1059,{"not-for-navigation":"0 true"}],["Term variable",1054,1055,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1052,1065,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((lte Z x) ≃ tt)) n) → ((λ x : Nat . ((lte Z x) ≃ tt)) (S n)))"}],["Punctuation",1052,1053,{"not-for-navigation":"0 true"}],["Punctuation",1051,1066,{"not-for-navigation":"0 true"}],["Application of a term to a type",1049,1050,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((lte Z x) ≃ tt)) n) → ((λ x : Nat . ((lte Z x) ≃ tt)) (S n)))) → ((λ x : Nat . ((lte Z x) ≃ tt)) Z) → ((λ x : Nat . ((lte Z x) ≃ tt)) x)"}],["Term variable",1049,1050,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1043","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",1047,1069,{"language-level":"0 term","expected-type":"1 ((lte Z x) ≃ tt)","the motive":"2 λ x : Nat . ((lte Z x) ≃ tt)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",1043,1044,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",1041,1069,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . (Lte Z x)"}],["Punctuation",1041,1042,{"not-for-navigation":"0 true"}],["Application of a type to a term",1029,1036,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",1035,1036,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 1019","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",1029,1034,{"language-level":"0 type","kind":"1 Nat → ★"}],["Term variable",1033,1034,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z","expected-type":"3 Nat","type":"4 Nat"}],["Type variable",1029,1032,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1321","symbol":"2 Lte","kind":"3 Nat → Nat → ★"}],["Term variable",1019,1020,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",1023,1026,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",1017,1018,{"not-for-navigation":"0 true"}],["Dependent function type",1017,1036,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",920,1005,{"summary":"0 Lte-Z : Π x : Nat . ((Lte x Z) → (x ≃ Z))","erasure":"1 λ x . (x (λ n . λ r . λ u . [erased-proof]) (λ u . β))"}],["Application of a term to a term",968,1003,{"language-level":"0 term","expected-type":"1 (Lte x Z) → (x ≃ Z)","type":"2 (Lte x Z) → (x ≃ Z)"}],["Beta axiom",1001,1002,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (Z ≃ Z)"}],["Term variable",997,998,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lte Z Z","hnf of type":"4 ((lte Z Z) ≃ tt)"}],["Lambda abstraction (term-level)",995,1002,{"language-level":"0 term","binder":"1 0","type":"2 (Lte Z Z) → (Z ≃ Z)"}],["Punctuation",995,996,{"not-for-navigation":"0 true"}],["Punctuation",994,1003,{"not-for-navigation":"0 true"}],["Application of a term to a term",968,993,{"language-level":"0 term","type":"1 ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) Z) → ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) x)"}],["Delta",989,992,{"language-level":"0 term","type":"1 ((S n) ≃ Z)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Term variable",991,992,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 985","symbol":"2 u","type":"3 Lte (S n) Z","hnf of type":"4 ((lte (S n) Z) ≃ tt)"}],["Term variable",985,986,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 Lte (S n) Z","hnf of type":"4 ((lte (S n) Z) ≃ tt)"}],["Lambda abstraction (term-level)",983,992,{"language-level":"0 term","binder":"1 0","type":"2 (Lte (S n) Z) → ((S n) ≃ Z)"}],["Punctuation",983,984,{"not-for-navigation":"0 true"}],["Term variable",979,980,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r","type":"3 (λ x : Nat . ((Lte x Z) → (x ≃ Z))) n","hnf of type":"4 (Lte n Z) → (n ≃ Z)"}],["Lambda abstraction (term-level)",977,992,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) n) → ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) (S n))"}],["Punctuation",977,978,{"not-for-navigation":"0 true"}],["Term variable",973,974,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",971,992,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((Lte x Z) → (x ≃ Z))) n) → ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) (S n)))"}],["Punctuation",971,972,{"not-for-navigation":"0 true"}],["Punctuation",970,993,{"not-for-navigation":"0 true"}],["Application of a term to a type",968,969,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((Lte x Z) → (x ≃ Z))) n) → ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) (S n)))) → ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) Z) → ((λ x : Nat . ((Lte x Z) → (x ≃ Z))) x)"}],["Term variable",968,969,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 962","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",966,1004,{"language-level":"0 term","expected-type":"1 (Lte x Z) → (x ≃ Z)","the motive":"2 λ x : Nat . ((Lte x Z) → (x ≃ Z))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",962,963,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",960,1004,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . ((Lte x Z) → (x ≃ Z))"}],["Punctuation",960,961,{"not-for-navigation":"0 true"}],["Equation",950,955,{"language-level":"0 type","kind":"1 ★"}],["Term variable",954,955,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z"}],["Term variable",950,951,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 930","symbol":"2 x"}],["Application of a type to a term",940,947,{"language-level":"0 type","expected kind":"1 ★","kind":"2 ★"}],["Term variable",946,947,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a type to a term",940,945,{"language-level":"0 type","kind":"1 Nat → ★"}],["Term variable",944,945,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 930","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Type variable",940,943,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1321","symbol":"2 Lte","kind":"3 Nat → Nat → ★"}],["Arrow type",940,955,{"language-level":"0 type","kind":"1 ★"}],["Term variable",930,931,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",934,937,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",928,929,{"not-for-navigation":"0 true"}],["Dependent function type",928,955,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",800,918,{"summary":"0 eqnat-defn : Π x : Nat . Π y : Nat . ((x ≃ y) → ((eqnat x y) ≃ tt))","erasure":"1 λ x . λ y . λ pf . β"}],["Rho",887,916,{"language-level":"0 term","the equation":"1 (x ≃ y)","type":"2 ((eqnat x y) ≃ tt)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",894,916,{"language-level":"0 term","the equation":"1 ((eqnat y y) ≃ tt)","type":"2 ((eqnat y y) ≃ tt)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",915,916,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (tt ≃ tt)"}],["Application of a term to a term",898,910,{"language-level":"0 term","type":"1 ((eqnat y y) ≃ tt)"}],["Term variable",909,910,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 876","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",898,908,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 524","symbol":"2 eqnat-refl","type":"3 Π x : Nat . ((eqnat x x) ≃ tt)","hnf of type":"4 Π x : Nat . ((eqnat x x) ≃ tt)"}],["Punctuation",896,912,{"not-for-navigation":"0 true"}],["Term variable",889,891,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 882","symbol":"2 pf","type":"3 (x ≃ y)","hnf of type":"4 (x ≃ y)"}],["Term variable",882,884,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf","type":"3 (x ≃ y)","hnf of type":"4 (x ≃ y)"}],["Lambda abstraction (term-level)",880,916,{"language-level":"0 term","binder":"1 0","type":"2 (x ≃ y) → ((eqnat x y) ≃ tt)"}],["Punctuation",880,881,{"not-for-navigation":"0 true"}],["Term variable",876,877,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",874,916,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((x ≃ y) → ((eqnat x y) ≃ tt))"}],["Punctuation",874,875,{"not-for-navigation":"0 true"}],["Term variable",870,871,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",868,916,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((x ≃ y) → ((eqnat x y) ≃ tt))"}],["Punctuation",868,869,{"not-for-navigation":"0 true"}],["Equation",849,863,{"language-level":"0 type","kind":"1 ★"}],["Term variable",861,863,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/bool.ced - 40","symbol":"2 tt"}],["Term variable",857,858,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 827","symbol":"2 y"}],["Term variable",855,856,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 815","symbol":"2 x"}],["Term variable",849,854,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 930","symbol":"2 eqnat"}],["Equation",839,844,{"language-level":"0 type","kind":"1 ★"}],["Term variable",843,844,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 827","symbol":"2 y"}],["Term variable",839,840,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 815","symbol":"2 x"}],["Punctuation",837,846,{"not-for-navigation":"0 true"}],["Arrow type",837,863,{"language-level":"0 type","kind":"1 ★"}],["Term variable",827,828,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",831,834,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",825,826,{"not-for-navigation":"0 true"}],["Dependent function type",825,863,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",815,816,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",819,822,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",813,814,{"not-for-navigation":"0 true"}],["Dependent function type",813,863,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",608,798,{"summary":"0 eqnat-sym : Π x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))","erasure":"1 λ x . (x (λ x . λ u . λ y . (y (λ y . λ v . (u y)) β)) (λ y . (y (λ py . λ u . β) β)))"}],["Application of a term to a term",679,796,{"language-level":"0 term","expected-type":"1 Π y : Nat . ((eqnat x y) ≃ (eqnat y x))","type":"2 Π y : Nat . ((eqnat x y) ≃ (eqnat y x))"}],["Application of a term to a term",760,794,{"language-level":"0 term","expected-type":"1 ((eqnat Z y) ≃ (eqnat y Z))","type":"2 ((eqnat Z y) ≃ (eqnat y Z))"}],["Beta axiom",793,794,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((eqnat Z Z) ≃ (eqnat Z Z))"}],["Application of a term to a term",760,786,{"language-level":"0 term","type":"1 ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) Z) → ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) y)"}],["Beta axiom",783,784,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((eqnat Z (S py)) ≃ (eqnat (S py) Z))"}],["Term variable",779,780,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 (λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) py","hnf of type":"4 ((eqnat Z py) ≃ (eqnat py Z))"}],["Lambda abstraction (term-level)",777,784,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) py) → ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) (S py))"}],["Punctuation",777,778,{"not-for-navigation":"0 true"}],["Term variable",772,774,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 py","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",770,784,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) n) → ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) (S n)))"}],["Punctuation",770,771,{"not-for-navigation":"0 true"}],["Punctuation",768,786,{"not-for-navigation":"0 true"}],["Application of a term to a type",760,761,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) n) → ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) (S n)))) → ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) Z) → ((λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))) y)"}],["Term variable",760,761,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 754","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",758,795,{"language-level":"0 term","expected-type":"1 ((eqnat Z y) ≃ (eqnat y Z))","the motive":"2 λ y : Nat . ((eqnat Z y) ≃ (eqnat y Z))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",754,755,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",752,795,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((eqnat Z y) ≃ (eqnat y Z))"}],["Punctuation",752,753,{"not-for-navigation":"0 true"}],["Punctuation",751,796,{"not-for-navigation":"0 true"}],["Application of a term to a term",679,746,{"language-level":"0 term","type":"1 ((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) Z) → ((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) x)"}],["Application of a term to a term",707,744,{"language-level":"0 term","expected-type":"1 ((eqnat (S x) y) ≃ (eqnat y (S x)))","type":"2 ((eqnat (S x) y) ≃ (eqnat y (S x)))"}],["Beta axiom",743,744,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((eqnat (S x) Z) ≃ (eqnat Z (S x)))"}],["Application of a term to a term",707,736,{"language-level":"0 term","type":"1 ((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) Z) → ((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) y)"}],["Application of a term to a term",730,733,{"language-level":"0 term","expected-type":"1 ((eqnat (S x) (S y)) ≃ (eqnat (S y) (S x)))","type":"2 ((eqnat x y) ≃ (eqnat y x))"}],["Term variable",732,733,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 719","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",730,731,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 695","symbol":"2 u","type":"3 (λ x' : Nat . Π y : Nat . ((eqnat x' y) ≃ (eqnat y x'))) x","hnf of type":"4 Π y : Nat . ((eqnat x y) ≃ (eqnat y x))"}],["Punctuation",729,734,{"not-for-navigation":"0 true"}],["Term variable",725,726,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 v","type":"3 (λ y' : Nat . ((eqnat (S x) y') ≃ (eqnat y' (S x)))) y","hnf of type":"4 ((eqnat (S x) y) ≃ (eqnat y (S x)))"}],["Lambda abstraction (term-level)",723,734,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y' : Nat . ((eqnat (S x) y') ≃ (eqnat y' (S x)))) y) → ((λ y' : Nat . ((eqnat (S x) y') ≃ (eqnat y' (S x)))) (S y))"}],["Punctuation",723,724,{"not-for-navigation":"0 true"}],["Term variable",719,720,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 701","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",717,734,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) n) → ((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) (S n)))"}],["Punctuation",717,718,{"not-for-navigation":"0 true"}],["Punctuation",715,736,{"not-for-navigation":"0 true"}],["Application of a term to a type",707,708,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) n) → ((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) (S n)))) → ((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) Z) → ((λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))) y)"}],["Term variable",707,708,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 701","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",705,745,{"language-level":"0 term","expected-type":"1 ((eqnat (S x) y) ≃ (eqnat y (S x)))","the motive":"2 λ y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",701,702,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",699,745,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((eqnat (S x) y) ≃ (eqnat y (S x)))"}],["Punctuation",699,700,{"not-for-navigation":"0 true"}],["Term variable",695,696,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 (λ x' : Nat . Π y : Nat . ((eqnat x' y) ≃ (eqnat y x'))) x","hnf of type":"4 Π y : Nat . ((eqnat x y) ≃ (eqnat y x))"}],["Lambda abstraction (term-level)",693,745,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x' : Nat . Π y : Nat . ((eqnat x' y) ≃ (eqnat y x'))) x) → ((λ x' : Nat . Π y : Nat . ((eqnat x' y) ≃ (eqnat y x'))) (S x))"}],["Punctuation",693,694,{"not-for-navigation":"0 true"}],["Term variable",689,690,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 673","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",687,745,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) n) → ((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) (S n)))"}],["Punctuation",687,688,{"not-for-navigation":"0 true"}],["Punctuation",686,746,{"not-for-navigation":"0 true"}],["Application of a term to a type",679,680,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) n) → ((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) (S n)))) → ((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) Z) → ((λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))) x)"}],["Term variable",679,680,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 673","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",677,797,{"language-level":"0 term","expected-type":"1 Π y : Nat . ((eqnat x y) ≃ (eqnat y x))","the motive":"2 λ x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",673,674,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",671,797,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((eqnat x y) ≃ (eqnat y x))"}],["Punctuation",671,672,{"not-for-navigation":"0 true"}],["Equation",644,665,{"language-level":"0 type","kind":"1 ★"}],["Term variable",664,665,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 622","symbol":"2 x"}],["Term variable",662,663,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 634","symbol":"2 y"}],["Term variable",656,661,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 930","symbol":"2 eqnat"}],["Term variable",652,653,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 634","symbol":"2 y"}],["Term variable",650,651,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 622","symbol":"2 x"}],["Term variable",644,649,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 930","symbol":"2 eqnat"}],["Term variable",634,635,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",638,641,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",632,633,{"not-for-navigation":"0 true"}],["Dependent function type",632,665,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",622,623,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",626,629,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",620,621,{"not-for-navigation":"0 true"}],["Dependent function type",620,665,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",524,606,{"summary":"0 eqnat-refl : Π x : Nat . ((eqnat x x) ≃ tt)","erasure":"1 λ x . (x (λ px . λ h . β) β)"}],["Application of a term to a term",576,604,{"language-level":"0 term","expected-type":"1 ((eqnat x x) ≃ tt)","type":"2 ((eqnat x x) ≃ tt)"}],["Beta axiom",603,604,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((eqnat Z Z) ≃ tt)"}],["Application of a term to a term",576,602,{"language-level":"0 term","type":"1 ((λ x : Nat . ((eqnat x x) ≃ tt)) Z) → ((λ x : Nat . ((eqnat x x) ≃ tt)) x)"}],["Rho",593,600,{"language-level":"0 term","the equation":"1 ((eqnat px px) ≃ tt)","type":"2 ((eqnat (S px) (S px)) ≃ tt)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",599,600,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (tt ≃ tt)"}],["Term variable",595,596,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 589","symbol":"2 h","type":"3 (λ x : Nat . ((eqnat x x) ≃ tt)) px","hnf of type":"4 ((eqnat px px) ≃ tt)"}],["Term variable",589,590,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ x : Nat . ((eqnat x x) ≃ tt)) px","hnf of type":"4 ((eqnat px px) ≃ tt)"}],["Lambda abstraction (term-level)",587,600,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((eqnat x x) ≃ tt)) px) → ((λ x : Nat . ((eqnat x x) ≃ tt)) (S px))"}],["Punctuation",587,588,{"not-for-navigation":"0 true"}],["Term variable",582,584,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 px","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",580,600,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((eqnat x x) ≃ tt)) n) → ((λ x : Nat . ((eqnat x x) ≃ tt)) (S n)))"}],["Punctuation",580,581,{"not-for-navigation":"0 true"}],["Punctuation",578,602,{"not-for-navigation":"0 true"}],["Application of a term to a type",576,577,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((eqnat x x) ≃ tt)) n) → ((λ x : Nat . ((eqnat x x) ≃ tt)) (S n)))) → ((λ x : Nat . ((eqnat x x) ≃ tt)) Z) → ((λ x : Nat . ((eqnat x x) ≃ tt)) x)"}],["Term variable",576,577,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 570","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",574,605,{"language-level":"0 term","expected-type":"1 ((eqnat x x) ≃ tt)","the motive":"2 λ x : Nat . ((eqnat x x) ≃ tt)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",570,571,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",568,605,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . ((eqnat x x) ≃ tt)"}],["Punctuation",568,569,{"not-for-navigation":"0 true"}],["Equation",549,563,{"language-level":"0 type","kind":"1 ★"}],["Term variable",561,563,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/bool.ced - 40","symbol":"2 tt"}],["Term variable",557,558,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 539","symbol":"2 x"}],["Term variable",555,556,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 539","symbol":"2 x"}],["Term variable",549,554,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 930","symbol":"2 eqnat"}],["Term variable",539,540,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",543,546,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",537,538,{"not-for-navigation":"0 true"}],["Dependent function type",537,563,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",442,522,{"summary":"0 eqnat-S : Π x : Nat . ((eqnat x (S x)) ≃ ff)","erasure":"1 λ x . (x (λ p . λ u . β) β)"}],["Application of a term to a term",495,520,{"language-level":"0 term","expected-type":"1 ((eqnat x (S x)) ≃ ff)","type":"2 ((eqnat x (S x)) ≃ ff)"}],["Beta axiom",519,520,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((eqnat Z (S Z)) ≃ ff)"}],["Application of a term to a term",495,518,{"language-level":"0 term","type":"1 ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) Z) → ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) x)"}],["Rho",510,517,{"language-level":"0 term","the equation":"1 ((eqnat p (S p)) ≃ ff)","type":"2 ((eqnat (S p) (S (S p))) ≃ ff)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",516,517,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (ff ≃ ff)"}],["Term variable",512,513,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 506","symbol":"2 u","type":"3 (λ x : Nat . ((eqnat x (S x)) ≃ ff)) p","hnf of type":"4 ((eqnat p (S p)) ≃ ff)"}],["Term variable",506,507,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 (λ x : Nat . ((eqnat x (S x)) ≃ ff)) p","hnf of type":"4 ((eqnat p (S p)) ≃ ff)"}],["Lambda abstraction (term-level)",504,517,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) p) → ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) (S p))"}],["Punctuation",504,505,{"not-for-navigation":"0 true"}],["Term variable",500,501,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",498,517,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((eqnat x (S x)) ≃ ff)) n) → ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) (S n)))"}],["Punctuation",498,499,{"not-for-navigation":"0 true"}],["Punctuation",497,518,{"not-for-navigation":"0 true"}],["Application of a term to a type",495,496,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((eqnat x (S x)) ≃ ff)) n) → ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) (S n)))) → ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) Z) → ((λ x : Nat . ((eqnat x (S x)) ≃ ff)) x)"}],["Term variable",495,496,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 489","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",493,521,{"language-level":"0 term","expected-type":"1 ((eqnat x (S x)) ≃ ff)","the motive":"2 λ x : Nat . ((eqnat x (S x)) ≃ ff)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",489,490,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",487,521,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . ((eqnat x (S x)) ≃ ff)"}],["Punctuation",487,488,{"not-for-navigation":"0 true"}],["Equation",464,482,{"language-level":"0 type","kind":"1 ★"}],["Term variable",480,482,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/bool.ced - 52","symbol":"2 ff"}],["Term variable",475,476,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 454","symbol":"2 x"}],["Term variable",473,474,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",470,471,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 454","symbol":"2 x"}],["Term variable",464,469,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 930","symbol":"2 eqnat"}],["Term variable",454,455,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",458,461,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",452,453,{"not-for-navigation":"0 true"}],["Dependent function type",452,482,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",262,440,{"summary":"0 eqnat-eq : Π x : Nat . Π y : Nat . (((eqnat x y) ≃ tt) → (x ≃ y))","erasure":"1 λ x . λ y . λ u . (compare x y (λ v . [erased-proof]) (compare-eq x y) (λ v . [erased-proof]) β)"}],["Application of a term to a term",348,439,{"language-level":"0 term","expected-type":"1 (x ≃ y)","type":"2 (x ≃ y)"}],["Beta axiom",438,439,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((compare x y) ≃ (compare x y))"}],["Application of a term to a term",348,438,{"language-level":"0 term","type":"1 ((compare x y) ≃ (compare x y)) → (x ≃ y)"}],["Delta",422,436,{"language-level":"0 term","type":"1 (x ≃ y)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Rho",425,435,{"language-level":"0 term","type":"1 ((GT ff tt ff) ≃ tt)","explanation":"2 Rewrite terms in the synthesized type, using an equation. "}],["Epsilon",431,435,{"language-level":"0 term","type":"1 ((x (λ p . λ r . λ m' . (m' (λ p' . λ u . (r p')) GT)) (λ m' . (m' (λ _ . λ _ . LT) EQ)) y ff tt ff) ≃ tt)","explanation":"2 Normalize the left-hand side of the synthesized equation, using head reduction."}],["Term variable",434,435,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 341","symbol":"2 u","type":"3 ((eqnat x y) ≃ tt)","hnf of type":"4 ((x (λ p . λ r . λ m' . (m' (λ p' . λ u . (r p')) GT)) (λ m' . (m' (λ _ . λ _ . LT) EQ)) y ff tt ff) ≃ tt)"}],["Term variable",427,428,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 418","symbol":"2 v","type":"3 ((compare x y) ≃ GT)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ GT)"}],["Punctuation",424,436,{"not-for-navigation":"0 true"}],["Term variable",418,419,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 v","type":"3 ((compare x y) ≃ GT)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ GT)"}],["Lambda abstraction (term-level)",416,436,{"language-level":"0 term","binder":"1 0","type":"2 ((compare x y) ≃ GT) → (x ≃ y)"}],["Punctuation",416,417,{"not-for-navigation":"0 true"}],["Punctuation",415,438,{"not-for-navigation":"0 true"}],["Application of a term to a term",348,410,{"language-level":"0 term","type":"1 ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) GT) → ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) (compare x y))"}],["Application of a term to a term",395,409,{"language-level":"0 term","expected-type":"1 ((compare x y) ≃ EQ) → (x ≃ y)","type":"2 ((compare x y) ≃ EQ) → (x ≃ y)"}],["Term variable",408,409,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 335","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",395,407,{"language-level":"0 term","type":"1 Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Term variable",406,407,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 329","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",395,405,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 26","symbol":"2 compare-eq","type":"3 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","hnf of type":"4 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Punctuation",394,410,{"not-for-navigation":"0 true"}],["Application of a term to a term",348,389,{"language-level":"0 term","type":"1 ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) EQ) → ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) GT) → ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) (compare x y))"}],["Delta",373,387,{"language-level":"0 term","type":"1 (x ≃ y)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Rho",376,386,{"language-level":"0 term","type":"1 ((LT ff tt ff) ≃ tt)","explanation":"2 Rewrite terms in the synthesized type, using an equation. "}],["Epsilon",382,386,{"language-level":"0 term","type":"1 ((x (λ p . λ r . λ m' . (m' (λ p' . λ u . (r p')) GT)) (λ m' . (m' (λ _ . λ _ . LT) EQ)) y ff tt ff) ≃ tt)","explanation":"2 Normalize the left-hand side of the synthesized equation, using head reduction."}],["Term variable",385,386,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 341","symbol":"2 u","type":"3 ((eqnat x y) ≃ tt)","hnf of type":"4 ((x (λ p . λ r . λ m' . (m' (λ p' . λ u . (r p')) GT)) (λ m' . (m' (λ _ . λ _ . LT) EQ)) y ff tt ff) ≃ tt)"}],["Term variable",378,379,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 369","symbol":"2 v","type":"3 ((compare x y) ≃ LT)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ LT)"}],["Punctuation",375,387,{"not-for-navigation":"0 true"}],["Term variable",369,370,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 v","type":"3 ((compare x y) ≃ LT)","hnf of type":"4 ((x (λ p . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) y) ≃ LT)"}],["Lambda abstraction (term-level)",367,387,{"language-level":"0 term","binder":"1 0","type":"2 ((compare x y) ≃ LT) → (x ≃ y)"}],["Punctuation",367,368,{"not-for-navigation":"0 true"}],["Punctuation",366,389,{"not-for-navigation":"0 true"}],["Application of a term to a type",348,362,{"language-level":"0 term","type":"1 ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) LT) → ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) EQ) → ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) GT) → ((λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))) (compare x y))"}],["Application of a term to a term",349,360,{"language-level":"0 term","type":"1 compare-t"}],["Term variable",359,360,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 335","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",349,358,{"language-level":"0 term","type":"1 Nat → compare-t"}],["Term variable",357,358,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 329","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",349,356,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare","type":"3 Nat → Nat → compare-t","hnf of type":"4 Nat → Nat → compare-t"}],["Punctuation",348,361,{"not-for-navigation":"0 true"}],["Theta",345,439,{"language-level":"0 term","expected-type":"1 (x ≃ y)","the motive":"2 λ x' : compare-t . (((compare x y) ≃ x') → (x ≃ y))","explanation":"3 Perform an elimination with the first term, after abstracting it with an equation from the expected type."}],["Term variable",341,342,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 ((eqnat x y) ≃ tt)","hnf of type":"4 ((x (λ p . λ r . λ m' . (m' (λ p' . λ u . (r p')) GT)) (λ m' . (m' (λ _ . λ _ . LT) EQ)) y ff tt ff) ≃ tt)"}],["Lambda abstraction (term-level)",339,439,{"language-level":"0 term","binder":"1 0","type":"2 ((eqnat x y) ≃ tt) → (x ≃ y)"}],["Punctuation",339,340,{"not-for-navigation":"0 true"}],["Term variable",335,336,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",333,439,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . (((eqnat x y) ≃ tt) → (x ≃ y))"}],["Punctuation",333,334,{"not-for-navigation":"0 true"}],["Term variable",329,330,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",327,439,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . (((eqnat x y) ≃ tt) → (x ≃ y))"}],["Punctuation",327,328,{"not-for-navigation":"0 true"}],["Equation",316,321,{"language-level":"0 type","kind":"1 ★"}],["Term variable",320,321,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 287","symbol":"2 y"}],["Term variable",316,317,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 275","symbol":"2 x"}],["Equation",298,312,{"language-level":"0 type","kind":"1 ★"}],["Term variable",310,312,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/bool.ced - 40","symbol":"2 tt"}],["Term variable",306,307,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 287","symbol":"2 y"}],["Term variable",304,305,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 275","symbol":"2 x"}],["Term variable",298,303,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 930","symbol":"2 eqnat"}],["Punctuation",297,313,{"not-for-navigation":"0 true"}],["Arrow type",297,321,{"language-level":"0 type","kind":"1 ★"}],["Term variable",287,288,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",291,294,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",285,286,{"not-for-navigation":"0 true"}],["Dependent function type",285,321,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",275,276,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",279,282,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",273,274,{"not-for-navigation":"0 true"}],["Dependent function type",273,321,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",26,260,{"summary":"0 compare-eq : Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","erasure":"1 λ x . (x (λ p . λ r . λ y . (y (λ p' . λ r' . λ u . β) (λ u . [erased-proof]))) (λ y . (y (λ p' . λ r' . λ u . [erased-proof]) (λ u . β))))"}],["Application of a term to a term",102,258,{"language-level":"0 term","expected-type":"1 Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","type":"2 Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Application of a term to a term",207,256,{"language-level":"0 term","expected-type":"1 ((compare Z y) ≃ EQ) → (Z ≃ y)","type":"2 ((compare Z y) ≃ EQ) → (Z ≃ y)"}],["Beta axiom",254,255,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (Z ≃ Z)"}],["Term variable",250,251,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 ((compare Z Z) ≃ EQ)","hnf of type":"4 (EQ ≃ EQ)"}],["Lambda abstraction (term-level)",248,255,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z Z) ≃ EQ) → (Z ≃ Z)"}],["Punctuation",248,249,{"not-for-navigation":"0 true"}],["Punctuation",247,256,{"not-for-navigation":"0 true"}],["Application of a term to a term",207,240,{"language-level":"0 term","type":"1 ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) Z) → ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) y)"}],["Delta",236,239,{"language-level":"0 term","type":"1 (Z ≃ (S p'))","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Term variable",238,239,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 232","symbol":"2 u","type":"3 ((compare Z (S p')) ≃ EQ)","hnf of type":"4 ((S p' (λ _ . λ _ . LT) EQ) ≃ EQ)"}],["Term variable",232,233,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 ((compare Z (S p')) ≃ EQ)","hnf of type":"4 ((S p' (λ _ . λ _ . LT) EQ) ≃ EQ)"}],["Lambda abstraction (term-level)",230,239,{"language-level":"0 term","binder":"1 0","type":"2 ((compare Z (S p')) ≃ EQ) → (Z ≃ (S p'))"}],["Punctuation",230,231,{"not-for-navigation":"0 true"}],["Term variable",225,227,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r'","type":"3 (λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) p'","hnf of type":"4 ((compare Z p') ≃ EQ) → (Z ≃ p')"}],["Lambda abstraction (term-level)",223,239,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) p') → ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) (S p'))"}],["Punctuation",223,224,{"not-for-navigation":"0 true"}],["Term variable",218,220,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p'","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",216,239,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) n) → ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) (S n)))"}],["Punctuation",216,217,{"not-for-navigation":"0 true"}],["Punctuation",215,240,{"not-for-navigation":"0 true"}],["Application of a term to a type",207,208,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) n) → ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) (S n)))) → ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) Z) → ((λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))) y)"}],["Term variable",207,208,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 201","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",205,257,{"language-level":"0 term","expected-type":"1 ((compare Z y) ≃ EQ) → (Z ≃ y)","the motive":"2 λ y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",201,202,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",199,257,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . (((compare Z y) ≃ EQ) → (Z ≃ y))"}],["Punctuation",199,200,{"not-for-navigation":"0 true"}],["Punctuation",198,258,{"not-for-navigation":"0 true"}],["Application of a term to a term",102,193,{"language-level":"0 term","type":"1 ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) Z) → ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) x)"}],["Application of a term to a term",129,191,{"language-level":"0 term","expected-type":"1 ((compare (S p) y) ≃ EQ) → ((S p) ≃ y)","type":"2 ((compare (S p) y) ≃ EQ) → ((S p) ≃ y)"}],["Delta",187,190,{"language-level":"0 term","type":"1 ((S p) ≃ Z)","explanation":"2 A term for proving any formula one wishes, given a proof of a beta-equivalence which is false."}],["Term variable",189,190,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 183","symbol":"2 u","type":"3 ((compare (S p) Z) ≃ EQ)","hnf of type":"4 ((S p (λ p' . λ r . λ m . (m (λ p'' . λ u . (r p'')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ EQ)"}],["Term variable",183,184,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 ((compare (S p) Z) ≃ EQ)","hnf of type":"4 ((S p (λ p' . λ r . λ m . (m (λ p'' . λ u . (r p'')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) Z) ≃ EQ)"}],["Lambda abstraction (term-level)",181,190,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S p) Z) ≃ EQ) → ((S p) ≃ Z)"}],["Punctuation",181,182,{"not-for-navigation":"0 true"}],["Punctuation",180,191,{"not-for-navigation":"0 true"}],["Application of a term to a term",129,173,{"language-level":"0 term","type":"1 ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) Z) → ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) y)"}],["Rho",158,172,{"language-level":"0 term","the equation":"1 (p ≃ p')","type":"2 ((S p) ≃ (S p'))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",171,172,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((S p') ≃ (S p'))"}],["Application of a term to a term",161,167,{"language-level":"0 term","type":"1 (p ≃ p')"}],["Term variable",166,167,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 154","symbol":"2 u","expected-type":"3 ((compare p p') ≃ EQ)","type":"4 ((compare (S p) (S p')) ≃ EQ)"}],["Application of a term to a term",161,165,{"language-level":"0 term","type":"1 ((compare p p') ≃ EQ) → (p ≃ p')"}],["Term variable",163,165,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 140","symbol":"2 p'","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",161,162,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 117","symbol":"2 r","type":"3 (λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) p","hnf of type":"4 Π y : Nat . (((compare p y) ≃ EQ) → (p ≃ y))"}],["Punctuation",160,168,{"not-for-navigation":"0 true"}],["Term variable",154,155,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 u","type":"3 ((compare (S p) (S p')) ≃ EQ)","hnf of type":"4 ((S p (λ p'' . λ r . λ m . (m (λ p' . λ u . (r p')) GT)) (λ m . (m (λ _ . λ _ . LT) EQ)) (S p')) ≃ EQ)"}],["Lambda abstraction (term-level)",152,172,{"language-level":"0 term","binder":"1 0","type":"2 ((compare (S p) (S p')) ≃ EQ) → ((S p) ≃ (S p'))"}],["Punctuation",152,153,{"not-for-navigation":"0 true"}],["Term variable",147,149,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r'","type":"3 (λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) p'","hnf of type":"4 ((compare (S p) p') ≃ EQ) → ((S p) ≃ p')"}],["Lambda abstraction (term-level)",145,172,{"language-level":"0 term","binder":"1 0","type":"2 ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) p') → ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) (S p'))"}],["Punctuation",145,146,{"not-for-navigation":"0 true"}],["Term variable",140,142,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p'","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",138,172,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) n) → ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) (S n)))"}],["Punctuation",138,139,{"not-for-navigation":"0 true"}],["Punctuation",137,173,{"not-for-navigation":"0 true"}],["Application of a term to a type",129,130,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) n) → ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) (S n)))) → ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) Z) → ((λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))) y)"}],["Term variable",129,130,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 123","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",127,192,{"language-level":"0 term","expected-type":"1 ((compare (S p) y) ≃ EQ) → ((S p) ≃ y)","the motive":"2 λ y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",123,124,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",121,192,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . (((compare (S p) y) ≃ EQ) → ((S p) ≃ y))"}],["Punctuation",121,122,{"not-for-navigation":"0 true"}],["Term variable",117,118,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 r","type":"3 (λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) p","hnf of type":"4 Π y : Nat . (((compare p y) ≃ EQ) → (p ≃ y))"}],["Lambda abstraction (term-level)",115,192,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) p) → ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) (S p))"}],["Punctuation",115,116,{"not-for-navigation":"0 true"}],["Term variable",111,112,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",109,192,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) n) → ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) (S n)))"}],["Punctuation",109,110,{"not-for-navigation":"0 true"}],["Punctuation",108,193,{"not-for-navigation":"0 true"}],["Application of a term to a type",102,103,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) n) → ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) (S n)))) → ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) Z) → ((λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))) x)"}],["Term variable",102,103,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 96","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",100,259,{"language-level":"0 term","expected-type":"1 Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","the motive":"2 λ x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",96,97,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",94,259,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . (((compare x y) ≃ EQ) → (x ≃ y))"}],["Punctuation",94,95,{"not-for-navigation":"0 true"}],["Equation",84,89,{"language-level":"0 type","kind":"1 ★"}],["Term variable",88,89,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 53","symbol":"2 y"}],["Term variable",84,85,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 41","symbol":"2 x"}],["Equation",64,80,{"language-level":"0 type","kind":"1 ★"}],["Term variable",78,80,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/compare.ced - 34","symbol":"2 EQ"}],["Term variable",74,75,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 53","symbol":"2 y"}],["Term variable",72,73,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/compare/compare-0.ced - 41","symbol":"2 x"}],["Term variable",64,71,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 781","symbol":"2 compare"}],["Punctuation",63,81,{"not-for-navigation":"0 true"}],["Arrow type",63,89,{"language-level":"0 type","kind":"1 ★"}],["Term variable",53,54,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",57,60,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",51,52,{"not-for-navigation":"0 true"}],["Dependent function type",51,89,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",41,42,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",45,48,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",39,40,{"not-for-navigation":"0 true"}],["Dependent function type",39,89,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Import of another source file",13,24,{"location":"0 /space/guneratne/cedille-stuff/cedille/lib/not.ced - 1"}],["Import of another source file",1,12,{"location":"0 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1"}]]}
