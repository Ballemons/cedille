{"spans":[["Cedille source file (add-1.ced)",1,631,{}],["Term-level definition (checking)",336,620,{"summary":"0 add-inj-0 : Π x : Nat . Π y : Nat . Π z : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))","erasure":"1 λ x . λ y . λ z . (x (λ px . λ h . λ pf . (h (S-inj (add px y) (add px z) pf))) (λ pf . pf))"}],["Application of a term to a term",438,618,{"language-level":"0 term","expected-type":"1 ((add x y) ≃ (add x z)) → (y ≃ z)","type":"2 ((add x y) ≃ (add x z)) → (y ≃ z)"}],["Rho",578,616,{"language-level":"0 term","the equation":"1 ((add Z y) ≃ y)","type":"2 (y ≃ z)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",596,616,{"language-level":"0 term","the equation":"1 ((add Z z) ≃ z)","type":"2 (y ≃ z)","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Term variable",614,616,{"language-level":"0 term","location":"1 add-1.ced - 573","symbol":"2 pf","expected-type":"3 (y ≃ z)","type":"4 ((add Z y) ≃ (add Z z))"}],["Application of a term to a term",600,609,{"language-level":"0 term","type":"1 ((add Z z) ≃ z)"}],["Term variable",608,609,{"language-level":"0 term","location":"1 add-1.ced - 432","symbol":"2 z","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",600,607,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 110","symbol":"2 add-Z-0","type":"3 Π n : Nat . ((add Z n) ≃ n)","hnf of type":"4 Π n : Nat . ((add Z n) ≃ n)"}],["Punctuation",598,611,{"not-for-navigation":"0 true"}],["Application of a term to a term",582,591,{"language-level":"0 term","type":"1 ((add Z y) ≃ y)"}],["Term variable",590,591,{"language-level":"0 term","location":"1 add-1.ced - 426","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",582,589,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 110","symbol":"2 add-Z-0","type":"3 Π n : Nat . ((add Z n) ≃ n)","hnf of type":"4 Π n : Nat . ((add Z n) ≃ n)"}],["Punctuation",580,593,{"not-for-navigation":"0 true"}],["Term variable",573,575,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf","type":"3 ((add Z y) ≃ (add Z z))","hnf of type":"4 (y ≃ z)"}],["Lambda abstraction (term-level)",571,616,{"language-level":"0 term","binder":"1 0","type":"2 ((add Z y) ≃ (add Z z)) → (y ≃ z)"}],["Punctuation",571,572,{"not-for-navigation":"0 true"}],["Punctuation",569,618,{"not-for-navigation":"0 true"}],["Application of a term to a term",438,564,{"language-level":"0 term","type":"1 ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) Z) → ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) x)"}],["Application of a term to a term",466,562,{"language-level":"0 term","expected-type":"1 (y ≃ z)","type":"2 (y ≃ z)"}],["Application of a term to a term",470,560,{"language-level":"0 term","expected-type":"1 ((add px y) ≃ (add px z))","type":"2 ((add px y) ≃ (add px z))"}],["Rho",504,558,{"language-level":"0 term","the equation":"1 ((add (S px) y) ≃ (S (add px y)))","type":"2 ((S (add px y)) ≃ (S (add px z)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",530,558,{"language-level":"0 term","the equation":"1 ((add (S px) z) ≃ (S (add px z)))","type":"2 ((S (add px y)) ≃ (S (add px z)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Term variable",556,558,{"language-level":"0 term","location":"1 add-1.ced - 461","symbol":"2 pf","expected-type":"3 ((S (add px y)) ≃ (S (add px z)))","type":"4 ((add (S px) y) ≃ (add (S px) z))"}],["Application of a term to a term",534,551,{"language-level":"0 term","type":"1 ((add (S px) z) ≃ (S (add px z)))"}],["Term variable",550,551,{"language-level":"0 term","location":"1 add-1.ced - 432","symbol":"2 z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",534,549,{"language-level":"0 term","type":"1 Π m : Nat . ((add (S px) m) ≃ (S (add px m)))"}],["Term variable",547,549,{"language-level":"0 term","location":"1 add-1.ced - 448","symbol":"2 px","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",534,546,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 269","symbol":"2 add-S-comm-0","type":"3 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))"}],["Punctuation",532,553,{"not-for-navigation":"0 true"}],["Application of a term to a term",508,525,{"language-level":"0 term","type":"1 ((add (S px) y) ≃ (S (add px y)))"}],["Term variable",524,525,{"language-level":"0 term","location":"1 add-1.ced - 426","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",508,523,{"language-level":"0 term","type":"1 Π m : Nat . ((add (S px) m) ≃ (S (add px m)))"}],["Term variable",521,523,{"language-level":"0 term","location":"1 add-1.ced - 448","symbol":"2 px","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",508,520,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 269","symbol":"2 add-S-comm-0","type":"3 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))"}],["Punctuation",506,527,{"not-for-navigation":"0 true"}],["Punctuation",502,560,{"not-for-navigation":"0 true"}],["Application of a term to a term",470,501,{"language-level":"0 term","type":"1 ((S (add px y)) ≃ (S (add px z))) → ((add px y) ≃ (add px z))"}],["Application of a term to a term",491,499,{"language-level":"0 term","expected-type":"1 Nat","type":"2 Nat"}],["Term variable",498,499,{"language-level":"0 term","location":"1 add-1.ced - 432","symbol":"2 z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",491,497,{"language-level":"0 term","type":"1 Nat → Nat"}],["Term variable",495,497,{"language-level":"0 term","location":"1 add-1.ced - 448","symbol":"2 px","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",491,494,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add","type":"3 Nat → Nat → Nat","hnf of type":"4 Nat → Nat → Nat"}],["Punctuation",489,501,{"not-for-navigation":"0 true"}],["Application of a term to a term",470,488,{"language-level":"0 term","type":"1 Π y' : Nat . (((S (add px y)) ≃ (S y')) → ((add px y) ≃ y'))"}],["Application of a term to a term",478,486,{"language-level":"0 term","expected-type":"1 Nat","type":"2 Nat"}],["Term variable",485,486,{"language-level":"0 term","location":"1 add-1.ced - 426","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",478,484,{"language-level":"0 term","type":"1 Nat → Nat"}],["Term variable",482,484,{"language-level":"0 term","location":"1 add-1.ced - 448","symbol":"2 px","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",478,481,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add","type":"3 Nat → Nat → Nat","hnf of type":"4 Nat → Nat → Nat"}],["Punctuation",476,488,{"not-for-navigation":"0 true"}],["Term variable",470,475,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/S/S-0.ced - 28","symbol":"2 S-inj","type":"3 Π x : Nat . Π y : Nat . (((S x) ≃ (S y)) → (x ≃ y))","hnf of type":"4 Π x : Nat . Π y : Nat . (((S x) ≃ (S y)) → (x ≃ y))"}],["Punctuation",468,562,{"not-for-navigation":"0 true"}],["Term variable",466,467,{"language-level":"0 term","location":"1 add-1.ced - 455","symbol":"2 h","type":"3 (λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) px","hnf of type":"4 ((add px y) ≃ (add px z)) → (y ≃ z)"}],["Term variable",461,463,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 pf","type":"3 ((add (S px) y) ≃ (add (S px) z))","hnf of type":"4 ((S px (λ n' . S) y) ≃ (S px (λ n' . S) z))"}],["Lambda abstraction (term-level)",459,562,{"language-level":"0 term","binder":"1 0","type":"2 ((add (S px) y) ≃ (add (S px) z)) → (y ≃ z)"}],["Punctuation",459,460,{"not-for-navigation":"0 true"}],["Term variable",455,456,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) px","hnf of type":"4 ((add px y) ≃ (add px z)) → (y ≃ z)"}],["Lambda abstraction (term-level)",453,562,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) px) → ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) (S px))"}],["Punctuation",453,454,{"not-for-navigation":"0 true"}],["Term variable",448,450,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 px","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",446,562,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) n) → ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) (S n)))"}],["Punctuation",446,447,{"not-for-navigation":"0 true"}],["Punctuation",444,564,{"not-for-navigation":"0 true"}],["Application of a term to a type",438,439,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) n) → ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) (S n)))) → ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) Z) → ((λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))) x)"}],["Term variable",438,439,{"language-level":"0 term","location":"1 add-1.ced - 420","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",436,619,{"language-level":"0 term","expected-type":"1 ((add x y) ≃ (add x z)) → (y ≃ z)","the motive":"2 λ x : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",432,433,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",430,619,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))"}],["Punctuation",430,431,{"not-for-navigation":"0 true"}],["Term variable",426,427,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",424,619,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))"}],["Punctuation",424,425,{"not-for-navigation":"0 true"}],["Term variable",420,421,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",418,619,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . Π z : Nat . (((add x y) ≃ (add x z)) → (y ≃ z))"}],["Punctuation",418,419,{"not-for-navigation":"0 true"}],["Equation",408,413,{"language-level":"0 type","kind":"1 ★"}],["Term variable",412,413,{"language-level":"0 term","location":"1 add-1.ced - 374","symbol":"2 z"}],["Term variable",408,409,{"language-level":"0 term","location":"1 add-1.ced - 362","symbol":"2 y"}],["Equation",386,403,{"language-level":"0 type","kind":"1 ★"}],["Term variable",402,403,{"language-level":"0 term","location":"1 add-1.ced - 374","symbol":"2 z"}],["Term variable",400,401,{"language-level":"0 term","location":"1 add-1.ced - 350","symbol":"2 x"}],["Term variable",396,399,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",392,393,{"language-level":"0 term","location":"1 add-1.ced - 362","symbol":"2 y"}],["Term variable",390,391,{"language-level":"0 term","location":"1 add-1.ced - 350","symbol":"2 x"}],["Term variable",386,389,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Punctuation",384,405,{"not-for-navigation":"0 true"}],["Arrow type",384,413,{"language-level":"0 type","kind":"1 ★"}],["Term variable",374,375,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",378,381,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",372,373,{"not-for-navigation":"0 true"}],["Dependent function type",372,413,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",362,363,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",366,369,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",360,361,{"not-for-navigation":"0 true"}],["Dependent function type",360,413,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",350,351,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",354,357,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",348,349,{"not-for-navigation":"0 true"}],["Dependent function type",348,413,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",215,332,{"summary":"0 add-one-1 : Π n : Nat . ((add n one) ≃ (S n))","erasure":"1 λ n . (n (λ _ . λ h . β) β)"}],["Application of a term to a term",267,330,{"language-level":"0 term","expected-type":"1 ((add n one) ≃ (S n))","type":"2 ((add n one) ≃ (S n))"}],["Beta axiom",329,330,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add Z one) ≃ (S Z))"}],["Application of a term to a term",267,324,{"language-level":"0 term","type":"1 ((λ n : Nat . ((add n one) ≃ (S n))) Z) → ((λ n : Nat . ((add n one) ≃ (S n))) n)"}],["Rho",290,322,{"language-level":"0 term","the equation":"1 ((add _ one) ≃ (S _))","type":"2 ((λ s . λ z' . (s (_ (λ n' . S) one) (_ (λ n' . S) one s z'))) ≃ (S (S _)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",296,322,{"language-level":"0 term","the equation":"1 ((add n (S Z)) ≃ (S (add n Z)))","type":"2 ((λ s . λ z' . (s (S _) (S _ s z'))) ≃ (S (S _)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",321,322,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ s . λ z' . (s (S _) (S _ s z'))) ≃ (S (S _)))"}],["Application of a term to a term",300,316,{"language-level":"0 term","type":"1 ((add n (S Z)) ≃ (S (add n Z)))"}],["Term variable",315,316,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",300,314,{"language-level":"0 term","type":"1 Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Term variable",313,314,{"language-level":"0 term","location":"1 add-1.ced - 261","symbol":"2 n","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",300,312,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 359","symbol":"2 add-S-comm-1","type":"3 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Punctuation",298,318,{"not-for-navigation":"0 true"}],["Term variable",292,293,{"language-level":"0 term","location":"1 add-1.ced - 283","symbol":"2 h","type":"3 (λ n : Nat . ((add n one) ≃ (S n))) _","hnf of type":"4 ((add _ one) ≃ (S _))"}],["Epsilon",287,322,{"language-level":"0 term","type":"1 ((add (S _) one) ≃ (S (S _)))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",283,284,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ n : Nat . ((add n one) ≃ (S n))) _","hnf of type":"4 ((add _ one) ≃ (S _))"}],["Lambda abstraction (term-level)",281,322,{"language-level":"0 term","binder":"1 0","type":"2 ((λ n : Nat . ((add n one) ≃ (S n))) _) → ((λ n : Nat . ((add n one) ≃ (S n))) (S _))"}],["Punctuation",281,282,{"not-for-navigation":"0 true"}],["Term variable",277,278,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",275,322,{"language-level":"0 term","binder":"1 0","type":"2 Π n' : Nat . (((λ n : Nat . ((add n one) ≃ (S n))) n') → ((λ n : Nat . ((add n one) ≃ (S n))) (S n')))"}],["Punctuation",275,276,{"not-for-navigation":"0 true"}],["Punctuation",273,324,{"not-for-navigation":"0 true"}],["Application of a term to a type",267,268,{"language-level":"0 term","type":"1 (Π n' : Nat . (((λ n : Nat . ((add n one) ≃ (S n))) n') → ((λ n : Nat . ((add n one) ≃ (S n))) (S n')))) → ((λ n : Nat . ((add n one) ≃ (S n))) Z) → ((λ n : Nat . ((add n one) ≃ (S n))) n)"}],["Term variable",267,268,{"language-level":"0 term","location":"1 add-1.ced - 261","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",265,331,{"language-level":"0 term","expected-type":"1 ((add n one) ≃ (S n))","the motive":"2 λ n : Nat . ((add n one) ≃ (S n))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",261,262,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",259,331,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . ((add n one) ≃ (S n))"}],["Punctuation",259,260,{"not-for-navigation":"0 true"}],["Equation",239,254,{"language-level":"0 type","kind":"1 ★"}],["Term variable",253,254,{"language-level":"0 term","location":"1 add-1.ced - 229","symbol":"2 n"}],["Term variable",251,252,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",245,248,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 219","symbol":"2 one"}],["Term variable",243,244,{"language-level":"0 term","location":"1 add-1.ced - 229","symbol":"2 n"}],["Term variable",239,242,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",229,230,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",233,236,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",227,228,{"not-for-navigation":"0 true"}],["Dependent function type",227,254,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",52,213,{"summary":"0 add-comm : Π n : Nat . Π m : Nat . ((add n m) ≃ (add m n))","erasure":"1 λ n . λ m . (n (λ p . λ h . β) β)"}],["Application of a term to a term",123,211,{"language-level":"0 term","expected-type":"1 ((add n m) ≃ (add m n))","type":"2 ((add n m) ≃ (add m n))"}],["Rho",190,209,{"language-level":"0 term","the equation":"1 ((add m Z) ≃ m)","type":"2 (m ≃ (add m Z))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",208,209,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 (m ≃ m)"}],["Application of a term to a term",194,203,{"language-level":"0 term","type":"1 ((add m Z) ≃ m)"}],["Term variable",202,203,{"language-level":"0 term","location":"1 add-1.ced - 117","symbol":"2 m","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",194,201,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 159","symbol":"2 add-Z-1","type":"3 Π n : Nat . ((add n Z) ≃ n)","hnf of type":"4 Π n : Nat . ((add n Z) ≃ n)"}],["Punctuation",192,205,{"not-for-navigation":"0 true"}],["Epsilon",187,209,{"language-level":"0 term","type":"1 ((add Z m) ≃ (add m Z))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Punctuation",185,211,{"not-for-navigation":"0 true"}],["Application of a term to a term",123,180,{"language-level":"0 term","type":"1 ((λ n : Nat . ((add n m) ≃ (add m n))) Z) → ((λ n : Nat . ((add n m) ≃ (add m n))) n)"}],["Rho",146,178,{"language-level":"0 term","the equation":"1 ((add p m) ≃ (add m p))","type":"2 ((λ s . λ z' . (s (p (λ n' . S) m) (p (λ n' . S) m s z'))) ≃ (add m (S p)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",152,178,{"language-level":"0 term","the equation":"1 ((add m (S p)) ≃ (S (add m p)))","type":"2 ((λ s . λ z' . (s (add m p) (add m p s z'))) ≃ (add m (S p)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",177,178,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ s . λ z' . (s (add m p) (add m p s z'))) ≃ (S (add m p)))"}],["Application of a term to a term",156,172,{"language-level":"0 term","type":"1 ((add m (S p)) ≃ (S (add m p)))"}],["Term variable",171,172,{"language-level":"0 term","location":"1 add-1.ced - 133","symbol":"2 p","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",156,170,{"language-level":"0 term","type":"1 Π m' : Nat . ((add m (S m')) ≃ (S (add m m')))"}],["Term variable",169,170,{"language-level":"0 term","location":"1 add-1.ced - 117","symbol":"2 m","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",156,168,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 359","symbol":"2 add-S-comm-1","type":"3 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Punctuation",154,174,{"not-for-navigation":"0 true"}],["Term variable",148,149,{"language-level":"0 term","location":"1 add-1.ced - 139","symbol":"2 h","type":"3 (λ n : Nat . ((add n m) ≃ (add m n))) p","hnf of type":"4 ((add p m) ≃ (add m p))"}],["Epsilon",143,178,{"language-level":"0 term","type":"1 ((add (S p) m) ≃ (add m (S p)))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",139,140,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ n : Nat . ((add n m) ≃ (add m n))) p","hnf of type":"4 ((add p m) ≃ (add m p))"}],["Lambda abstraction (term-level)",137,178,{"language-level":"0 term","binder":"1 0","type":"2 ((λ n : Nat . ((add n m) ≃ (add m n))) p) → ((λ n : Nat . ((add n m) ≃ (add m n))) (S p))"}],["Punctuation",137,138,{"not-for-navigation":"0 true"}],["Term variable",133,134,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",131,178,{"language-level":"0 term","binder":"1 0","type":"2 Π n' : Nat . (((λ n : Nat . ((add n m) ≃ (add m n))) n') → ((λ n : Nat . ((add n m) ≃ (add m n))) (S n')))"}],["Punctuation",131,132,{"not-for-navigation":"0 true"}],["Punctuation",129,180,{"not-for-navigation":"0 true"}],["Application of a term to a type",123,124,{"language-level":"0 term","type":"1 (Π n' : Nat . (((λ n : Nat . ((add n m) ≃ (add m n))) n') → ((λ n : Nat . ((add n m) ≃ (add m n))) (S n')))) → ((λ n : Nat . ((add n m) ≃ (add m n))) Z) → ((λ n : Nat . ((add n m) ≃ (add m n))) n)"}],["Term variable",123,124,{"language-level":"0 term","location":"1 add-1.ced - 111","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",121,212,{"language-level":"0 term","expected-type":"1 ((add n m) ≃ (add m n))","the motive":"2 λ n : Nat . ((add n m) ≃ (add m n))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",117,118,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 m","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",115,212,{"language-level":"0 term","binder":"1 0","type":"2 Π m : Nat . ((add n m) ≃ (add m n))"}],["Punctuation",115,116,{"not-for-navigation":"0 true"}],["Term variable",111,112,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",109,212,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . Π m : Nat . ((add n m) ≃ (add m n))"}],["Punctuation",109,110,{"not-for-navigation":"0 true"}],["Equation",87,104,{"language-level":"0 type","kind":"1 ★"}],["Term variable",103,104,{"language-level":"0 term","location":"1 add-1.ced - 65","symbol":"2 n"}],["Term variable",101,102,{"language-level":"0 term","location":"1 add-1.ced - 77","symbol":"2 m"}],["Term variable",97,100,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",93,94,{"language-level":"0 term","location":"1 add-1.ced - 77","symbol":"2 m"}],["Term variable",91,92,{"language-level":"0 term","location":"1 add-1.ced - 65","symbol":"2 n"}],["Term variable",87,90,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",77,78,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 m","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",81,84,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",75,76,{"not-for-navigation":"0 true"}],["Dependent function type",75,104,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",65,66,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",69,72,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",63,64,{"not-for-navigation":"0 true"}],["Dependent function type",63,104,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Import of another source file",28,50,{"location":"0 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/S/S-0.ced - 1"}],["Import of another source file",1,27,{"location":"0 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 1"}]]}
