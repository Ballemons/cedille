{"spans":[["Cedille source file (/mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced)",1,846,{}],["Term-level definition (checking)",742,844,{"checking-mode":"0 checking","summary":"1 add-S-hop : Π a : Nat . Π b : Nat . ((add a (S b)) ≃ (add (S a) b))","erasure":"2 λ a . λ b . β"}],["Rho",818,842,{"language-level":"0 term","the equation":"1 ((add a (S b)) ≃ (S (add a b)))","type":"2 ((add a (S b)) ≃ (add (S a) b))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",841,842,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((S (add a b)) ≃ (add (S a) b))"}],["Application of a term to a term",821,837,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((add a (S b)) ≃ (S (add a b)))"}],["Term variable",836,837,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 814","symbol":"3 b","expected-type":"4 Nat","type":"5 Nat"}],["Application of a term to a term",821,835,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 Π m : Nat . ((add a (S m)) ≃ (S (add a m)))"}],["Term variable",834,835,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 808","symbol":"3 a","expected-type":"4 Nat","type":"5 Nat"}],["Term variable",821,833,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 323","symbol":"3 add-S-comm-1","type":"4 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","hnf of type":"5 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Parens",820,838,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",814,815,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 b","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",812,842,{"language-level":"0 term","binder":"1 0","type":"2 Π b : Nat . ((add a (S b)) ≃ (add (S a) b))"}],["Lambda",812,813,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",808,809,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 a","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",806,842,{"language-level":"0 term","binder":"1 0","type":"2 Π a : Nat . Π b : Nat . ((add a (S b)) ≃ (add (S a) b))"}],["Lambda",806,807,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",778,803,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",802,803,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 768","symbol":"3 b"}],["Term variable",799,800,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 756","symbol":"3 a"}],["Term variable",797,798,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",792,795,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",787,788,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 768","symbol":"3 b"}],["Term variable",785,786,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",782,783,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 756","symbol":"3 a"}],["Term variable",778,781,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",768,769,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 b","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",772,775,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",766,767,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",766,803,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",756,757,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 a","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",760,763,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",754,755,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",754,803,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",598,740,{"checking-mode":"0 checking","summary":"1 add-assoc : Π x : Nat . Π y : Nat . Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))","erasure":"2 λ x . λ y . λ z . (x (λ p . λ h . β) β)"}],["Application of a term to a term",708,738,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 ((add x (add y z)) ≃ (add (add x y) z))","type":"3 ((add x (add y z)) ≃ (add (add x y) z))"}],["Beta axiom",737,738,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((add Z (add y z)) ≃ (add (add Z y) z))"}],["Application of a term to a term",708,736,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) Z) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) x)"}],["Rho",727,734,{"language-level":"0 term","the equation":"1 ((add p (add y z)) ≃ (add (add p y) z))","type":"2 ((λ s . λ z' . (s (p (λ n' . S) (add y z)) (p (λ n' . S) (add y z) s z'))) ≃ (add (add (S p) y) z))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",733,734,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((λ s . λ z' . (s (add (add p y) z) (add (add p y) z s z'))) ≃ (add (add (S p) y) z))"}],["Term variable",729,730,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 720","symbol":"3 h","type":"4 (λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) p","hnf of type":"5 ((add p (add y z)) ≃ (add (add p y) z))"}],["Epsilon",724,734,{"checking-mode":"0 checking","language-level":"1 term","type":"2 ((add (S p) (add y z)) ≃ (add (add (S p) y) z))","explanation":"3 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",720,721,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 h","type":"4 (λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) p","hnf of type":"5 ((add p (add y z)) ≃ (add (add p y) z))"}],["Lambda abstraction (term-level)",718,734,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) p) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) (S p))"}],["Lambda",718,719,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",714,715,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 p","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",712,734,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) n) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) (S n)))"}],["Lambda",712,713,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Parens",710,736,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a type",708,709,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (Π n : Nat . (((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) n) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) (S n)))) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) Z) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) x)"}],["Term variable",708,709,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 690","symbol":"3 x","type":"4 Nat","hnf of type":"5 Nat"}],["Theta",706,739,{"language-level":"0 term","expected-type":"1 ((add x (add y z)) ≃ (add (add x y) z))","the motive":"2 λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",702,703,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 z","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",700,739,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))"}],["Lambda",700,701,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",696,697,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 y","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",694,739,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))"}],["Lambda",694,695,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",690,691,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 x","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",688,739,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))"}],["Lambda",688,689,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",646,683,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",682,683,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 636","symbol":"3 z"}],["Term variable",678,679,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 624","symbol":"3 y"}],["Term variable",676,677,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 612","symbol":"3 x"}],["Term variable",672,675,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",666,669,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",660,661,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 636","symbol":"3 z"}],["Term variable",658,659,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 624","symbol":"3 y"}],["Term variable",654,657,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",650,651,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 612","symbol":"3 x"}],["Term variable",646,649,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",636,637,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 z","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",640,643,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",634,635,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",634,683,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",624,625,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 y","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",628,631,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",622,623,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",622,683,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",612,613,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 x","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",616,619,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",610,611,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",610,683,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",444,596,{"checking-mode":"0 checking","summary":"1 add-S-comm : Π x : Nat . Π y : Nat . ((add (S x) (S y)) ≃ (S (S (add x y))))","erasure":"2 λ x . λ y . β"}],["Rho",539,594,{"language-level":"0 term","the equation":"1 ((add (S x) (S y)) ≃ (S (add x (S y))))","type":"2 ((add (S x) (S y)) ≃ (S (S (add x y))))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",568,594,{"language-level":"0 term","the equation":"1 ((add x (S y)) ≃ (S (add x y)))","type":"2 ((S (add x (S y))) ≃ (S (S (add x y))))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",593,594,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((S (S (add x y))) ≃ (S (S (add x y))))"}],["Application of a term to a term",572,588,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((add x (S y)) ≃ (S (add x y)))"}],["Term variable",587,588,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 535","symbol":"3 y","expected-type":"4 Nat","type":"5 Nat"}],["Application of a term to a term",572,586,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 Π m : Nat . ((add x (S m)) ≃ (S (add x m)))"}],["Term variable",585,586,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 529","symbol":"3 x","expected-type":"4 Nat","type":"5 Nat"}],["Term variable",572,584,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 323","symbol":"3 add-S-comm-1","type":"4 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","hnf of type":"5 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Parens",570,590,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a term",543,563,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((add (S x) (S y)) ≃ (S (add x (S y))))"}],["Application of a term to a term",559,562,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 Nat","type":"3 Nat"}],["Term variable",561,562,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 535","symbol":"3 y","expected-type":"4 Nat","type":"5 Nat"}],["Term variable",559,560,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S","type":"4 Nat → Nat","hnf of type":"5 Nat → Nat"}],["Parens",558,563,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a term",543,557,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 Π m : Nat . ((add (S x) m) ≃ (S (add x m)))"}],["Term variable",556,557,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 529","symbol":"3 x","expected-type":"4 Nat","type":"5 Nat"}],["Term variable",543,555,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 235","symbol":"3 add-S-comm-0","type":"4 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))","hnf of type":"5 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))"}],["Parens",541,565,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",535,536,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 y","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",533,594,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((add (S x) (S y)) ≃ (S (S (add x y))))"}],["Lambda",533,534,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",529,530,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 x","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",527,594,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((add (S x) (S y)) ≃ (S (S (add x y))))"}],["Lambda",527,528,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",481,522,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",517,518,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 471","symbol":"3 y"}],["Term variable",515,516,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 459","symbol":"3 x"}],["Term variable",511,514,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",507,508,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",503,504,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",497,498,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 471","symbol":"3 y"}],["Term variable",495,496,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",489,490,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 459","symbol":"3 x"}],["Term variable",487,488,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",481,484,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",471,472,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 y","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",475,478,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",469,470,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",469,522,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",459,460,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 x","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",463,466,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",457,458,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",457,522,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",323,442,{"checking-mode":"0 checking","summary":"1 add-S-comm-1 : Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","erasure":"2 λ n . λ m . (n (λ _ . λ h . β) β)"}],["Application of a term to a term",410,440,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 ((add n (S m)) ≃ (S (add n m)))","type":"3 ((add n (S m)) ≃ (S (add n m)))"}],["Beta axiom",439,440,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((add Z (S m)) ≃ (S (add Z m)))"}],["Application of a term to a term",410,438,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) Z) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n)"}],["Rho",429,436,{"language-level":"0 term","the equation":"1 ((add _ (S m)) ≃ (S (add _ m)))","type":"2 ((λ s . λ z' . (s (_ (λ n' . S) (S m)) (_ (λ n' . S) (S m) s z'))) ≃ (S (add (S _) m)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",435,436,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((λ s . λ z' . (s (S (add _ m)) (S (add _ m) s z'))) ≃ (S (add (S _) m)))"}],["Term variable",431,432,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 422","symbol":"3 h","type":"4 (λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) _","hnf of type":"5 ((add _ (S m)) ≃ (S (add _ m)))"}],["Epsilon",426,436,{"checking-mode":"0 checking","language-level":"1 term","type":"2 ((add (S _) (S m)) ≃ (S (add (S _) m)))","explanation":"3 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",422,423,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 h","type":"4 (λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) _","hnf of type":"5 ((add _ (S m)) ≃ (S (add _ m)))"}],["Lambda abstraction (term-level)",420,436,{"language-level":"0 term","binder":"1 0","type":"2 ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) _) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) (S _))"}],["Lambda",420,421,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",416,417,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",414,436,{"language-level":"0 term","binder":"1 0","type":"2 Π n' : Nat . (((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n') → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) (S n')))"}],["Lambda",414,415,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Parens",412,438,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a type",410,411,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (Π n' : Nat . (((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n') → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) (S n')))) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) Z) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n)"}],["Term variable",410,411,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 398","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Theta",408,441,{"language-level":"0 term","expected-type":"1 ((add n (S m)) ≃ (S (add n m)))","the motive":"2 λ n : Nat . ((add n (S m)) ≃ (S (add n m)))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",404,405,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 m","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",402,441,{"language-level":"0 term","binder":"1 0","type":"2 Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Lambda",402,403,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",398,399,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",396,441,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Lambda",396,397,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",362,391,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",388,389,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 352","symbol":"3 m"}],["Term variable",386,387,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 340","symbol":"3 n"}],["Term variable",382,385,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",378,379,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",372,373,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 352","symbol":"3 m"}],["Term variable",370,371,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",366,367,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 340","symbol":"3 n"}],["Term variable",362,365,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",352,353,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 m","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",356,359,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",350,351,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",350,391,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",340,341,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",344,347,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",338,339,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",338,391,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",235,321,{"checking-mode":"0 checking","summary":"1 add-S-comm-0 : Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))","erasure":"2 λ _ . λ _ . β"}],["Beta axiom",318,319,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((add (S _) _) ≃ (S (add _ _)))"}],["Term variable",314,315,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",312,319,{"language-level":"0 term","binder":"1 0","type":"2 Π m : Nat . ((add (S _) m) ≃ (S (add _ m)))"}],["Lambda",312,313,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",308,309,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",306,319,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))"}],["Lambda",306,307,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",274,303,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",300,301,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 264","symbol":"3 m"}],["Term variable",298,299,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 252","symbol":"3 n"}],["Term variable",294,297,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",290,291,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",286,287,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 264","symbol":"3 m"}],["Term variable",282,283,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 252","symbol":"3 n"}],["Term variable",280,281,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",274,277,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",264,265,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 m","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",268,271,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",262,263,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",262,303,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",252,253,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",256,259,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",250,251,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",250,303,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",155,233,{"checking-mode":"0 checking","summary":"1 add-Z-1 : Π n : Nat . ((add n Z) ≃ n)","erasure":"2 λ n . (n (λ _ . λ h . β) β)"}],["Application of a term to a term",201,231,{"checking-mode":"0 checking","language-level":"1 term","expected-type":"2 ((add n Z) ≃ n)","type":"3 ((add n Z) ≃ n)"}],["Beta axiom",230,231,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((add Z Z) ≃ Z)"}],["Application of a term to a term",201,229,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 ((λ n : Nat . ((add n Z) ≃ n)) Z) → ((λ n : Nat . ((add n Z) ≃ n)) n)"}],["Rho",220,227,{"language-level":"0 term","the equation":"1 ((add _ Z) ≃ _)","type":"2 ((λ s . λ z' . (s (_ (λ n' . S) Z) (_ (λ n' . S) Z s z'))) ≃ (S _))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",226,227,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((λ s . λ z' . (s _ (_ s z'))) ≃ (S _))"}],["Term variable",222,223,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 213","symbol":"3 h","type":"4 (λ n : Nat . ((add n Z) ≃ n)) _","hnf of type":"5 ((add _ Z) ≃ _)"}],["Epsilon",217,227,{"checking-mode":"0 checking","language-level":"1 term","type":"2 ((add (S _) Z) ≃ (S _))","explanation":"3 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",213,214,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 h","type":"4 (λ n : Nat . ((add n Z) ≃ n)) _","hnf of type":"5 ((add _ Z) ≃ _)"}],["Lambda abstraction (term-level)",211,227,{"language-level":"0 term","binder":"1 0","type":"2 ((λ n : Nat . ((add n Z) ≃ n)) _) → ((λ n : Nat . ((add n Z) ≃ n)) (S _))"}],["Lambda",211,212,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",207,208,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",205,227,{"language-level":"0 term","binder":"1 0","type":"2 Π n' : Nat . (((λ n : Nat . ((add n Z) ≃ n)) n') → ((λ n : Nat . ((add n Z) ≃ n)) (S n')))"}],["Lambda",205,206,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Parens",203,229,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Application of a term to a type",201,202,{"checking-mode":"0 synthesizing","language-level":"1 term","type":"2 (Π n' : Nat . (((λ n : Nat . ((add n Z) ≃ n)) n') → ((λ n : Nat . ((add n Z) ≃ n)) (S n')))) → ((λ n : Nat . ((add n Z) ≃ n)) Z) → ((λ n : Nat . ((add n Z) ≃ n)) n)"}],["Term variable",201,202,{"checking-mode":"0 synthesizing","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 195","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Theta",199,232,{"language-level":"0 term","expected-type":"1 ((add n Z) ≃ n)","the motive":"2 λ n : Nat . ((add n Z) ≃ n)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",195,196,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",193,232,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . ((add n Z) ≃ n)"}],["Lambda",193,194,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",177,188,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",187,188,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 167","symbol":"3 n"}],["Term variable",183,184,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"3 Z"}],["Term variable",181,182,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 167","symbol":"3 n"}],["Term variable",177,180,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",167,168,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",171,174,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",165,166,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",165,188,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",108,153,{"checking-mode":"0 checking","summary":"1 add-Z-0 : Π n : Nat . ((add Z n) ≃ n)","erasure":"2 λ _ . β"}],["Beta axiom",150,151,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((add Z _) ≃ _)"}],["Term variable",146,147,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",144,151,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . ((add Z n) ≃ n)"}],["Lambda",144,145,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",130,141,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",140,141,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 120","symbol":"3 n"}],["Term variable",136,137,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 120","symbol":"3 n"}],["Term variable",134,135,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"3 Z"}],["Term variable",130,133,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",120,121,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 n","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",124,127,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",118,119,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",118,141,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term-level definition (checking)",28,106,{"checking-mode":"0 checking","summary":"1 add-defn : Π x : Nat . Π y : Nat . ((add x y) ≃ (x (λ p . S) y))","erasure":"2 λ _ . λ _ . β"}],["Beta axiom",103,104,{"checking-mode":"0 checking","language-level":"1 term","explanation":"2 A term constant whose type states that β-equal terms are provably equal","type":"3 ((add _ _) ≃ (_ (λ p . S) _))"}],["Term variable",99,100,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",97,104,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((add _ y) ≃ (_ (λ p . S) y))"}],["Lambda",97,98,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Term variable",93,94,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 _","type":"4 Nat","hnf of type":"5 Nat"}],["Lambda abstraction (term-level)",91,104,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((add x y) ≃ (x (λ p . S) y))"}],["Lambda",91,92,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Equation",63,88,{"checking-mode":"0 checking","language-level":"1 type","kind":"2 ★"}],["Term variable",87,88,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 53","symbol":"3 y"}],["Term variable",83,84,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"3 S"}],["Term variable",73,74,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 41","symbol":"3 x"}],["Term variable",69,70,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 53","symbol":"3 y"}],["Term variable",67,68,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 41","symbol":"3 x"}],["Term variable",63,66,{"checking-mode":"0 checking","language-level":"1 term","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"3 add"}],["Term variable",53,54,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 y","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",57,60,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",51,52,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",51,88,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Term variable",41,42,{"checking-mode":"0 checking","language-level":"1 term","location":"2 missing - missing","symbol":"3 x","type":"4 Nat","hnf of type":"5 Nat"}],["Type variable",45,48,{"checking-mode":"0 checking","language-level":"1 type","location":"2 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"3 Nat","expected kind":"4 ★","kind":"5 ★"}],["Forall",39,40,{"punctuation":"0 true","not-for-navigation":"1 true"}],["Dependent function type",39,88,{"checking-mode":"0 checking","language-level":"1 type","binder":"2 0","kind":"3 ★"}],["Import of another source file",13,26,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/false.ced - 1"}],["Import of another source file",1,12,{"location":"0 /mnt/nfs/netapp2/grad/guneratne/cedille-stuff/cedille/lib/nat.ced - 1"}]]}
