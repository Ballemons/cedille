{"spans":[["Cedille source file (/space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced)",1,846,{}],["Term-level definition (checking)",742,844,{"summary":"0 add-S-hop : Π a : Nat . Π b : Nat . ((add a (S b)) ≃ (add (S a) b))","erasure":"1 λ a . λ b . β"}],["Rho",818,842,{"language-level":"0 term","the equation":"1 ((add a (S b)) ≃ (S (add a b)))","type":"2 ((add a (S b)) ≃ (add (S a) b))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",841,842,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((S (add a b)) ≃ (add (S a) b))"}],["Application of a term to a term",821,837,{"language-level":"0 term","type":"1 ((add a (S b)) ≃ (S (add a b)))"}],["Term variable",836,837,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 814","symbol":"2 b","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",821,835,{"language-level":"0 term","type":"1 Π m : Nat . ((add a (S m)) ≃ (S (add a m)))"}],["Term variable",834,835,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 808","symbol":"2 a","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",821,833,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 323","symbol":"2 add-S-comm-1","type":"3 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Punctuation",820,838,{"not-for-navigation":"0 true"}],["Term variable",814,815,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 b","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",812,842,{"language-level":"0 term","binder":"1 0","type":"2 Π b : Nat . ((add a (S b)) ≃ (add (S a) b))"}],["Punctuation",812,813,{"not-for-navigation":"0 true"}],["Term variable",808,809,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 a","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",806,842,{"language-level":"0 term","binder":"1 0","type":"2 Π a : Nat . Π b : Nat . ((add a (S b)) ≃ (add (S a) b))"}],["Punctuation",806,807,{"not-for-navigation":"0 true"}],["Equation",778,803,{"language-level":"0 type","kind":"1 ★"}],["Term variable",802,803,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 768","symbol":"2 b"}],["Term variable",799,800,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 756","symbol":"2 a"}],["Term variable",797,798,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",792,795,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",787,788,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 768","symbol":"2 b"}],["Term variable",785,786,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",782,783,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 756","symbol":"2 a"}],["Term variable",778,781,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",768,769,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 b","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",772,775,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",766,767,{"not-for-navigation":"0 true"}],["Dependent function type",766,803,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",756,757,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 a","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",760,763,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",754,755,{"not-for-navigation":"0 true"}],["Dependent function type",754,803,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",598,740,{"summary":"0 add-assoc : Π x : Nat . Π y : Nat . Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))","erasure":"1 λ x . λ y . λ z . (x (λ p . λ h . β) β)"}],["Application of a term to a term",708,738,{"language-level":"0 term","expected-type":"1 ((add x (add y z)) ≃ (add (add x y) z))","type":"2 ((add x (add y z)) ≃ (add (add x y) z))"}],["Beta axiom",737,738,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add Z (add y z)) ≃ (add (add Z y) z))"}],["Application of a term to a term",708,736,{"language-level":"0 term","type":"1 ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) Z) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) x)"}],["Rho",727,734,{"language-level":"0 term","the equation":"1 ((add p (add y z)) ≃ (add (add p y) z))","type":"2 ((λ s . λ z' . (s (p (λ n' . S) (add y z)) (p (λ n' . S) (add y z) s z'))) ≃ (add (add (S p) y) z))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",733,734,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ s . λ z' . (s (add (add p y) z) (add (add p y) z s z'))) ≃ (add (add (S p) y) z))"}],["Term variable",729,730,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 720","symbol":"2 h","type":"3 (λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) p","hnf of type":"4 ((add p (add y z)) ≃ (add (add p y) z))"}],["Epsilon",724,734,{"language-level":"0 term","type":"1 ((add (S p) (add y z)) ≃ (add (add (S p) y) z))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",720,721,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) p","hnf of type":"4 ((add p (add y z)) ≃ (add (add p y) z))"}],["Lambda abstraction (term-level)",718,734,{"language-level":"0 term","binder":"1 0","type":"2 ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) p) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) (S p))"}],["Punctuation",718,719,{"not-for-navigation":"0 true"}],["Term variable",714,715,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 p","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",712,734,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . (((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) n) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) (S n)))"}],["Punctuation",712,713,{"not-for-navigation":"0 true"}],["Punctuation",710,736,{"not-for-navigation":"0 true"}],["Application of a term to a type",708,709,{"language-level":"0 term","type":"1 (Π n : Nat . (((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) n) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) (S n)))) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) Z) → ((λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))) x)"}],["Term variable",708,709,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 690","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",706,739,{"language-level":"0 term","expected-type":"1 ((add x (add y z)) ≃ (add (add x y) z))","the motive":"2 λ x : Nat . ((add x (add y z)) ≃ (add (add x y) z))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",702,703,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",700,739,{"language-level":"0 term","binder":"1 0","type":"2 Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))"}],["Punctuation",700,701,{"not-for-navigation":"0 true"}],["Term variable",696,697,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",694,739,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))"}],["Punctuation",694,695,{"not-for-navigation":"0 true"}],["Term variable",690,691,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",688,739,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . Π z : Nat . ((add x (add y z)) ≃ (add (add x y) z))"}],["Punctuation",688,689,{"not-for-navigation":"0 true"}],["Equation",646,683,{"language-level":"0 type","kind":"1 ★"}],["Term variable",682,683,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 636","symbol":"2 z"}],["Term variable",678,679,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 624","symbol":"2 y"}],["Term variable",676,677,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 612","symbol":"2 x"}],["Term variable",672,675,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",666,669,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",660,661,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 636","symbol":"2 z"}],["Term variable",658,659,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 624","symbol":"2 y"}],["Term variable",654,657,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",650,651,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 612","symbol":"2 x"}],["Term variable",646,649,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",636,637,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 z","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",640,643,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",634,635,{"not-for-navigation":"0 true"}],["Dependent function type",634,683,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",624,625,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",628,631,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",622,623,{"not-for-navigation":"0 true"}],["Dependent function type",622,683,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",612,613,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",616,619,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",610,611,{"not-for-navigation":"0 true"}],["Dependent function type",610,683,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",444,596,{"summary":"0 add-S-comm : Π x : Nat . Π y : Nat . ((add (S x) (S y)) ≃ (S (S (add x y))))","erasure":"1 λ x . λ y . β"}],["Rho",539,594,{"language-level":"0 term","the equation":"1 ((add (S x) (S y)) ≃ (S (add x (S y))))","type":"2 ((add (S x) (S y)) ≃ (S (S (add x y))))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Rho",568,594,{"language-level":"0 term","the equation":"1 ((add x (S y)) ≃ (S (add x y)))","type":"2 ((S (add x (S y))) ≃ (S (S (add x y))))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",593,594,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((S (S (add x y))) ≃ (S (S (add x y))))"}],["Application of a term to a term",572,588,{"language-level":"0 term","type":"1 ((add x (S y)) ≃ (S (add x y)))"}],["Term variable",587,588,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 535","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Application of a term to a term",572,586,{"language-level":"0 term","type":"1 Π m : Nat . ((add x (S m)) ≃ (S (add x m)))"}],["Term variable",585,586,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 529","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",572,584,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 323","symbol":"2 add-S-comm-1","type":"3 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Punctuation",570,590,{"not-for-navigation":"0 true"}],["Application of a term to a term",543,563,{"language-level":"0 term","type":"1 ((add (S x) (S y)) ≃ (S (add x (S y))))"}],["Application of a term to a term",559,562,{"language-level":"0 term","expected-type":"1 Nat","type":"2 Nat"}],["Term variable",561,562,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 535","symbol":"2 y","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",559,560,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S","type":"3 Nat → Nat","hnf of type":"4 Nat → Nat"}],["Punctuation",558,563,{"not-for-navigation":"0 true"}],["Application of a term to a term",543,557,{"language-level":"0 term","type":"1 Π m : Nat . ((add (S x) m) ≃ (S (add x m)))"}],["Term variable",556,557,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 529","symbol":"2 x","expected-type":"3 Nat","type":"4 Nat"}],["Term variable",543,555,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 235","symbol":"2 add-S-comm-0","type":"3 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))","hnf of type":"4 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))"}],["Punctuation",541,565,{"not-for-navigation":"0 true"}],["Term variable",535,536,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",533,594,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((add (S x) (S y)) ≃ (S (S (add x y))))"}],["Punctuation",533,534,{"not-for-navigation":"0 true"}],["Term variable",529,530,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",527,594,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((add (S x) (S y)) ≃ (S (S (add x y))))"}],["Punctuation",527,528,{"not-for-navigation":"0 true"}],["Equation",481,522,{"language-level":"0 type","kind":"1 ★"}],["Term variable",517,518,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 471","symbol":"2 y"}],["Term variable",515,516,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 459","symbol":"2 x"}],["Term variable",511,514,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",507,508,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",503,504,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",497,498,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 471","symbol":"2 y"}],["Term variable",495,496,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",489,490,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 459","symbol":"2 x"}],["Term variable",487,488,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",481,484,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",471,472,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",475,478,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",469,470,{"not-for-navigation":"0 true"}],["Dependent function type",469,522,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",459,460,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",463,466,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",457,458,{"not-for-navigation":"0 true"}],["Dependent function type",457,522,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",323,442,{"summary":"0 add-S-comm-1 : Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))","erasure":"1 λ n . λ m . (n (λ _ . λ h . β) β)"}],["Application of a term to a term",410,440,{"language-level":"0 term","expected-type":"1 ((add n (S m)) ≃ (S (add n m)))","type":"2 ((add n (S m)) ≃ (S (add n m)))"}],["Beta axiom",439,440,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add Z (S m)) ≃ (S (add Z m)))"}],["Application of a term to a term",410,438,{"language-level":"0 term","type":"1 ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) Z) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n)"}],["Rho",429,436,{"language-level":"0 term","the equation":"1 ((add _ (S m)) ≃ (S (add _ m)))","type":"2 ((λ s . λ z' . (s (_ (λ n' . S) (S m)) (_ (λ n' . S) (S m) s z'))) ≃ (S (add (S _) m)))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",435,436,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ s . λ z' . (s (S (add _ m)) (S (add _ m) s z'))) ≃ (S (add (S _) m)))"}],["Term variable",431,432,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 422","symbol":"2 h","type":"3 (λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) _","hnf of type":"4 ((add _ (S m)) ≃ (S (add _ m)))"}],["Epsilon",426,436,{"language-level":"0 term","type":"1 ((add (S _) (S m)) ≃ (S (add (S _) m)))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",422,423,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) _","hnf of type":"4 ((add _ (S m)) ≃ (S (add _ m)))"}],["Lambda abstraction (term-level)",420,436,{"language-level":"0 term","binder":"1 0","type":"2 ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) _) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) (S _))"}],["Punctuation",420,421,{"not-for-navigation":"0 true"}],["Term variable",416,417,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",414,436,{"language-level":"0 term","binder":"1 0","type":"2 Π n' : Nat . (((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n') → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) (S n')))"}],["Punctuation",414,415,{"not-for-navigation":"0 true"}],["Punctuation",412,438,{"not-for-navigation":"0 true"}],["Application of a term to a type",410,411,{"language-level":"0 term","type":"1 (Π n' : Nat . (((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n') → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) (S n')))) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) Z) → ((λ n : Nat . ((add n (S m)) ≃ (S (add n m)))) n)"}],["Term variable",410,411,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 398","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",408,441,{"language-level":"0 term","expected-type":"1 ((add n (S m)) ≃ (S (add n m)))","the motive":"2 λ n : Nat . ((add n (S m)) ≃ (S (add n m)))","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",404,405,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 m","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",402,441,{"language-level":"0 term","binder":"1 0","type":"2 Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Punctuation",402,403,{"not-for-navigation":"0 true"}],["Term variable",398,399,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",396,441,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . Π m : Nat . ((add n (S m)) ≃ (S (add n m)))"}],["Punctuation",396,397,{"not-for-navigation":"0 true"}],["Equation",362,391,{"language-level":"0 type","kind":"1 ★"}],["Term variable",388,389,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 352","symbol":"2 m"}],["Term variable",386,387,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 340","symbol":"2 n"}],["Term variable",382,385,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",378,379,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",372,373,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 352","symbol":"2 m"}],["Term variable",370,371,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",366,367,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 340","symbol":"2 n"}],["Term variable",362,365,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",352,353,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 m","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",356,359,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",350,351,{"not-for-navigation":"0 true"}],["Dependent function type",350,391,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",340,341,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",344,347,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",338,339,{"not-for-navigation":"0 true"}],["Dependent function type",338,391,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",235,321,{"summary":"0 add-S-comm-0 : Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))","erasure":"1 λ _ . λ _ . β"}],["Beta axiom",318,319,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add (S _) _) ≃ (S (add _ _)))"}],["Term variable",314,315,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",312,319,{"language-level":"0 term","binder":"1 0","type":"2 Π m : Nat . ((add (S _) m) ≃ (S (add _ m)))"}],["Punctuation",312,313,{"not-for-navigation":"0 true"}],["Term variable",308,309,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",306,319,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . Π m : Nat . ((add (S n) m) ≃ (S (add n m)))"}],["Punctuation",306,307,{"not-for-navigation":"0 true"}],["Equation",274,303,{"language-level":"0 type","kind":"1 ★"}],["Term variable",300,301,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 264","symbol":"2 m"}],["Term variable",298,299,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 252","symbol":"2 n"}],["Term variable",294,297,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",290,291,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",286,287,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 264","symbol":"2 m"}],["Term variable",282,283,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 252","symbol":"2 n"}],["Term variable",280,281,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",274,277,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",264,265,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 m","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",268,271,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",262,263,{"not-for-navigation":"0 true"}],["Dependent function type",262,303,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",252,253,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",256,259,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",250,251,{"not-for-navigation":"0 true"}],["Dependent function type",250,303,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",155,233,{"summary":"0 add-Z-1 : Π n : Nat . ((add n Z) ≃ n)","erasure":"1 λ n . (n (λ _ . λ h . β) β)"}],["Application of a term to a term",201,231,{"language-level":"0 term","expected-type":"1 ((add n Z) ≃ n)","type":"2 ((add n Z) ≃ n)"}],["Beta axiom",230,231,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add Z Z) ≃ Z)"}],["Application of a term to a term",201,229,{"language-level":"0 term","type":"1 ((λ n : Nat . ((add n Z) ≃ n)) Z) → ((λ n : Nat . ((add n Z) ≃ n)) n)"}],["Rho",220,227,{"language-level":"0 term","the equation":"1 ((add _ Z) ≃ _)","type":"2 ((λ s . λ z' . (s (_ (λ n' . S) Z) (_ (λ n' . S) Z s z'))) ≃ (S _))","explanation":"3 Rewrite terms in the expected type, using an equation. "}],["Beta axiom",226,227,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((λ s . λ z' . (s _ (_ s z'))) ≃ (S _))"}],["Term variable",222,223,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 213","symbol":"2 h","type":"3 (λ n : Nat . ((add n Z) ≃ n)) _","hnf of type":"4 ((add _ Z) ≃ _)"}],["Epsilon",217,227,{"language-level":"0 term","type":"1 ((add (S _) Z) ≃ (S _))","explanation":"2 Normalize the left-hand side of the expected equation, using head reduction."}],["Term variable",213,214,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 h","type":"3 (λ n : Nat . ((add n Z) ≃ n)) _","hnf of type":"4 ((add _ Z) ≃ _)"}],["Lambda abstraction (term-level)",211,227,{"language-level":"0 term","binder":"1 0","type":"2 ((λ n : Nat . ((add n Z) ≃ n)) _) → ((λ n : Nat . ((add n Z) ≃ n)) (S _))"}],["Punctuation",211,212,{"not-for-navigation":"0 true"}],["Term variable",207,208,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",205,227,{"language-level":"0 term","binder":"1 0","type":"2 Π n' : Nat . (((λ n : Nat . ((add n Z) ≃ n)) n') → ((λ n : Nat . ((add n Z) ≃ n)) (S n')))"}],["Punctuation",205,206,{"not-for-navigation":"0 true"}],["Punctuation",203,229,{"not-for-navigation":"0 true"}],["Application of a term to a type",201,202,{"language-level":"0 term","type":"1 (Π n' : Nat . (((λ n : Nat . ((add n Z) ≃ n)) n') → ((λ n : Nat . ((add n Z) ≃ n)) (S n')))) → ((λ n : Nat . ((add n Z) ≃ n)) Z) → ((λ n : Nat . ((add n Z) ≃ n)) n)"}],["Term variable",201,202,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 195","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Theta",199,232,{"language-level":"0 term","expected-type":"1 ((add n Z) ≃ n)","the motive":"2 λ n : Nat . ((add n Z) ≃ n)","explanation":"3 Perform an elimination with the first term, after abstracting it from the expected type."}],["Term variable",195,196,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",193,232,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . ((add n Z) ≃ n)"}],["Punctuation",193,194,{"not-for-navigation":"0 true"}],["Equation",177,188,{"language-level":"0 type","kind":"1 ★"}],["Term variable",187,188,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 167","symbol":"2 n"}],["Term variable",183,184,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z"}],["Term variable",181,182,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 167","symbol":"2 n"}],["Term variable",177,180,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",167,168,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",171,174,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",165,166,{"not-for-navigation":"0 true"}],["Dependent function type",165,188,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",108,153,{"summary":"0 add-Z-0 : Π n : Nat . ((add Z n) ≃ n)","erasure":"1 λ _ . β"}],["Beta axiom",150,151,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add Z _) ≃ _)"}],["Term variable",146,147,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",144,151,{"language-level":"0 term","binder":"1 0","type":"2 Π n : Nat . ((add Z n) ≃ n)"}],["Punctuation",144,145,{"not-for-navigation":"0 true"}],["Equation",130,141,{"language-level":"0 type","kind":"1 ★"}],["Term variable",140,141,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 120","symbol":"2 n"}],["Term variable",136,137,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 120","symbol":"2 n"}],["Term variable",134,135,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 57","symbol":"2 Z"}],["Term variable",130,133,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",120,121,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 n","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",124,127,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",118,119,{"not-for-navigation":"0 true"}],["Dependent function type",118,141,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term-level definition (checking)",28,106,{"summary":"0 add-defn : Π x : Nat . Π y : Nat . ((add x y) ≃ (x (λ p . S) y))","erasure":"1 λ _ . λ _ . β"}],["Beta axiom",103,104,{"language-level":"0 term","explanation":"1 A term constant whose type states that β-equal terms are provably equal","type":"2 ((add _ _) ≃ (_ (λ p . S) _))"}],["Term variable",99,100,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",97,104,{"language-level":"0 term","binder":"1 0","type":"2 Π y : Nat . ((add _ y) ≃ (_ (λ p . S) y))"}],["Punctuation",97,98,{"not-for-navigation":"0 true"}],["Term variable",93,94,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 _","type":"3 Nat","hnf of type":"4 Nat"}],["Lambda abstraction (term-level)",91,104,{"language-level":"0 term","binder":"1 0","type":"2 Π x : Nat . Π y : Nat . ((add x y) ≃ (x (λ p . S) y))"}],["Punctuation",91,92,{"not-for-navigation":"0 true"}],["Equation",63,88,{"language-level":"0 type","kind":"1 ★"}],["Term variable",87,88,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 53","symbol":"2 y"}],["Term variable",83,84,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 41","symbol":"2 S"}],["Term variable",73,74,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 41","symbol":"2 x"}],["Term variable",69,70,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 53","symbol":"2 y"}],["Term variable",67,68,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat-thms/add/add-0.ced - 41","symbol":"2 x"}],["Term variable",63,66,{"language-level":"0 term","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 238","symbol":"2 add"}],["Term variable",53,54,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 y","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",57,60,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",51,52,{"not-for-navigation":"0 true"}],["Dependent function type",51,88,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Term variable",41,42,{"language-level":"0 term","location":"1 missing - missing","symbol":"2 x","type":"3 Nat","hnf of type":"4 Nat"}],["Type variable",45,48,{"language-level":"0 type","location":"1 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 35","symbol":"2 Nat","expected kind":"3 ★","kind":"4 ★"}],["Punctuation",39,40,{"not-for-navigation":"0 true"}],["Dependent function type",39,88,{"language-level":"0 type","binder":"1 0","kind":"2 ★"}],["Import of another source file",13,26,{"location":"0 /space/guneratne/cedille-stuff/cedille/lib/false.ced - 1"}],["Import of another source file",1,12,{"location":"0 /space/guneratne/cedille-stuff/cedille/lib/nat.ced - 1"}]]}
