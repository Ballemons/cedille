{--------------------------------------
 intrinsically parametric Parigot nats
---------------------------------------}

module Nat .

import top.
import cast.
import recType.
import bool.
import sum.

Zu ◂ Top = β{λ a . λ f . a}.
Su ◂ Top = β{λ p . λ n . λ a . λ f . f p (n a f)} .

NatF ◂ ★ ➔ ★ =
  λ NatC : ★ .
    ι x : ∀ X : ★ .
      Π z : X .
      (ι s : Top . Π p : NatC . Π x : X . {p z s ≃ x} ➾ X) ➔
      X .
    {x Zu Su ≃ x} .

NatFmap ◂ RecFunctor · NatF =
  Λ X . Λ Y . λ c .
    [ λ n . [ Λ Z . λ z . λ s .
                n.1 · Z z [ β{s} , λ p . λ x . Λ e . s.2 (cast · X · Y -c p) x -e],
                ρ+ n.2 - β{n} ] ,
              β{λ x . x}]. 
 
-- %%%%%%%%%%%%%%%%%%%%%%%%%

NatC ◂ ★ = Rec · NatF . 

NatFold ◂ NatF · NatC ➔ NatC =
  λ x . cast · (NatF · NatC) · NatC -(recFold · NatF -NatFmap) x .

NatUnfold ◂ NatC ➔ NatF · NatC =
  λ x . cast · NatC · (NatF · NatC) -(recUnfold · NatF -NatFmap) x .

Zc ◂ NatC = NatFold [Λ X . λ a . λ f . a , β{Zu}].

Sc ◂ Π p : NatC . Π n : NatC . {p ≃ n} ➾ NatC =
  λ p . λ n . Λ e .
    NatFold [Λ X . λ a . λ f .
               f.2 p ((NatUnfold n).1 · X a f) -(ρ e - β) ,
             ρ+ (NatUnfold n).2 - β{Su p n}].

-- %%%%%%%%%%%%%%%%%%%%%%%%%

NatP ◂ NatC ➔ ★ =
  λ n : NatC . ∀ X : ★ . ∀ P : X ➔ ★ .
    ∀ z : X . P z ➔
    ∀ s : ι s : Top . Π p : NatC . Π x : X . {p z s ≃ x} ➾ X .
      (Π n : NatC. ∀ x : X . ∀ e : {n z s ≃ x} . P x ➔ P (s.2 n x -e)) ➔
    P ((NatUnfold n).1 · X z s).

ZP ◂ NatP Zc = Λ X . Λ P . Λ z . λ pz . Λ s . λ ps . pz .

SP ◂ Π n : NatC . ∀ x : NatC . ∀ e : {n ≃ x} . NatP x ➔ NatP (Sc n x -e) =
  λ n . Λ x . Λ e . λ px .
  Λ X . Λ P . Λ z . λ pz . Λ s . λ ps .
    ps n -((NatUnfold x).1 · X z s) -(ρ e - β) (px · X · P -z pz -s ps).

-- %%%%%%%%%%%%%%%%%%%%%%%%%

Nat ◂ ★ = ι x : NatC . NatP x.

Z ◂ Nat = [ Zc , ZP].
Si ◂ Π p : NatC . Π n : Nat . {p ≃ n} ➾ Nat =
  λ p . λ n . Λ e . [ Sc p n.1 -e , SP p -n.1 -e n.2 ].

NatIndh ◂
  Π n : Nat . 
  ∀ P : Nat ➔ ★ .
  P Z ➔
  (Π p : NatC . ∀ n : Nat . ∀ e : {p ≃ n} . P n ➔ P (Si p n -e)) ➔
  P n
=
  λ n . Λ P . λ pZ . λ pS . 
   ρ ς (NatUnfold n.1).2 - (n.2 · Nat · P -Z pZ -[β{Sc},(λ p . λ n . Λ e . Si p n -(ρ ς (NatUnfold p).2 - e))]
     (λ n . Λ x . Λ e . λ px . pS n -x -(ρ ς (NatUnfold n).2 - e) px)) .

S ◂ Nat ➔ Nat = λ n . Si n.1 n -β .

NatInd ◂
  Π n : Nat . 
  ∀ P : Nat ➔ ★ .
  P Z ➔
  (Π p : Nat . P p ➔ P (S p)) ➔
  P n
=
  λ n . Λ P . λ pz . λ ps .
    NatIndh n · P pz
      (λ p . Λ n . Λ e . λ pn .
        ρ ς e - (ps (changeType · NatC · Nat p -n -e) (ρ e - pn))) .

NatRec ◂ Nat ➔ ∀ X : ★ . X ➔ (Nat ➔ X ➔ X) ➔ X =
  λ n . Λ X . λ z . λ s .
    NatInd n · (λ _ : Nat . X) z s .

add ◂ Nat ➔ Nat ➔ Nat = λ m . λ n . NatRec m · Nat n (λ _ . S) .

mult ◂ Nat ➔ Nat ➔ Nat = λ m . λ n . NatRec m · Nat Z (λ _ . add n).

exp ◂ Nat ➔ Nat ➔ Nat = λ m . λ n . NatRec n · Nat (S Z) (λ _ . mult m)  .

pred ◂ Nat ➔ Nat =
  λ n . NatRec n · Nat Z (λ p . λ _ . p).

predS ◂ Π n : Nat . {pred (S n) ≃ n} =
  λ n . ε β .

isZero ◂ Nat ➔ Bool =
 λ n . NatRec n · Bool tt (λ _ . λ _ . ff) .

isSuc ◂ Nat ➔ Bool =
 λ n . NatRec n · Bool ff (λ _ . λ _ . tt) .

lt ◂ Nat ➔ Nat ➔ Bool =
  λ n . NatRec n · (Nat ➔ Bool)
         isSuc
         (λ _ . λ f . λ m . f (pred m)).

Lt ◂ Nat ➔ Nat ➔ ★ = λ n : Nat . λ m : Nat . { lt n m ≃ tt }.

Lte ◂ Nat ➔ Nat ➔ ★ = λ n : Nat . λ m : Nat . Sum · (Lt n m) · { n ≃ m }.
