import nat.
import not.

compare-eq ⇐ Π x : Nat . Π y : Nat . (compare x y ≃ EQ) → x ≃ y =
  λ x . θ x (λ p . λ r . λ y . 
              θ y (λ p' . λ r' . λ u . ρ (r p' u) - β) (λ u . δ u)) 
            (λ y . θ y (λ p' . λ r' . λ u . δ u) (λ u . β)) .

eqnat-eq ⇐ Π x : Nat . Π y : Nat . (eqnat x y ≃ tt) → x ≃ y = 
  λ x . λ y . λ u . θ+ (compare x y) (λ v . δ (ρ v - εl u)) (compare-eq x y) (λ v . δ (ρ v - εl u)) .


eqnat-S ⇐ Π x : Nat . eqnat x (S x) ≃ ff =
  λ x . θ x (λ p . λ u . ρ u - β) β .

eqnat-refl ⇐ Π x : Nat . eqnat x x ≃ tt =
  λ x . θ x ( λ px . λ h . ρ h
      	      	       	     - β )
  β .

eqnat-sym ⇐ Π x : Nat . Π y : Nat . eqnat x y ≃ eqnat y x = 
  λ x . θ x 
          (λ x . λ u . λ y . 
               θ y (λ y . λ v . (u y)) β)
          (λ y . θ y (λ py . λ u . β) β) .

eqnat-defn ⇐ Π x : Nat . Π y : Nat . ( x ≃ y ) → eqnat x y ≃ tt =
  λ x . λ y . λ pf . ρ pf
                     - ρ ( eqnat-refl y )
		       - β .

Lte-Z ⇐ Π x : Nat . Lte x Z → x ≃ Z =
  λ x . θ x (λ n . λ r . λ u . δ u) (λ u . β) .
  
Z-Lte ⇐ Π x : Nat . Lte Z x =
  λ x . θ x (λ n . λ _ . β) β .

Not-Lt-Z ⇐ Π x : Nat . Not · (Lt x Z) =
  λ x . θ x (λ n . λ r . λ u . δ u) (λ u . δ u) .

Gte-Z ⇐ Π x : Nat . Gte x Z =
  λ x . θ x (λ n . λ _ . β) β .

Lte-refl ⇐ Π x : Nat . Lte x x =
  λ x .
    θ x (λ p . λ r . r) β .

Lte-S-0 ⇐ Π x : Nat . Π y : Nat . Lte (S x) y → Lte x y = 
 λ x . θ x (λ px . λ r . λ y . 
              θ y (λ py . λ _ . λ u . r py u) (λ u . δ u))
           (λ y . λ u . Z-Lte y).

compare-eq-trans ⇐ Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . ( compare x y ≃ EQ ) → ( compare y z ≃ o ) → ( compare x z ≃ o ) =
  λ x . λ y . λ z . λ o . λ pf-xy . λ pf-yz . ρ ( compare-eq x y pf-xy ) - ρ ( ς pf-yz ) - β .

compare-trans-eq ⇐ Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . ( compare x y ≃ o ) → ( compare y z ≃ EQ ) → ( compare x z ≃ o ) =
  λ x . λ y . λ z . λ o . λ pf-xy . λ pf-yz . ρ ( ς pf-xy ) - ρ ( compare-eq y z pf-yz ) - β .

compare-trans ⇐ Π x : Nat . Π y : Nat . Π z : Nat . Π o : compare-t . ( compare x y ≃ o ) → ( compare y z ≃ o ) → ( compare x z ≃ o ) =
  λ x . θ x
    ( λ px . λ hx . λ y . θ y
      ( λ py . λ _ . λ z . θ z
      	( λ pz . λ _ . λ o . λ pf-xy . λ pf-yz . ρ ( hx py pz o pf-xy pf-yz ) - β )
	( λ o . λ _ . λ pf-yz . ρ ( ς pf-yz ) - β ) )
      ( λ z . θ z
        ( λ _ . λ _ . λ o . λ pf-xy . λ pf-yz . δ ( ρ ( ς pf-xy ) - pf-yz ) )
	( λ o . λ pf-xy . λ pf-yz . δ ( ρ ( ς pf-xy ) - pf-yz ) ) ) )
    ( λ y . θ y
      ( λ _ . λ _ . λ z . θ z
        ( λ _ . λ _ . λ o . λ pf-xy . λ _ . ρ ( ς pf-xy ) - β )
	( λ _ . λ pf-xy . λ pf-yz . δ ( ρ ( ς pf-xy ) - pf-yz ) ) )
      ( λ z . θ z
        ( λ _ . λ _ . λ o . λ pf-xy . λ pf-yz . δ ( ρ ( ς pf-xy ) - pf-yz ) )
	( λ _ . λ pf-xy . λ _ . pf-xy ) ) ) .
